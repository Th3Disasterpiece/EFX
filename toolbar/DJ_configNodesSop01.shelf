<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <tool name="cfgCamFur" label="cfg Camera Furstum" icon="MISC_generic">
    <toolMenuContext name="network">
      <contextOpType>Sop/null</contextOpType>
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if "outputnodename" in kwargs and "inputindex" in kwargs:
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if "inputnodename" in kwargs and "outputindex" in kwargs:
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9
    if "autoplace" in kwargs:
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if "shiftclick" in kwargs and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if "nodepositionx" in kwargs and             "nodepositiony" in kwargs:
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if "node_bbox" in kwargs:
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'

pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if 'volumebound' not in child_type:
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r'''
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_IN_geo (Sop/null)
set _obj_geo1_IN_geo = `run("opadd -e -n -v null IN_geo")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_IN_geo
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_IN_geo
opexprlanguage -s hscript $_obj_geo1_IN_geo
opuserdata -n '___toolcount___' -v '3' $_obj_geo1_IN_geo
opuserdata -n '___toolid___' -v 'configCamFrustum' $_obj_geo1_IN_geo
opset -p on $_obj_geo1_IN_geo
opcf $arg1

# Node $_obj_geo1_peak1 (Sop/peak)
set _obj_geo1_peak1 = `run("opadd -e -n -v peak peak1")`
oplocate -x `$arg2 + 2.5236902919062798` -y `$arg3 + -1.8810206928700577` $_obj_geo1_peak1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_peak1
opexprlanguage -s hscript $_obj_geo1_peak1
opuserdata -n '___toolcount___' -v '3' $_obj_geo1_peak1
opuserdata -n '___toolid___' -v 'configCamFrustum' $_obj_geo1_peak1
opset -p on $_obj_geo1_peak1
opcf $arg1

# Node $_obj_geo1_blast1 (Sop/blast)
set _obj_geo1_blast1 = `run("opadd -e -n -v blast blast1")`
oplocate -x `$arg2 + 0.17849621436822272` -y `$arg3 + -4.2339279401306396` $_obj_geo1_blast1
opparm -V 20.0.547 $_obj_geo1_blast1 group ( camFru ) grouptype ( points ) negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_blast1
opexprlanguage -s hscript $_obj_geo1_blast1
opuserdata -n '___toolcount___' -v '3' $_obj_geo1_blast1
opuserdata -n '___toolid___' -v 'configCamFrustum' $_obj_geo1_blast1
opset -p on $_obj_geo1_blast1
opcf $arg1

# Node $_obj_geo1_group1 (Sop/groupcreate)
set _obj_geo1_group1 = `run("opadd -e -n -v groupcreate group1")`
oplocate -x `$arg2 + 0.17849621436822272` -y `$arg3 + -2.8810207047909868` $_obj_geo1_group1
opparm -V 20.0.547 $_obj_geo1_group1 groupname ( camFru ) grouptype ( point ) groupbase ( off ) groupbounding ( on ) boundtype ( usebobject )
opset -d on -r on -h on -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_group1
opexprlanguage -s hscript $_obj_geo1_group1
opuserdata -n '___toolcount___' -v '3' $_obj_geo1_group1
opuserdata -n '___toolid___' -v 'configCamFrustum' $_obj_geo1_group1
opset -p on $_obj_geo1_group1
opcf $arg1

# Node $_obj_geo1_volume1 (Sop/volume)
set _obj_geo1_volume1 = `run("opadd -e -n -v volume volume1")`
oplocate -x `$arg2 + 2.533240274752063` -y `$arg3 + 0.075764724876876244` $_obj_geo1_volume1
opparm -V 20.0.547 $_obj_geo1_volume1 name ( density ) initialval ( 1 0 0 ) dimensionsource ( 1 1 ) camera ( /obj/renderCam ) zmin ( 0 ) zmax ( 200 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_volume1
opexprlanguage -s hscript $_obj_geo1_volume1
opuserdata -n '___toolcount___' -v '3' $_obj_geo1_volume1
opuserdata -n '___toolid___' -v 'configCamFrustum' $_obj_geo1_volume1
opset -p on $_obj_geo1_volume1
opcf $arg1

# Node $_obj_geo1_volumebound1 (Sop/volumebound)
set _obj_geo1_volumebound1 = `run("opadd -e -n -v volumebound volumebound1")`
oplocate -x `$arg2 + 2.5236902919062798` -y `$arg3 + -0.88102068094912855` $_obj_geo1_volumebound1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_volumebound1
opexprlanguage -s hscript $_obj_geo1_volumebound1
opuserdata -n '___toolcount___' -v '3' $_obj_geo1_volumebound1
opuserdata -n '___toolid___' -v 'configCamFrustum' $_obj_geo1_volumebound1
opset -p on $_obj_geo1_volumebound1

opcf $arg1
opcf $arg1
opwire -n $_obj_geo1_volumebound1 -0 $_obj_geo1_peak1
opcf $arg1
opwire -n $_obj_geo1_group1 -0 $_obj_geo1_blast1
opcf $arg1
opwire -n $_obj_geo1_IN_geo -0 $_obj_geo1_group1
opwire -n $_obj_geo1_peak1 -1 $_obj_geo1_group1
opcf $arg1
opcf $arg1
opwire -n $_obj_geo1_volume1 -0 $_obj_geo1_volumebound1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_blast1
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_IN_geo
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="cfgGeoPrep01" label="cfg GeoPrep 01" icon="MISC_generic">
    <toolMenuContext name="network">
      <contextOpType>Sop/null</contextOpType>
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if "outputnodename" in kwargs and "inputindex" in kwargs:
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if "inputnodename" in kwargs and "outputindex" in kwargs:
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9
    if "autoplace" in kwargs:
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if "shiftclick" in kwargs and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if "nodepositionx" in kwargs and             "nodepositiony" in kwargs:
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if "node_bbox" in kwargs:
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'

pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if 'attribwrangle' not in child_type:
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r'''
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_IN_animGeo_crag01 (Sop/null)
set _obj_geo1_IN_animGeo_crag01 = `run("opadd -e -n -v null IN_animGeo_crag01")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_IN_animGeo_crag01
opcolor -c 0 0 0 $_obj_geo1_IN_animGeo_crag01
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_IN_animGeo_crag01
opexprlanguage -s hscript $_obj_geo1_IN_animGeo_crag01
opset -p on $_obj_geo1_IN_animGeo_crag01
opcf $arg1

# Node $_obj_geo1_attribdelete1 (Sop/attribdelete)
set _obj_geo1_attribdelete1 = `run("opadd -e -n -v attribdelete attribdelete1")`
oplocate -x `$arg2 + 4.4656622743937424` -y `$arg3 + -12.495011786578974` $_obj_geo1_attribdelete1
opparm $_obj_geo1_attribdelete1 negate ( on ) ptdel ( 'N P v __tempId rest' )
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_geo1_attribdelete1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_attribdelete1
opexprlanguage -s hscript $_obj_geo1_attribdelete1
opuserdata -n '___Version___' -v '' $_obj_geo1_attribdelete1
opset -p on $_obj_geo1_attribdelete1
opcf $arg1

# Node $_obj_geo1_switch2 (Sop/switch)
set _obj_geo1_switch2 = `run("opadd -e -n -v switch switch2")`
oplocate -x `$arg2 + 2.4504771882040801` -y `$arg3 + -6.1837490329086124` $_obj_geo1_switch2
opparm -V 20.0.547 $_obj_geo1_switch2 input ( 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_switch2
opexprlanguage -s hscript $_obj_geo1_switch2
opset -p on $_obj_geo1_switch2
opcf $arg1

# Node $_obj_geo1_groupdelete1 (Sop/groupdelete)
set _obj_geo1_groupdelete1 = `run("opadd -e -n -v groupdelete groupdelete1")`
oplocate -x `$arg2 + 4.4691122694644374` -y `$arg3 + -13.730344050564204` $_obj_geo1_groupdelete1
opparm $_obj_geo1_groupdelete1  deletions ( 1 )
opparm -V 20.0.547 $_obj_geo1_groupdelete1 group1 ( * )
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_geo1_groupdelete1
opset -d off -r off -h on -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_groupdelete1
opexprlanguage -s hscript $_obj_geo1_groupdelete1
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_groupdelete1
opset -p on $_obj_geo1_groupdelete1
opcf $arg1

# Node $_obj_geo1_restFrame (Sop/timeshift)
set _obj_geo1_restFrame = `run("opadd -e -n -v timeshift restFrame")`
oplocate -x `$arg2 + 1.2992569528690998` -y `$arg3 + -5.0253736886582425` $_obj_geo1_restFrame
chblockbegin
chadd -t 0 0 $_obj_geo1_restFrame frame
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F '$RFSTART' $_obj_geo1_restFrame/frame
chadd -t 0 0 $_obj_geo1_restFrame time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_restFrame/time
chadd -t 0 0 $_obj_geo1_restFrame frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_restFrame/frange1
chadd -t 0 0 $_obj_geo1_restFrame frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_restFrame/frange2
chadd -t 0 0 $_obj_geo1_restFrame trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_restFrame/trange1
chadd -t 0 0 $_obj_geo1_restFrame trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_restFrame/trange2
chblockend
opparm -V 20.0.547 $_obj_geo1_restFrame frame ( frame )
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_geo1_restFrame
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_restFrame
opexprlanguage -s hscript $_obj_geo1_restFrame
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_restFrame
opset -p on $_obj_geo1_restFrame
opcf $arg1

# Node $_obj_geo1_rest (Sop/attribwrangle)
set _obj_geo1_rest = `run("opadd -e -n -v attribwrangle rest")`
oplocate -x `$arg2 + -3.5393319676352317` -y `$arg3 + -10.36527160982679` $_obj_geo1_rest
opparm $_obj_geo1_rest  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_rest snippet ( 'v@P = @rest;' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_rest
opexprlanguage -s hscript $_obj_geo1_rest
opuserdata -n '___Version___' -v '' $_obj_geo1_rest
opset -p on $_obj_geo1_rest
opcf $arg1

# Node $_obj_geo1_tempId (Sop/attribwrangle)
set _obj_geo1_tempId = `run("opadd -e -n -v attribwrangle tempId")`
oplocate -x `$arg2 + -0.0029999965336173773` -y `$arg3 + -3.4051940090643065` $_obj_geo1_tempId
opparm $_obj_geo1_tempId  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_tempId snippet ( 'i@__tempId = i@ptnum;' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_tempId
opexprlanguage -s hscript $_obj_geo1_tempId
opuserdata -n '___Version___' -v '' $_obj_geo1_tempId
opset -p on $_obj_geo1_tempId
opcf $arg1

# Node $_obj_geo1_rest1 (Sop/rest)
set _obj_geo1_rest1 = `run("opadd -e -n -v rest rest1")`
oplocate -x `$arg2 + 0.22880585303462331` -y `$arg3 + -7.5752491848839307` $_obj_geo1_rest1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_rest1
opexprlanguage -s hscript $_obj_geo1_rest1
opset -p on $_obj_geo1_rest1
opcf $arg1

# Node $_obj_geo1_groupdelete2 (Sop/groupdelete)
set _obj_geo1_groupdelete2 = `run("opadd -e -n -v groupdelete groupdelete2")`
oplocate -x `$arg2 + -3.5363319661723103` -y `$arg3 + -13.343940030151057` $_obj_geo1_groupdelete2
opparm $_obj_geo1_groupdelete2  deletions ( 1 )
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_geo1_groupdelete2
opset -d off -r off -h on -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_groupdelete2
opexprlanguage -s hscript $_obj_geo1_groupdelete2
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_groupdelete2
opset -p on $_obj_geo1_groupdelete2
opcf $arg1

# Node $_obj_geo1_attribcopy1 (Sop/attribcopy)
set _obj_geo1_attribcopy1 = `run("opadd -e -n -v attribcopy attribcopy1")`
oplocate -x `$arg2 + 0.78981404888739437` -y `$arg3 + -20.736659224786496` $_obj_geo1_attribcopy1
opparm -V 20.0.547 $_obj_geo1_attribcopy1 matchbyattribute ( on ) attributetomatch ( __tempId ) attribname ( 'P v N' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_attribcopy1
opexprlanguage -s hscript $_obj_geo1_attribcopy1
opset -p on $_obj_geo1_attribcopy1
opcf $arg1

# Node $_obj_geo1_OUT_animGeo_crag01 (Sop/null)
set _obj_geo1_OUT_animGeo_crag01 = `run("opadd -e -n -v null OUT_animGeo_crag01")`
oplocate -x `$arg2 + 0.79326606031383973` -y `$arg3 + -22.972293136961724` $_obj_geo1_OUT_animGeo_crag01
opcolor -c 0 0 0 $_obj_geo1_OUT_animGeo_crag01
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_OUT_animGeo_crag01
opexprlanguage -s hscript $_obj_geo1_OUT_animGeo_crag01
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_OUT_animGeo_crag01
opset -p on $_obj_geo1_OUT_animGeo_crag01
opcf $arg1

# Node $_obj_geo1_normal1 (Sop/normal)
set _obj_geo1_normal1 = `run("opadd -e -n -v normal normal1")`
oplocate -x `$arg2 + 0` -y `$arg3 + -2.3352597792033478` $_obj_geo1_normal1
opparm -V 20.0.547 $_obj_geo1_normal1 type ( typepoint )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_normal1
opexprlanguage -s hscript $_obj_geo1_normal1
opset -p on $_obj_geo1_normal1
opcf $arg1

# Node $_obj_geo1_unpack3 (Sop/unpack)
set _obj_geo1_unpack3 = `run("opadd -e -n -v unpack unpack3")`
oplocate -x `$arg2 + 1.3969838619232178e-08` -y `$arg3 + -1.3352597672824196` $_obj_geo1_unpack3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_unpack3
opexprlanguage -s hscript $_obj_geo1_unpack3
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_unpack3
opset -p on $_obj_geo1_unpack3
opcf $arg1

# Node $_obj_geo1_attribdelete2 (Sop/attribdelete)
set _obj_geo1_attribdelete2 = `run("opadd -e -n -v attribdelete attribdelete2")`
oplocate -x `$arg2 + -3.5397819661723102` -y `$arg3 + -12.108605030151056` $_obj_geo1_attribdelete2
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_geo1_attribdelete2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_attribdelete2
opexprlanguage -s hscript $_obj_geo1_attribdelete2
opuserdata -n '___Version___' -v '' $_obj_geo1_attribdelete2
opset -p on $_obj_geo1_attribdelete2
opcf $arg1

# Node $_obj_geo1_trail1 (Sop/trail)
set _obj_geo1_trail1 = `run("opadd -e -n -v trail trail1")`
oplocate -x `$arg2 + 4.4691122694644383` -y `$arg3 + -11.364271634622321` $_obj_geo1_trail1
opparm -V 20.0.547 $_obj_geo1_trail1 result ( velocity )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_trail1
opexprlanguage -s hscript $_obj_geo1_trail1
opset -p on $_obj_geo1_trail1
opcf $arg1

# Node $_obj_geo1_attribdelete3 (Sop/attribdelete)
set _obj_geo1_attribdelete3 = `run("opadd -e -n -v attribdelete attribdelete3")`
oplocate -x `$arg2 + -3.4034460131251056` -y `$arg3 + -18.820911181937259` $_obj_geo1_attribdelete3
opparm $_obj_geo1_attribdelete3 ptdel ( N )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_attribdelete3
opexprlanguage -s hscript $_obj_geo1_attribdelete3
opuserdata -n '___Version___' -v '' $_obj_geo1_attribdelete3
opset -p on $_obj_geo1_attribdelete3
opcf $arg1

# Node $_obj_geo1_OUT_restGeo_crag01 (Sop/null)
set _obj_geo1_OUT_restGeo_crag01 = `run("opadd -e -n -v null OUT_restGeo_crag01")`
oplocate -x `$arg2 + -3.5363319711016148` -y `$arg3 + -17.31620368922372` $_obj_geo1_OUT_restGeo_crag01
opcolor -c 0 0 0 $_obj_geo1_OUT_restGeo_crag01
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_OUT_restGeo_crag01
opexprlanguage -s hscript $_obj_geo1_OUT_restGeo_crag01
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_OUT_restGeo_crag01
opset -p on $_obj_geo1_OUT_restGeo_crag01
opcf $arg1

# Node $_obj_geo1_add1 (Sop/add)
set _obj_geo1_add1 = `run("opadd -e -n -v add add1")`
oplocate -x `$arg2 + 4.4691122694644383` -y `$arg3 + -10.364271622701393` $_obj_geo1_add1
opparm $_obj_geo1_add1  points ( 0 ) prims ( 1 )
opparm -V 20.0.547 $_obj_geo1_add1 keep ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_add1
opexprlanguage -s hscript $_obj_geo1_add1
opset -p on $_obj_geo1_add1
opcf $arg1

# Node $_obj_geo1_OUT_animpts_crag01 (Sop/null)
set _obj_geo1_OUT_animpts_crag01 = `run("opadd -e -n -v null OUT_animpts_crag01")`
oplocate -x `$arg2 + 4.4691122694644374` -y `$arg3 + -17.31620368922372` $_obj_geo1_OUT_animpts_crag01
opcolor -c 0 0 0 $_obj_geo1_OUT_animpts_crag01
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_OUT_animpts_crag01
opexprlanguage -s hscript $_obj_geo1_OUT_animpts_crag01
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_OUT_animpts_crag01
opset -p on $_obj_geo1_OUT_animpts_crag01
opcf $arg1

# Node $_obj_geo1_pref (Sop/attribwrangle)
set _obj_geo1_pref = `run("opadd -e -n -v attribwrangle pref")`
oplocate -x `$arg2 + 4.2443269830468431` -y `$arg3 + -5.0263736757836392` $_obj_geo1_pref
opparm $_obj_geo1_pref  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_pref snippet ( 'v@P = v@rest;' )
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_geo1_pref
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_pref
opexprlanguage -s hscript $_obj_geo1_pref
opuserdata -n '___Version___' -v '' $_obj_geo1_pref
opset -p on $_obj_geo1_pref

opcf $arg1
opwire -n $_obj_geo1_attribcopy2 -0 $_obj_geo1_IN_animGeo_crag01
opcf $arg1
opwire -n $_obj_geo1_trail1 -0 $_obj_geo1_attribdelete1
opcf $arg1
opwire -n $_obj_geo1_restFrame -0 $_obj_geo1_switch2
opwire -n $_obj_geo1_pref -1 $_obj_geo1_switch2
opcf $arg1
opwire -n $_obj_geo1_attribdelete1 -0 $_obj_geo1_groupdelete1
opcf $arg1
opwire -n $_obj_geo1_tempId -0 $_obj_geo1_restFrame
opcf $arg1
opwire -n $_obj_geo1_rest1 -0 $_obj_geo1_rest
opcf $arg1
opwire -n $_obj_geo1_normal1 -0 $_obj_geo1_tempId
opcf $arg1
opwire -n $_obj_geo1_tempId -0 $_obj_geo1_rest1
opwire -n $_obj_geo1_switch2 -1 $_obj_geo1_rest1
opcf $arg1
opwire -n $_obj_geo1_attribdelete2 -0 $_obj_geo1_groupdelete2
opcf $arg1
opwire -n $_obj_geo1_attribdelete3 -0 $_obj_geo1_attribcopy1
opwire -n $_obj_geo1_OUT_animpts_crag01 -1 $_obj_geo1_attribcopy1
opcf $arg1
opwire -n $_obj_geo1_attribcopy1 -0 $_obj_geo1_OUT_animGeo_crag01
opcf $arg1
opwire -n $_obj_geo1_unpack3 -0 $_obj_geo1_normal1
opcf $arg1
opwire -n $_obj_geo1_IN_animGeo_crag01 -0 $_obj_geo1_unpack3
opcf $arg1
opwire -n $_obj_geo1_rest -0 $_obj_geo1_attribdelete2
opcf $arg1
opwire -n $_obj_geo1_add1 -0 $_obj_geo1_trail1
opcf $arg1
opwire -n $_obj_geo1_OUT_restGeo_crag01 -0 $_obj_geo1_attribdelete3
opcf $arg1
opwire -n $_obj_geo1_groupdelete2 -0 $_obj_geo1_OUT_restGeo_crag01
opcf $arg1
opwire -n $_obj_geo1_rest1 -0 $_obj_geo1_add1
opcf $arg1
opwire -n $_obj_geo1_groupdelete1 -0 $_obj_geo1_OUT_animpts_crag01
opcf $arg1
opwire -n $_obj_geo1_tempId -0 $_obj_geo1_pref

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_OUT_animpts_crag01
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_IN_animGeo_crag01
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="cfgGeoPrep02" label="cfg GeoPrep 02" icon="MISC_generic">
    <toolMenuContext name="network">
      <contextOpType>Sop/attribwrangle</contextOpType>
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if "outputnodename" in kwargs and "inputindex" in kwargs:
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if "inputnodename" in kwargs and "outputindex" in kwargs:
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9
    if "autoplace" in kwargs:
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if "shiftclick" in kwargs and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if "nodepositionx" in kwargs and             "nodepositiony" in kwargs:
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if "node_bbox" in kwargs:
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'

pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if 'convertvdb' not in child_type:
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r'''
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_rest2 (Sop/attribwrangle)
set _obj_geo1_rest2 = `run("opadd -e -n -v attribwrangle rest2")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_rest2
opparm $_obj_geo1_rest2  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_rest2 snippet ( 'v@P = v@rest;' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_rest2
opexprlanguage -s hscript $_obj_geo1_rest2
opuserdata -n '___Version___' -v '' $_obj_geo1_rest2
opset -p on $_obj_geo1_rest2
opcf $arg1

# Node $_obj_geo1_foreach_end6 (Sop/block_end)
set _obj_geo1_foreach_end6 = `run("opadd -e -n -v block_end foreach_end6")`
oplocate -x `$arg2 + -8.4054495430468155` -y `$arg3 + -13.729008885227316` $_obj_geo1_foreach_end6
opparm -V 20.0.547 $_obj_geo1_foreach_end6 itermethod ( count ) iterations ( 20 ) blockpath ( ../foreach_begin6 ) templatepath ( ../foreach_begin6 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_foreach_end6
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_foreach_end6
opexprlanguage -s hscript $_obj_geo1_foreach_end6
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_foreach_end6
opset -p on $_obj_geo1_foreach_end6
opcf $arg1

# Node $_obj_geo1_rest4 (Sop/attribwrangle)
set _obj_geo1_rest4 = `run("opadd -e -n -v attribwrangle rest4")`
oplocate -x `$arg2 + 1.6959718472704228` -y `$arg3 + -24.209829638439928` $_obj_geo1_rest4
opparm $_obj_geo1_rest4  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_rest4 snippet ( 'v@rest = v@P;' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_rest4
opexprlanguage -s hscript $_obj_geo1_rest4
opuserdata -n '___Version___' -v '' $_obj_geo1_rest4
opset -p on $_obj_geo1_rest4
opcf $arg1

# Node $_obj_geo1_ray4 (Sop/ray)
set _obj_geo1_ray4 = `run("opadd -e -n -v ray ray4")`
oplocate -x `$arg2 + -8.4070495565687846` -y `$arg3 + -12.26515326587549` $_obj_geo1_ray4
chblockbegin
chadd -t 41.666666666666664 41.666666666666664 $_obj_geo1_ray4 dirx
chkey -t 41.666666666666664 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.x $_obj_geo1_ray4/dirx
chadd -t 41.666666666666664 41.666666666666664 $_obj_geo1_ray4 diry
chkey -t 41.666666666666664 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.y $_obj_geo1_ray4/diry
chadd -t 41.666666666666664 41.666666666666664 $_obj_geo1_ray4 dirz
chkey -t 41.666666666666664 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.z $_obj_geo1_ray4/dirz
chblockend
opparm -V 20.0.547 $_obj_geo1_ray4 method ( minimum )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_ray4
opexprlanguage -s hscript $_obj_geo1_ray4
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_ray4
opset -p on $_obj_geo1_ray4
opcf $arg1

# Node $_obj_geo1_foreach_begin5 (Sop/block_begin)
set _obj_geo1_foreach_begin5 = `run("opadd -e -n -v block_begin foreach_begin5")`
oplocate -x `$arg2 + 0.0045999965336207538` -y `$arg3 + -8.2967020132541407` $_obj_geo1_foreach_begin5
opparm -V 20.0.547 $_obj_geo1_foreach_begin5 blockpath ( ../foreach_end5 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_foreach_begin5
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_foreach_begin5
opexprlanguage -s hscript $_obj_geo1_foreach_begin5
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_foreach_begin5
opset -p on $_obj_geo1_foreach_begin5
opcf $arg1

# Node $_obj_geo1_attribdelete4 (Sop/attribdelete)
set _obj_geo1_attribdelete4 = `run("opadd -e -n -v attribdelete attribdelete4")`
oplocate -x `$arg2 + 1.6955218487333443` -y `$arg3 + -23.096488479084563` $_obj_geo1_attribdelete4
opparm $_obj_geo1_attribdelete4 negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_attribdelete4
opexprlanguage -s hscript $_obj_geo1_attribdelete4
opuserdata -n '___Version___' -v '' $_obj_geo1_attribdelete4
opset -p on $_obj_geo1_attribdelete4
opcf $arg1

# Node $_obj_geo1_vdbfrompolygons1 (Sop/vdbfrompolygons)
set _obj_geo1_vdbfrompolygons1 = `run("opadd -e -n -v vdbfrompolygons vdbfrompolygons1")`
oplocate -x `$arg2 + 11.35870260715981` -y `$arg3 + -10.93433218981432` $_obj_geo1_vdbfrompolygons1
opparm $_obj_geo1_vdbfrompolygons1  numattrib ( 0 )
opparm -V 20.0.547 $_obj_geo1_vdbfrompolygons1 voxelsize ( 0.05 )
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_geo1_vdbfrompolygons1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_vdbfrompolygons1
opexprlanguage -s hscript $_obj_geo1_vdbfrompolygons1
opset -p on $_obj_geo1_vdbfrompolygons1
opcf $arg1

# Node $_obj_geo1_start_remeshPerPiece (Sop/null)
set _obj_geo1_start_remeshPerPiece = `run("opadd -e -n -v null start_remeshPerPiece")`
oplocate -x `$arg2 + -8.1661178493518474` -y `$arg3 + -4.1089370268640337` $_obj_geo1_start_remeshPerPiece
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_start_remeshPerPiece
opexprlanguage -s hscript $_obj_geo1_start_remeshPerPiece
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_start_remeshPerPiece
opset -p on $_obj_geo1_start_remeshPerPiece
opcf $arg1

# Node $_obj_geo1_shrinkwrap4 (Sop/shrinkwrap::2.0)
set _obj_geo1_shrinkwrap4 = `run("opadd -e -n -v shrinkwrap::2.0 shrinkwrap4")`
oplocate -x `$arg2 + -10.857573111634148` -y `$arg3 + -8.7221120808537052` $_obj_geo1_shrinkwrap4
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_shrinkwrap4
opexprlanguage -s hscript $_obj_geo1_shrinkwrap4
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_shrinkwrap4
opset -p on $_obj_geo1_shrinkwrap4
opcf $arg1

# Node $_obj_geo1_timeshift1 (Sop/timeshift)
set _obj_geo1_timeshift1 = `run("opadd -e -n -v timeshift timeshift1")`
oplocate -x `$arg2 + 1.6989718438040402` -y `$arg3 + -22.096488467163631` $_obj_geo1_timeshift1
chblockbegin
chadd -t 0 0 $_obj_geo1_timeshift1 frame
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F '$RFSTART' $_obj_geo1_timeshift1/frame
chadd -t 0 0 $_obj_geo1_timeshift1 time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_timeshift1/time
chadd -t 0 0 $_obj_geo1_timeshift1 frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_timeshift1/frange1
chadd -t 0 0 $_obj_geo1_timeshift1 frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_timeshift1/frange2
chadd -t 0 0 $_obj_geo1_timeshift1 trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_timeshift1/trange1
chadd -t 0 0 $_obj_geo1_timeshift1 trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_timeshift1/trange2
chblockend
opparm -V 20.0.547 $_obj_geo1_timeshift1 frame ( frame )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_timeshift1
opexprlanguage -s hscript $_obj_geo1_timeshift1
opset -p on $_obj_geo1_timeshift1
opcf $arg1

# Node $_obj_geo1_remesh5 (Sop/remesh::2.0)
set _obj_geo1_remesh5 = `run("opadd -e -n -v remesh::2.0 remesh5")`
oplocate -x `$arg2 + -10.857573111634148` -y `$arg3 + -10.807812080853708` $_obj_geo1_remesh5
opparm -V 20.0.547 $_obj_geo1_remesh5 targetsize ( 0.05 )
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_geo1_remesh5
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_remesh5
opexprlanguage -s hscript $_obj_geo1_remesh5
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_remesh5
opset -p on $_obj_geo1_remesh5
opcf $arg1

# Node $_obj_geo1_foreach_begin7 (Sop/block_begin)
set _obj_geo1_foreach_begin7 = `run("opadd -e -n -v block_begin foreach_begin7")`
oplocate -x `$arg2 + -8.1645178358298818` -y `$arg3 + -6.4658964223318129` $_obj_geo1_foreach_begin7
opparm -V 20.0.547 $_obj_geo1_foreach_begin7 method ( piece ) blockpath ( ../foreach_end7 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_foreach_begin7
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_foreach_begin7
opexprlanguage -s hscript $_obj_geo1_foreach_begin7
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_foreach_begin7
opset -p on $_obj_geo1_foreach_begin7
opcf $arg1

# Node $_obj_geo1_foreach_end5 (Sop/block_end)
set _obj_geo1_foreach_end5 = `run("opadd -e -n -v block_end foreach_end5")`
oplocate -x `$arg2 + 2.2252581048858726` -y `$arg3 + -13.923335526572323` $_obj_geo1_foreach_end5
opparm -V 20.0.547 $_obj_geo1_foreach_end5 itermethod ( count ) blockpath ( ../foreach_begin5 ) templatepath ( ../foreach_begin5 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_foreach_end5
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_foreach_end5
opexprlanguage -s hscript $_obj_geo1_foreach_end5
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_foreach_end5
opset -p on $_obj_geo1_foreach_end5
opcf $arg1

# Node $_obj_geo1_start_remesh (Sop/null)
set _obj_geo1_start_remesh = `run("opadd -e -n -v null start_remesh")`
oplocate -x `$arg2 + 0.0029999965336173773` -y `$arg3 + -3.8549222015200861` $_obj_geo1_start_remesh
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_start_remesh
opexprlanguage -s hscript $_obj_geo1_start_remesh
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_start_remesh
opset -p on $_obj_geo1_start_remesh
opcf $arg1

# Node $_obj_geo1_ray3 (Sop/ray)
set _obj_geo1_ray3 = `run("opadd -e -n -v ray ray3")`
oplocate -x `$arg2 + 2.1081999965336209` -y `$arg3 + -11.883602013254141` $_obj_geo1_ray3
chblockbegin
chadd -t 41.666666666666664 41.666666666666664 $_obj_geo1_ray3 dirx
chkey -t 41.666666666666664 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.x $_obj_geo1_ray3/dirx
chadd -t 41.666666666666664 41.666666666666664 $_obj_geo1_ray3 diry
chkey -t 41.666666666666664 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.y $_obj_geo1_ray3/diry
chadd -t 41.666666666666664 41.666666666666664 $_obj_geo1_ray3 dirz
chkey -t 41.666666666666664 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.z $_obj_geo1_ray3/dirz
chblockend
opparm -V 20.0.547 $_obj_geo1_ray3 method ( minimum )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_ray3
opexprlanguage -s hscript $_obj_geo1_ray3
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_ray3
opset -p on $_obj_geo1_ray3
opcf $arg1

# Node $_obj_geo1_OUT_restGeo_crag01_prxy01 (Sop/null)
set _obj_geo1_OUT_restGeo_crag01_prxy01 = `run("opadd -e -n -v null OUT_restGeo_crag01_prxy01")`
oplocate -x `$arg2 + 1.6989718438040402` -y `$arg3 + -25.740767358384723` $_obj_geo1_OUT_restGeo_crag01_prxy01
opcolor -c 0 0 0 $_obj_geo1_OUT_restGeo_crag01_prxy01
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_OUT_restGeo_crag01_prxy01
opexprlanguage -s hscript $_obj_geo1_OUT_restGeo_crag01_prxy01
opset -p on $_obj_geo1_OUT_restGeo_crag01_prxy01
opcf $arg1

# Node $_obj_geo1_foreach_count4 (Sop/block_begin)
set _obj_geo1_foreach_count4 = `run("opadd -e -n -v block_begin foreach_count4")`
oplocate -x `$arg2 + -6.6016619949450384` -y `$arg3 + -9.7678120808537052` $_obj_geo1_foreach_count4
opparm -V 20.0.547 $_obj_geo1_foreach_count4 method ( metadata ) blockpath ( ../foreach_end6 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_foreach_count4
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_foreach_count4
opexprlanguage -s hscript $_obj_geo1_foreach_count4
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_foreach_count4
opset -p on $_obj_geo1_foreach_count4
opcf $arg1

# Node $_obj_geo1_foreach_end7 (Sop/block_end)
set _obj_geo1_foreach_end7 = `run("opadd -e -n -v block_end foreach_end7")`
oplocate -x `$arg2 + -8.2502083580250289` -y `$arg3 + -15.65443831694482` $_obj_geo1_foreach_end7
opparm -V 20.0.547 $_obj_geo1_foreach_end7 itermethod ( pieces ) method ( merge ) class ( primitive ) attrib ( class ) blockpath ( ../foreach_begin7 ) templatepath ( ../foreach_begin7 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_foreach_end7
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_foreach_end7
opexprlanguage -s hscript $_obj_geo1_foreach_end7
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_foreach_end7
opset -p on $_obj_geo1_foreach_end7
opcf $arg1

# Node $_obj_geo1_shrinkwrap3 (Sop/shrinkwrap::2.0)
set _obj_geo1_shrinkwrap3 = `run("opadd -e -n -v shrinkwrap::2.0 shrinkwrap3")`
oplocate -x `$arg2 + 0.00299999653362093` -y `$arg3 + -6.1653020132541414` $_obj_geo1_shrinkwrap3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_shrinkwrap3
opexprlanguage -s hscript $_obj_geo1_shrinkwrap3
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_shrinkwrap3
opset -p on $_obj_geo1_shrinkwrap3
opcf $arg1

# Node $_obj_geo1_start_simpleCol (Sop/null)
set _obj_geo1_start_simpleCol = `run("opadd -e -n -v null start_simpleCol")`
oplocate -x `$arg2 + 11.061531865354384` -y `$arg3 + -3.6482368166165067` $_obj_geo1_start_simpleCol
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_start_simpleCol
opexprlanguage -s hscript $_obj_geo1_start_simpleCol
opset -p on $_obj_geo1_start_simpleCol
opcf $arg1

# Node $_obj_geo1_remesh4 (Sop/remesh::2.0)
set _obj_geo1_remesh4 = `run("opadd -e -n -v remesh::2.0 remesh4")`
oplocate -x `$arg2 + 0.18899999653362087` -y `$arg3 + -10.422402013254136` $_obj_geo1_remesh4
opparm -V 20.0.547 $_obj_geo1_remesh4 targetsize ( 0.05 )
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_geo1_remesh4
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_remesh4
opexprlanguage -s hscript $_obj_geo1_remesh4
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_remesh4
opset -p on $_obj_geo1_remesh4
opcf $arg1

# Node $_obj_geo1_vdbreshapesdf1 (Sop/vdbreshapesdf)
set _obj_geo1_vdbreshapesdf1 = `run("opadd -e -n -v vdbreshapesdf vdbreshapesdf1")`
oplocate -x `$arg2 + 11.359952635770039` -y `$arg3 + -12.189414607829917` $_obj_geo1_vdbreshapesdf1
opparm -V 20.0.547 $_obj_geo1_vdbreshapesdf1 voxeloffset ( 0.5 )
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_geo1_vdbreshapesdf1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_vdbreshapesdf1
opexprlanguage -s hscript $_obj_geo1_vdbreshapesdf1
opset -p on $_obj_geo1_vdbreshapesdf1
opcf $arg1

# Node $_obj_geo1_foreach_begin6 (Sop/block_begin)
set _obj_geo1_foreach_begin6 = `run("opadd -e -n -v block_begin foreach_begin6")`
oplocate -x `$arg2 + -10.855973111634144` -y `$arg3 + -9.7678120808537052` $_obj_geo1_foreach_begin6
opparm -V 20.0.547 $_obj_geo1_foreach_begin6 blockpath ( ../foreach_end6 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_foreach_begin6
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_foreach_begin6
opexprlanguage -s hscript $_obj_geo1_foreach_begin6
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_foreach_begin6
opset -p on $_obj_geo1_foreach_begin6
opcf $arg1

# Node $_obj_geo1_connectivity2 (Sop/connectivity)
set _obj_geo1_connectivity2 = `run("opadd -e -n -v connectivity connectivity2")`
oplocate -x `$arg2 + -8.1661178493518474` -y `$arg3 + -5.4455768334913408` $_obj_geo1_connectivity2
opparm -V 20.0.547 $_obj_geo1_connectivity2 connecttype ( prim )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_connectivity2
opexprlanguage -s hscript $_obj_geo1_connectivity2
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_connectivity2
opset -p on $_obj_geo1_connectivity2
opcf $arg1

# Node $_obj_geo1_foreach_count3 (Sop/block_begin)
set _obj_geo1_foreach_count3 = `run("opadd -e -n -v block_begin foreach_count3")`
oplocate -x `$arg2 + 4.0656179765357336` -y `$arg3 + -8.2967020132541407` $_obj_geo1_foreach_count3
opparm -V 20.0.547 $_obj_geo1_foreach_count3 method ( metadata ) blockpath ( ../foreach_end5 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_foreach_count3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_foreach_count3
opexprlanguage -s hscript $_obj_geo1_foreach_count3
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_foreach_count3
opset -p on $_obj_geo1_foreach_count3
opcf $arg1

# Node $_obj_geo1_switch1 (Sop/switch)
set _obj_geo1_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + 1.6989718344908145` -y `$arg3 + -20.788163301242946` $_obj_geo1_switch1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_switch1
opexprlanguage -s hscript $_obj_geo1_switch1
opset -p on $_obj_geo1_switch1
opcf $arg1

# Node $_obj_geo1_convertvdb1 (Sop/convertvdb)
set _obj_geo1_convertvdb1 = `run("opadd -e -n -v convertvdb convertvdb1")`
oplocate -x `$arg2 + 11.35870260715981` -y `$arg3 + -13.42816056130831` $_obj_geo1_convertvdb1
opparm -V 20.0.547 $_obj_geo1_convertvdb1 conversion ( poly )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_convertvdb1
opexprlanguage -s hscript $_obj_geo1_convertvdb1
opset -p on $_obj_geo1_convertvdb1

opcf $arg1
opwire -n $_obj_geo1_OUT_animGeo_crag01 -0 $_obj_geo1_rest2
opcf $arg1
opwire -n $_obj_geo1_ray4 -0 $_obj_geo1_foreach_end6
opcf $arg1
opwire -n $_obj_geo1_attribdelete4 -0 $_obj_geo1_rest4
opcf $arg1
opwire -n $_obj_geo1_remesh5 -0 $_obj_geo1_ray4
opwire -n $_obj_geo1_foreach_begin7 -1 $_obj_geo1_ray4
opcf $arg1
opwire -n $_obj_geo1_shrinkwrap3 -0 $_obj_geo1_foreach_begin5
opcf $arg1
opwire -n $_obj_geo1_timeshift1 -0 $_obj_geo1_attribdelete4
opcf $arg1
opwire -n $_obj_geo1_start_simpleCol -0 $_obj_geo1_vdbfrompolygons1
opcf $arg1
opwire -n $_obj_geo1_rest2 -0 $_obj_geo1_start_remeshPerPiece
opcf $arg1
opwire -n $_obj_geo1_foreach_begin7 -0 $_obj_geo1_shrinkwrap4
opcf $arg1
opwire -n $_obj_geo1_switch1 -0 $_obj_geo1_timeshift1
opcf $arg1
opwire -n $_obj_geo1_foreach_begin6 -0 $_obj_geo1_remesh5
opcf $arg1
opwire -n $_obj_geo1_connectivity2 -0 $_obj_geo1_foreach_begin7
opcf $arg1
opwire -n $_obj_geo1_ray3 -0 $_obj_geo1_foreach_end5
opcf $arg1
opwire -n $_obj_geo1_rest2 -0 $_obj_geo1_start_remesh
opcf $arg1
opwire -n $_obj_geo1_remesh4 -0 $_obj_geo1_ray3
opwire -n $_obj_geo1_start_remesh -1 $_obj_geo1_ray3
opcf $arg1
opwire -n $_obj_geo1_rest4 -0 $_obj_geo1_OUT_restGeo_crag01_prxy01
opcf $arg1
opcf $arg1
opwire -n $_obj_geo1_foreach_end6 -0 $_obj_geo1_foreach_end7
opcf $arg1
opwire -n $_obj_geo1_start_remesh -0 $_obj_geo1_shrinkwrap3
opcf $arg1
opwire -n $_obj_geo1_rest2 -0 $_obj_geo1_start_simpleCol
opcf $arg1
opwire -n $_obj_geo1_foreach_begin5 -0 $_obj_geo1_remesh4
opcf $arg1
opwire -n $_obj_geo1_vdbfrompolygons1 -0 $_obj_geo1_vdbreshapesdf1
opcf $arg1
opwire -n $_obj_geo1_shrinkwrap4 -0 $_obj_geo1_foreach_begin6
opcf $arg1
opwire -n $_obj_geo1_start_remeshPerPiece -0 $_obj_geo1_connectivity2
opcf $arg1
opcf $arg1
opwire -n $_obj_geo1_foreach_end7 -0 $_obj_geo1_switch1
opwire -n $_obj_geo1_foreach_end5 -1 $_obj_geo1_switch1
opwire -n $_obj_geo1_convertvdb1 -2 $_obj_geo1_switch1
opcf $arg1
opwire -n $_obj_geo1_vdbreshapesdf1 -0 $_obj_geo1_convertvdb1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_OUT_restGeo_crag01_prxy01
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_rest2
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="cfgGeoPrep03" label="cfg GeoPrep 03" icon="MISC_generic">
    <toolMenuContext name="network">
      <contextOpType>Sop/collisionsource::2.0</contextOpType>
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if "outputnodename" in kwargs and "inputindex" in kwargs:
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if "inputnodename" in kwargs and "outputindex" in kwargs:
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9
    if "autoplace" in kwargs:
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if "shiftclick" in kwargs and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if "nodepositionx" in kwargs and             "nodepositiony" in kwargs:
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if "node_bbox" in kwargs:
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'

pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if 'merge' not in child_type:
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r'''
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_collisionsource1 (Sop/collisionsource::2.0)
set _obj_geo1_collisionsource1 = `run("opadd -e -n -v collisionsource::2.0 collisionsource1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_collisionsource1
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_geo1_collisionsource1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_collisionsource1
opexprlanguage -s hscript $_obj_geo1_collisionsource1
opuserdata -n '___Version___' -v '' $_obj_geo1_collisionsource1
opuserdata -n '___toolcount___' -v '4' $_obj_geo1_collisionsource1
opuserdata -n '___toolid___' -v 'dop_deformingobject' $_obj_geo1_collisionsource1
opset -p on $_obj_geo1_collisionsource1
opcf $arg1

# Node $_obj_geo1_OUT_animGeo_crag01_prxy01_Collision01 (Sop/null)
set _obj_geo1_OUT_animGeo_crag01_prxy01_Collision01 = `run("opadd -e -n -v null OUT_animGeo_crag01_prxy01_Collision01")`
oplocate -x `$arg2 + 0` -y `$arg3 + -4.4658319124157799` $_obj_geo1_OUT_animGeo_crag01_prxy01_Collision01
opcolor -c 0 0 0 $_obj_geo1_OUT_animGeo_crag01_prxy01_Collision01
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_OUT_animGeo_crag01_prxy01_Collision01
opexprlanguage -s hscript $_obj_geo1_OUT_animGeo_crag01_prxy01_Collision01
opset -p on $_obj_geo1_OUT_animGeo_crag01_prxy01_Collision01
opcf $arg1

# Node $_obj_geo1_col_geo (Sop/groupcreate)
set _obj_geo1_col_geo = `run("opadd -e -n -v groupcreate col_geo")`
oplocate -x `$arg2 + -1.4821942492781517` -y `$arg3 + -1.4821941376323409` $_obj_geo1_col_geo
opparm -V 20.0.547 $_obj_geo1_col_geo groupname ( geo )
opset -d off -r off -h on -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_col_geo
opexprlanguage -s hscript $_obj_geo1_col_geo
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_col_geo
opset -p on $_obj_geo1_col_geo
opcf $arg1

# Node $_obj_geo1_col_vol (Sop/groupcreate)
set _obj_geo1_col_vol = `run("opadd -e -n -v groupcreate col_vol")`
oplocate -x `$arg2 + 1.3281953609239654` -y `$arg3 + -1.4821941376323409` $_obj_geo1_col_vol
opparm -V 20.0.547 $_obj_geo1_col_vol groupname ( vol )
opset -d off -r off -h on -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_col_vol
opexprlanguage -s hscript $_obj_geo1_col_vol
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_col_vol
opset -p on $_obj_geo1_col_vol
opcf $arg1

# Node $_obj_geo1_merge1 (Sop/merge)
set _obj_geo1_merge1 = `run("opadd -e -n -v merge merge1")`
oplocate -x `$arg2 + -0.0011500120162963867` -y `$arg3 + -2.9984634743114356` $_obj_geo1_merge1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_merge1
opexprlanguage -s hscript $_obj_geo1_merge1
opset -p on $_obj_geo1_merge1

opcf $arg1
opwire -n $_obj_geo1_OUT_animGeo_crag01_prxy01 -0 $_obj_geo1_collisionsource1
opcf $arg1
opwire -n $_obj_geo1_merge1 -0 $_obj_geo1_OUT_animGeo_crag01_prxy01_Collision01
opcf $arg1
opwire -n $_obj_geo1_collisionsource1 -0 $_obj_geo1_col_geo
opcf $arg1
opwire -n -o 1 $_obj_geo1_collisionsource1 -0 $_obj_geo1_col_vol
opcf $arg1
opwire -n $_obj_geo1_col_geo -0 $_obj_geo1_merge1
opwire -n $_obj_geo1_col_vol -1 $_obj_geo1_merge1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_OUT_animGeo_crag01_prxy01_Collision01
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_collisionsource1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="cfgGeoPrep" label="cfg GeoPrep" icon="MISC_generic">
    <toolMenuContext name="network">
      <contextOpType>Sop/null</contextOpType>
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if "outputnodename" in kwargs and "inputindex" in kwargs:
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if "inputnodename" in kwargs and "outputindex" in kwargs:
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9
    if "autoplace" in kwargs:
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if "shiftclick" in kwargs and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if "nodepositionx" in kwargs and             "nodepositiony" in kwargs:
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if "node_bbox" in kwargs:
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'

pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if 'switch' not in child_type:
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r'''
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo1_OUT_animGeo_crag01_prxy01_Collision01 (Sop/null)
set _obj_geo1_OUT_animGeo_crag01_prxy01_Collision01 = `run("opadd -e -n -v null OUT_animGeo_crag01_prxy01_Collision01")`
oplocate -x `$arg2 + -0.26027552027662537` -y `$arg3 + -85.895250711532` $_obj_geo1_OUT_animGeo_crag01_prxy01_Collision01
opcolor -c 0 0 0 $_obj_geo1_OUT_animGeo_crag01_prxy01_Collision01
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_OUT_animGeo_crag01_prxy01_Collision01
opexprlanguage -s hscript $_obj_geo1_OUT_animGeo_crag01_prxy01_Collision01
opset -p on $_obj_geo1_OUT_animGeo_crag01_prxy01_Collision01
opcf $arg1

# Node $_obj_geo1_foreach_end6 (Sop/block_end)
set _obj_geo1_foreach_end6 = `run("opadd -e -n -v block_end foreach_end6")`
oplocate -x `$arg2 + -29.288690225938787` -y `$arg3 + -54.818979264687172` $_obj_geo1_foreach_end6
opparm -V 20.0.547 $_obj_geo1_foreach_end6 itermethod ( count ) iterations ( 20 ) blockpath ( ../foreach_begin6 ) templatepath ( ../foreach_begin6 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_foreach_end6
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_foreach_end6
opexprlanguage -s hscript $_obj_geo1_foreach_end6
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_foreach_end6
opset -p on $_obj_geo1_foreach_end6
opcf $arg1

# Node $_obj_geo1_rest4 (Sop/attribwrangle)
set _obj_geo1_rest4 = `run("opadd -e -n -v attribwrangle rest4")`
oplocate -x `$arg2 + -19.187268835621552` -y `$arg3 + -65.299800017899784` $_obj_geo1_rest4
opparm $_obj_geo1_rest4  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_rest4 snippet ( 'v@rest = v@P;' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_rest4
opexprlanguage -s hscript $_obj_geo1_rest4
opuserdata -n '___Version___' -v '' $_obj_geo1_rest4
opset -p on $_obj_geo1_rest4
opcf $arg1

# Node $_obj_geo1_pref1 (Sop/attribwrangle)
set _obj_geo1_pref1 = `run("opadd -e -n -v attribwrangle pref1")`
oplocate -x `$arg2 + -0.0029999965336173773` -y `$arg3 + -2.4303451563252487` $_obj_geo1_pref1
opparm $_obj_geo1_pref1  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_pref1 snippet ( 'v@rest = v@P;' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_pref1
opexprlanguage -s hscript $_obj_geo1_pref1
opuserdata -n '___Version___' -v '' $_obj_geo1_pref1
opset -p on $_obj_geo1_pref1
opcf $arg1

# Node $_obj_geo1_vdbfrompolygons1 (Sop/vdbfrompolygons)
set _obj_geo1_vdbfrompolygons1 = `run("opadd -e -n -v vdbfrompolygons vdbfrompolygons1")`
oplocate -x `$arg2 + -9.5245380757321634` -y `$arg3 + -52.02430256927417` $_obj_geo1_vdbfrompolygons1
opparm $_obj_geo1_vdbfrompolygons1  numattrib ( 0 )
opparm -V 20.0.547 $_obj_geo1_vdbfrompolygons1 voxelsize ( 0.05 )
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_geo1_vdbfrompolygons1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_vdbfrompolygons1
opexprlanguage -s hscript $_obj_geo1_vdbfrompolygons1
opset -p on $_obj_geo1_vdbfrompolygons1
opcf $arg1

# Node $_obj_geo1_tempId (Sop/attribwrangle)
set _obj_geo1_tempId = `run("opadd -e -n -v attribwrangle tempId")`
oplocate -x `$arg2 + -3.7234431199318809` -y `$arg3 + -10.760113914231782` $_obj_geo1_tempId
opparm $_obj_geo1_tempId  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_tempId snippet ( 'i@__tempId = i@ptnum;' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_tempId
opexprlanguage -s hscript $_obj_geo1_tempId
opuserdata -n '___Version___' -v '' $_obj_geo1_tempId
opset -p on $_obj_geo1_tempId
opcf $arg1

# Node $_obj_geo1_remesh5 (Sop/remesh::2.0)
set _obj_geo1_remesh5 = `run("opadd -e -n -v remesh::2.0 remesh5")`
oplocate -x `$arg2 + -31.740813794526119` -y `$arg3 + -51.897782460313564` $_obj_geo1_remesh5
opparm -V 20.0.547 $_obj_geo1_remesh5 targetsize ( 0.05 )
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_geo1_remesh5
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_remesh5
opexprlanguage -s hscript $_obj_geo1_remesh5
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_remesh5
opset -p on $_obj_geo1_remesh5
opcf $arg1

# Node $_obj_geo1_collisionsource1 (Sop/collisionsource::2.0)
set _obj_geo1_collisionsource1 = `run("opadd -e -n -v collisionsource::2.0 collisionsource1")`
oplocate -x `$arg2 + -0.26027552027662537` -y `$arg3 + -81.42941879911622` $_obj_geo1_collisionsource1
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_geo1_collisionsource1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_collisionsource1
opexprlanguage -s hscript $_obj_geo1_collisionsource1
opuserdata -n '___Version___' -v '' $_obj_geo1_collisionsource1
opuserdata -n '___toolcount___' -v '4' $_obj_geo1_collisionsource1
opuserdata -n '___toolid___' -v 'dop_deformingobject' $_obj_geo1_collisionsource1
opset -p on $_obj_geo1_collisionsource1
opcf $arg1

# Node $_obj_geo1_OUT_animGeo_crag01 (Sop/null)
set _obj_geo1_OUT_animGeo_crag01 = `run("opadd -e -n -v null OUT_animGeo_crag01")`
oplocate -x `$arg2 + -2.9271770630844238` -y `$arg3 + -30.327213042129198` $_obj_geo1_OUT_animGeo_crag01
opcolor -c 0 0 0 $_obj_geo1_OUT_animGeo_crag01
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_OUT_animGeo_crag01
opexprlanguage -s hscript $_obj_geo1_OUT_animGeo_crag01
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_OUT_animGeo_crag01
opset -p on $_obj_geo1_OUT_animGeo_crag01
opcf $arg1

# Node $_obj_geo1_unpack3 (Sop/unpack)
set _obj_geo1_unpack3 = `run("opadd -e -n -v unpack unpack3")`
oplocate -x `$arg2 + -3.7204431094284249` -y `$arg3 + -8.6901796724498954` $_obj_geo1_unpack3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_unpack3
opexprlanguage -s hscript $_obj_geo1_unpack3
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_unpack3
opset -p on $_obj_geo1_unpack3
opcf $arg1

# Node $_obj_geo1_OUT_restGeo_crag01_prxy01 (Sop/null)
set _obj_geo1_OUT_restGeo_crag01_prxy01 = `run("opadd -e -n -v null OUT_restGeo_crag01_prxy01")`
oplocate -x `$arg2 + -19.184268839087935` -y `$arg3 + -66.830737737844572` $_obj_geo1_OUT_restGeo_crag01_prxy01
opcolor -c 0 0 0 $_obj_geo1_OUT_restGeo_crag01_prxy01
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_OUT_restGeo_crag01_prxy01
opexprlanguage -s hscript $_obj_geo1_OUT_restGeo_crag01_prxy01
opset -p on $_obj_geo1_OUT_restGeo_crag01_prxy01
opcf $arg1

# Node $_obj_geo1_foreach_end7 (Sop/block_end)
set _obj_geo1_foreach_end7 = `run("opadd -e -n -v block_end foreach_end7")`
oplocate -x `$arg2 + -29.133449040917` -y `$arg3 + -56.744408696404676` $_obj_geo1_foreach_end7
opparm -V 20.0.547 $_obj_geo1_foreach_end7 itermethod ( pieces ) method ( merge ) class ( primitive ) attrib ( class ) blockpath ( ../foreach_begin7 ) templatepath ( ../foreach_begin7 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_foreach_end7
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_foreach_end7
opexprlanguage -s hscript $_obj_geo1_foreach_end7
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_foreach_end7
opset -p on $_obj_geo1_foreach_end7
opcf $arg1

# Node $_obj_geo1_merge1 (Sop/merge)
set _obj_geo1_merge1 = `run("opadd -e -n -v merge merge1")`
oplocate -x `$arg2 + -0.26142553229292176` -y `$arg3 + -84.427882273427656` $_obj_geo1_merge1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_merge1
opexprlanguage -s hscript $_obj_geo1_merge1
opset -p on $_obj_geo1_merge1
opcf $arg1

# Node $_obj_geo1_shrinkwrap3 (Sop/shrinkwrap::2.0)
set _obj_geo1_shrinkwrap3 = `run("opadd -e -n -v shrinkwrap::2.0 shrinkwrap3")`
oplocate -x `$arg2 + -20.880240686358352` -y `$arg3 + -47.255272392713991` $_obj_geo1_shrinkwrap3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_shrinkwrap3
opexprlanguage -s hscript $_obj_geo1_shrinkwrap3
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_shrinkwrap3
opset -p on $_obj_geo1_shrinkwrap3
opcf $arg1

# Node $_obj_geo1_OUT_animGeo_crag01_prxy01 (Sop/null)
set _obj_geo1_OUT_animGeo_crag01_prxy01 = `run("opadd -e -n -v null OUT_animGeo_crag01_prxy01")`
oplocate -x `$arg2 + -0.26027552027662537` -y `$arg3 + -77.279752189104016` $_obj_geo1_OUT_animGeo_crag01_prxy01
opcolor -c 0 0 0 $_obj_geo1_OUT_animGeo_crag01_prxy01
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_OUT_animGeo_crag01_prxy01
opexprlanguage -s hscript $_obj_geo1_OUT_animGeo_crag01_prxy01
opset -p on $_obj_geo1_OUT_animGeo_crag01_prxy01
opcf $arg1

# Node $_obj_geo1_pointdeform1 (Sop/pointdeform)
set _obj_geo1_pointdeform1 = `run("opadd -e -n -v pointdeform pointdeform1")`
oplocate -x `$arg2 + -0.26027552027662537` -y `$arg3 + -70.902497036628731` $_obj_geo1_pointdeform1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_pointdeform1
opexprlanguage -s hscript $_obj_geo1_pointdeform1
opuserdata -n '___Version___' -v '' $_obj_geo1_pointdeform1
opset -p on $_obj_geo1_pointdeform1
opcf $arg1

# Node $_obj_geo1_testgeometry_crag2 (Sop/testgeometry_crag)
set _obj_geo1_testgeometry_crag2 = `run("opadd -e -n -v testgeometry_crag testgeometry_crag2")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo1_testgeometry_crag2
chblockbegin
chadd -t 0 0 $_obj_geo1_testgeometry_crag2 frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FF' $_obj_geo1_testgeometry_crag2/frame
chblockend
opparm $_obj_geo1_testgeometry_crag2 restpose ( on ) addshader ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_testgeometry_crag2
opexprlanguage -s hscript $_obj_geo1_testgeometry_crag2
opuserdata -n '___Version___' -v '' $_obj_geo1_testgeometry_crag2
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_testgeometry_crag2
opuserdata -n '___toolid___' -v 'sop_testgeometry_crag' $_obj_geo1_testgeometry_crag2
opset -p on $_obj_geo1_testgeometry_crag2
opcf $arg1

# Node $_obj_geo1_pref (Sop/attribwrangle)
set _obj_geo1_pref = `run("opadd -e -n -v attribwrangle pref")`
oplocate -x `$arg2 + 0.52388385964857953` -y `$arg3 + -12.381293580951116` $_obj_geo1_pref
opparm $_obj_geo1_pref  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_pref snippet ( 'v@P = v@rest;' )
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_geo1_pref
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_pref
opexprlanguage -s hscript $_obj_geo1_pref
opuserdata -n '___Version___' -v '' $_obj_geo1_pref
opset -p on $_obj_geo1_pref
opcf $arg1

# Node $_obj_geo1_foreach_count3 (Sop/block_begin)
set _obj_geo1_foreach_count3 = `run("opadd -e -n -v block_begin foreach_count3")`
oplocate -x `$arg2 + -16.817622706356239` -y `$arg3 + -49.38667239271399` $_obj_geo1_foreach_count3
opparm -V 20.0.547 $_obj_geo1_foreach_count3 method ( metadata ) blockpath ( ../foreach_end5 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_foreach_count3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_foreach_count3
opexprlanguage -s hscript $_obj_geo1_foreach_count3
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_foreach_count3
opset -p on $_obj_geo1_foreach_count3
opcf $arg1

# Node $_obj_geo1_groupdelete1 (Sop/groupdelete)
set _obj_geo1_groupdelete1 = `run("opadd -e -n -v groupdelete groupdelete1")`
oplocate -x `$arg2 + 0.74866914606617385` -y `$arg3 + -21.08526395573168` $_obj_geo1_groupdelete1
opparm $_obj_geo1_groupdelete1  deletions ( 1 )
opparm -V 20.0.547 $_obj_geo1_groupdelete1 group1 ( * )
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_geo1_groupdelete1
opset -d off -r off -h on -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_groupdelete1
opexprlanguage -s hscript $_obj_geo1_groupdelete1
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_groupdelete1
opset -p on $_obj_geo1_groupdelete1
opcf $arg1

# Node $_obj_geo1_rest (Sop/attribwrangle)
set _obj_geo1_rest = `run("opadd -e -n -v attribwrangle rest")`
oplocate -x `$arg2 + -7.2597750910334948` -y `$arg3 + -17.720191514994266` $_obj_geo1_rest
opparm $_obj_geo1_rest  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_rest snippet ( 'v@P = @rest;' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_rest
opexprlanguage -s hscript $_obj_geo1_rest
opuserdata -n '___Version___' -v '' $_obj_geo1_rest
opset -p on $_obj_geo1_rest
opcf $arg1

# Node $_obj_geo1_start_remeshPerPiece (Sop/null)
set _obj_geo1_start_remeshPerPiece = `run("opadd -e -n -v null start_remeshPerPiece")`
oplocate -x `$arg2 + -29.049358532243822` -y `$arg3 + -45.198907406323883` $_obj_geo1_start_remeshPerPiece
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_start_remeshPerPiece
opexprlanguage -s hscript $_obj_geo1_start_remeshPerPiece
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_start_remeshPerPiece
opset -p on $_obj_geo1_start_remeshPerPiece
opcf $arg1

# Node $_obj_geo1_testgeometry_crag1 (Sop/testgeometry_crag)
set _obj_geo1_testgeometry_crag1 = `run("opadd -e -n -v testgeometry_crag testgeometry_crag1")`
oplocate -x `$arg2 + -3.8521402184980311` -y `$arg3 + 0` $_obj_geo1_testgeometry_crag1
chblockbegin
chadd -t 0 0 $_obj_geo1_testgeometry_crag1 frame
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FF' $_obj_geo1_testgeometry_crag1/frame
chblockend
opparm $_obj_geo1_testgeometry_crag1 addshader ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_testgeometry_crag1
opexprlanguage -s hscript $_obj_geo1_testgeometry_crag1
opuserdata -n '___Version___' -v '' $_obj_geo1_testgeometry_crag1
opuserdata -n '___toolcount___' -v '1' $_obj_geo1_testgeometry_crag1
opuserdata -n '___toolid___' -v 'sop_testgeometry_crag' $_obj_geo1_testgeometry_crag1
opset -p on $_obj_geo1_testgeometry_crag1
opcf $arg1

# Node $_obj_geo1_shrinkwrap4 (Sop/shrinkwrap::2.0)
set _obj_geo1_shrinkwrap4 = `run("opadd -e -n -v shrinkwrap::2.0 shrinkwrap4")`
oplocate -x `$arg2 + -31.740813794526119` -y `$arg3 + -49.812082460313562` $_obj_geo1_shrinkwrap4
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_shrinkwrap4
opexprlanguage -s hscript $_obj_geo1_shrinkwrap4
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_shrinkwrap4
opset -p on $_obj_geo1_shrinkwrap4
opcf $arg1

# Node $_obj_geo1_normal2 (Sop/normal)
set _obj_geo1_normal2 = `run("opadd -e -n -v normal normal2")`
oplocate -x `$arg2 + -0.26027552027662537` -y `$arg3 + -73.828984380992949` $_obj_geo1_normal2
opparm -V 20.0.547 $_obj_geo1_normal2 type ( typepoint )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_normal2
opexprlanguage -s hscript $_obj_geo1_normal2
opset -p on $_obj_geo1_normal2
opcf $arg1

# Node $_obj_geo1_groupdelete2 (Sop/groupdelete)
set _obj_geo1_groupdelete2 = `run("opadd -e -n -v groupdelete groupdelete2")`
oplocate -x `$arg2 + -7.2567750895705743` -y `$arg3 + -20.698859935318531` $_obj_geo1_groupdelete2
opparm $_obj_geo1_groupdelete2  deletions ( 1 )
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_geo1_groupdelete2
opset -d off -r off -h on -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_groupdelete2
opexprlanguage -s hscript $_obj_geo1_groupdelete2
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_groupdelete2
opset -p on $_obj_geo1_groupdelete2
opcf $arg1

# Node $_obj_geo1_normal1 (Sop/normal)
set _obj_geo1_normal1 = `run("opadd -e -n -v normal normal1")`
oplocate -x `$arg2 + -3.7204431233982636` -y `$arg3 + -9.6901796843708237` $_obj_geo1_normal1
opparm -V 20.0.547 $_obj_geo1_normal1 type ( typepoint )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_normal1
opexprlanguage -s hscript $_obj_geo1_normal1
opset -p on $_obj_geo1_normal1
opcf $arg1

# Node $_obj_geo1_foreach_count4 (Sop/block_begin)
set _obj_geo1_foreach_count4 = `run("opadd -e -n -v block_begin foreach_count4")`
oplocate -x `$arg2 + -27.484902677837013` -y `$arg3 + -50.857782460313558` $_obj_geo1_foreach_count4
opparm -V 20.0.547 $_obj_geo1_foreach_count4 method ( metadata ) blockpath ( ../foreach_end6 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_foreach_count4
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_foreach_count4
opexprlanguage -s hscript $_obj_geo1_foreach_count4
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_foreach_count4
opset -p on $_obj_geo1_foreach_count4
opcf $arg1

# Node $_obj_geo1_unpack2 (Sop/unpack)
set _obj_geo1_unpack2 = `run("opadd -e -n -v unpack unpack2")`
oplocate -x `$arg2 + 1.3969838619232178e-08` -y `$arg3 + -1.3431072953644474` $_obj_geo1_unpack2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_unpack2
opexprlanguage -s hscript $_obj_geo1_unpack2
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_unpack2
opset -p on $_obj_geo1_unpack2
opcf $arg1

# Node $_obj_geo1_vdbreshapesdf1 (Sop/vdbreshapesdf)
set _obj_geo1_vdbreshapesdf1 = `run("opadd -e -n -v vdbreshapesdf vdbreshapesdf1")`
oplocate -x `$arg2 + -9.5232880471219339` -y `$arg3 + -53.279384987289774` $_obj_geo1_vdbreshapesdf1
opparm -V 20.0.547 $_obj_geo1_vdbreshapesdf1 voxeloffset ( 0.5 )
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_geo1_vdbreshapesdf1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_vdbreshapesdf1
opexprlanguage -s hscript $_obj_geo1_vdbreshapesdf1
opset -p on $_obj_geo1_vdbreshapesdf1
opcf $arg1

# Node $_obj_geo1_OUT_restGeo_crag01 (Sop/null)
set _obj_geo1_OUT_restGeo_crag01 = `run("opadd -e -n -v null OUT_restGeo_crag01")`
oplocate -x `$arg2 + -7.2567750944998783` -y `$arg3 + -24.671123594391194` $_obj_geo1_OUT_restGeo_crag01
opcolor -c 0 0 0 $_obj_geo1_OUT_restGeo_crag01
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_OUT_restGeo_crag01
opexprlanguage -s hscript $_obj_geo1_OUT_restGeo_crag01
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_OUT_restGeo_crag01
opset -p on $_obj_geo1_OUT_restGeo_crag01
opcf $arg1

# Node $_obj_geo1_rest2 (Sop/attribwrangle)
set _obj_geo1_rest2 = `run("opadd -e -n -v attribwrangle rest2")`
oplocate -x `$arg2 + -20.883240682891973` -y `$arg3 + -41.089970379459857` $_obj_geo1_rest2
opparm $_obj_geo1_rest2  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_rest2 snippet ( 'v@P = v@rest;' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_rest2
opexprlanguage -s hscript $_obj_geo1_rest2
opuserdata -n '___Version___' -v '' $_obj_geo1_rest2
opset -p on $_obj_geo1_rest2
opcf $arg1

# Node $_obj_geo1_add1 (Sop/add)
set _obj_geo1_add1 = `run("opadd -e -n -v add add1")`
oplocate -x `$arg2 + 0.74866914606617474` -y `$arg3 + -17.719191527868869` $_obj_geo1_add1
opparm $_obj_geo1_add1  points ( 0 ) prims ( 1 )
opparm -V 20.0.547 $_obj_geo1_add1 keep ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_add1
opexprlanguage -s hscript $_obj_geo1_add1
opset -p on $_obj_geo1_add1
opcf $arg1

# Node $_obj_geo1_connectivity2 (Sop/connectivity)
set _obj_geo1_connectivity2 = `run("opadd -e -n -v connectivity connectivity2")`
oplocate -x `$arg2 + -29.049358532243822` -y `$arg3 + -46.535547212951194` $_obj_geo1_connectivity2
opparm -V 20.0.547 $_obj_geo1_connectivity2 connecttype ( prim )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_connectivity2
opexprlanguage -s hscript $_obj_geo1_connectivity2
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_connectivity2
opset -p on $_obj_geo1_connectivity2
opcf $arg1

# Node $_obj_geo1_col_vol (Sop/groupcreate)
set _obj_geo1_col_vol = `run("opadd -e -n -v groupcreate col_vol")`
oplocate -x `$arg2 + 1.06791984064734` -y `$arg3 + -82.911612936748568` $_obj_geo1_col_vol
opparm -V 20.0.547 $_obj_geo1_col_vol groupname ( vol )
opset -d off -r off -h on -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_col_vol
opexprlanguage -s hscript $_obj_geo1_col_vol
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_col_vol
opset -p on $_obj_geo1_col_vol
opcf $arg1

# Node $_obj_geo1_attribdelete1 (Sop/attribdelete)
set _obj_geo1_attribdelete1 = `run("opadd -e -n -v attribdelete attribdelete1")`
oplocate -x `$arg2 + 0.74521915099547886` -y `$arg3 + -19.849931691746448` $_obj_geo1_attribdelete1
opparm $_obj_geo1_attribdelete1 negate ( on ) ptdel ( 'N P v __tempId rest' )
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_geo1_attribdelete1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_attribdelete1
opexprlanguage -s hscript $_obj_geo1_attribdelete1
opuserdata -n '___Version___' -v '' $_obj_geo1_attribdelete1
opset -p on $_obj_geo1_attribdelete1
opcf $arg1

# Node $_obj_geo1_rest3 (Sop/attribwrangle)
set _obj_geo1_rest3 = `run("opadd -e -n -v attribwrangle rest3")`
oplocate -x `$arg2 + -4.1553590620705485` -y `$arg3 + -65.609237729907477` $_obj_geo1_rest3
opparm $_obj_geo1_rest3  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_geo1_rest3 snippet ( 'v@P = v@rest;' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_rest3
opexprlanguage -s hscript $_obj_geo1_rest3
opuserdata -n '___Version___' -v '' $_obj_geo1_rest3
opset -p on $_obj_geo1_rest3
opcf $arg1

# Node $_obj_geo1_switch2 (Sop/switch)
set _obj_geo1_switch2 = `run("opadd -e -n -v switch switch2")`
oplocate -x `$arg2 + -1.2699659351941834` -y `$arg3 + -13.538668938076089` $_obj_geo1_switch2
opparm -V 20.0.547 $_obj_geo1_switch2 input ( 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_switch2
opexprlanguage -s hscript $_obj_geo1_switch2
opset -p on $_obj_geo1_switch2
opcf $arg1

# Node $_obj_geo1_restFrame (Sop/timeshift)
set _obj_geo1_restFrame = `run("opadd -e -n -v timeshift restFrame")`
oplocate -x `$arg2 + -2.4211861705291637` -y `$arg3 + -12.380293593825719` $_obj_geo1_restFrame
chblockbegin
chadd -t 0 0 $_obj_geo1_restFrame frame
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F '$RFSTART' $_obj_geo1_restFrame/frame
chadd -t 0 0 $_obj_geo1_restFrame time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_restFrame/time
chadd -t 0 0 $_obj_geo1_restFrame frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_restFrame/frange1
chadd -t 0 0 $_obj_geo1_restFrame frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_restFrame/frange2
chadd -t 0 0 $_obj_geo1_restFrame trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_restFrame/trange1
chadd -t 0 0 $_obj_geo1_restFrame trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_restFrame/trange2
chblockend
opparm -V 20.0.547 $_obj_geo1_restFrame frame ( frame )
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_geo1_restFrame
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_restFrame
opexprlanguage -s hscript $_obj_geo1_restFrame
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_restFrame
opset -p on $_obj_geo1_restFrame
opcf $arg1

# Node $_obj_geo1_foreach_begin5 (Sop/block_begin)
set _obj_geo1_foreach_begin5 = `run("opadd -e -n -v block_begin foreach_begin5")`
oplocate -x `$arg2 + -20.878640686358352` -y `$arg3 + -49.38667239271399` $_obj_geo1_foreach_begin5
opparm -V 20.0.547 $_obj_geo1_foreach_begin5 blockpath ( ../foreach_end5 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_foreach_begin5
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_foreach_begin5
opexprlanguage -s hscript $_obj_geo1_foreach_begin5
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_foreach_begin5
opset -p on $_obj_geo1_foreach_begin5
opcf $arg1

# Node $_obj_geo1_attribdelete4 (Sop/attribdelete)
set _obj_geo1_attribdelete4 = `run("opadd -e -n -v attribdelete attribdelete4")`
oplocate -x `$arg2 + -19.18771883415863` -y `$arg3 + -64.186458858544412` $_obj_geo1_attribdelete4
opparm $_obj_geo1_attribdelete4 negate ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_attribdelete4
opexprlanguage -s hscript $_obj_geo1_attribdelete4
opuserdata -n '___Version___' -v '' $_obj_geo1_attribdelete4
opset -p on $_obj_geo1_attribdelete4
opcf $arg1

# Node $_obj_geo1_attribcopy2 (Sop/attribcopy)
set _obj_geo1_attribcopy2 = `run("opadd -e -n -v attribcopy attribcopy2")`
oplocate -x `$arg2 + -3.7238931184689594` -y `$arg3 + -3.4193145480569136` $_obj_geo1_attribcopy2
opparm -V 20.0.547 $_obj_geo1_attribcopy2 attribname ( rest )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_attribcopy2
opexprlanguage -s hscript $_obj_geo1_attribcopy2
opset -p on $_obj_geo1_attribcopy2
opcf $arg1

# Node $_obj_geo1_start_remesh (Sop/null)
set _obj_geo1_start_remesh = `run("opadd -e -n -v null start_remesh")`
oplocate -x `$arg2 + -20.880240686358356` -y `$arg3 + -44.944892580979939` $_obj_geo1_start_remesh
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_start_remesh
opexprlanguage -s hscript $_obj_geo1_start_remesh
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_start_remesh
opset -p on $_obj_geo1_start_remesh
opcf $arg1

# Node $_obj_geo1_attribcopy1 (Sop/attribcopy)
set _obj_geo1_attribcopy1 = `run("opadd -e -n -v attribcopy attribcopy1")`
oplocate -x `$arg2 + -2.9306290745108692` -y `$arg3 + -28.091579129953971` $_obj_geo1_attribcopy1
opparm -V 20.0.547 $_obj_geo1_attribcopy1 matchbyattribute ( on ) attributetomatch ( __tempId ) attribname ( 'P v N' )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_attribcopy1
opexprlanguage -s hscript $_obj_geo1_attribcopy1
opset -p on $_obj_geo1_attribcopy1
opcf $arg1

# Node $_obj_geo1_ray3 (Sop/ray)
set _obj_geo1_ray3 = `run("opadd -e -n -v ray ray3")`
oplocate -x `$arg2 + -18.775040686358352` -y `$arg3 + -52.97357239271399` $_obj_geo1_ray3
chblockbegin
chadd -t 41.666666666666664 41.666666666666664 $_obj_geo1_ray3 dirx
chkey -t 41.666666666666664 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.x $_obj_geo1_ray3/dirx
chadd -t 41.666666666666664 41.666666666666664 $_obj_geo1_ray3 diry
chkey -t 41.666666666666664 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.y $_obj_geo1_ray3/diry
chadd -t 41.666666666666664 41.666666666666664 $_obj_geo1_ray3 dirz
chkey -t 41.666666666666664 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.z $_obj_geo1_ray3/dirz
chblockend
opparm -V 20.0.547 $_obj_geo1_ray3 method ( minimum )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_ray3
opexprlanguage -s hscript $_obj_geo1_ray3
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_ray3
opset -p on $_obj_geo1_ray3
opcf $arg1

# Node $_obj_geo1_attribdelete2 (Sop/attribdelete)
set _obj_geo1_attribdelete2 = `run("opadd -e -n -v attribdelete attribdelete2")`
oplocate -x `$arg2 + -7.2602250895705733` -y `$arg3 + -19.463524935318532` $_obj_geo1_attribdelete2
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_geo1_attribdelete2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_attribdelete2
opexprlanguage -s hscript $_obj_geo1_attribdelete2
opuserdata -n '___Version___' -v '' $_obj_geo1_attribdelete2
opset -p on $_obj_geo1_attribdelete2
opcf $arg1

# Node $_obj_geo1_trail1 (Sop/trail)
set _obj_geo1_trail1 = `run("opadd -e -n -v trail trail1")`
oplocate -x `$arg2 + 0.74866914606617474` -y `$arg3 + -18.719191539789797` $_obj_geo1_trail1
opparm -V 20.0.547 $_obj_geo1_trail1 result ( velocity )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_trail1
opexprlanguage -s hscript $_obj_geo1_trail1
opset -p on $_obj_geo1_trail1
opcf $arg1

# Node $_obj_geo1_attribdelete3 (Sop/attribdelete)
set _obj_geo1_attribdelete3 = `run("opadd -e -n -v attribdelete attribdelete3")`
oplocate -x `$arg2 + -7.1238891365233687` -y `$arg3 + -26.175831087104733` $_obj_geo1_attribdelete3
opparm $_obj_geo1_attribdelete3 ptdel ( N )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_attribdelete3
opexprlanguage -s hscript $_obj_geo1_attribdelete3
opuserdata -n '___Version___' -v '' $_obj_geo1_attribdelete3
opset -p on $_obj_geo1_attribdelete3
opcf $arg1

# Node $_obj_geo1_foreach_begin6 (Sop/block_begin)
set _obj_geo1_foreach_begin6 = `run("opadd -e -n -v block_begin foreach_begin6")`
oplocate -x `$arg2 + -31.739213794526115` -y `$arg3 + -50.857782460313558` $_obj_geo1_foreach_begin6
opparm -V 20.0.547 $_obj_geo1_foreach_begin6 blockpath ( ../foreach_end6 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_foreach_begin6
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_foreach_begin6
opexprlanguage -s hscript $_obj_geo1_foreach_begin6
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_foreach_begin6
opset -p on $_obj_geo1_foreach_begin6
opcf $arg1

# Node $_obj_geo1_convertvdb1 (Sop/convertvdb)
set _obj_geo1_convertvdb1 = `run("opadd -e -n -v convertvdb convertvdb1")`
oplocate -x `$arg2 + -9.5245380757321634` -y `$arg3 + -54.51813094076816` $_obj_geo1_convertvdb1
opparm -V 20.0.547 $_obj_geo1_convertvdb1 conversion ( poly )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_convertvdb1
opexprlanguage -s hscript $_obj_geo1_convertvdb1
opset -p on $_obj_geo1_convertvdb1
opcf $arg1

# Node $_obj_geo1_unpack1 (Sop/unpack)
set _obj_geo1_unpack1 = `run("opadd -e -n -v unpack unpack1")`
oplocate -x `$arg2 + -3.8521402045281925` -y `$arg3 + -1.3431072953644474` $_obj_geo1_unpack1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_unpack1
opexprlanguage -s hscript $_obj_geo1_unpack1
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_unpack1
opset -p on $_obj_geo1_unpack1
opcf $arg1

# Node $_obj_geo1_ray4 (Sop/ray)
set _obj_geo1_ray4 = `run("opadd -e -n -v ray ray4")`
oplocate -x `$arg2 + -29.290290239460759` -y `$arg3 + -53.35512364533534` $_obj_geo1_ray4
chblockbegin
chadd -t 41.666666666666664 41.666666666666664 $_obj_geo1_ray4 dirx
chkey -t 41.666666666666664 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.x $_obj_geo1_ray4/dirx
chadd -t 41.666666666666664 41.666666666666664 $_obj_geo1_ray4 diry
chkey -t 41.666666666666664 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.y $_obj_geo1_ray4/diry
chadd -t 41.666666666666664 41.666666666666664 $_obj_geo1_ray4 dirz
chkey -t 41.666666666666664 -v 0 -m 0 -a 0 -A 0 -T a  -F @N.z $_obj_geo1_ray4/dirz
chblockend
opparm -V 20.0.547 $_obj_geo1_ray4 method ( minimum )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_ray4
opexprlanguage -s hscript $_obj_geo1_ray4
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_ray4
opset -p on $_obj_geo1_ray4
opcf $arg1

# Node $_obj_geo1_col_geo (Sop/groupcreate)
set _obj_geo1_col_geo = `run("opadd -e -n -v groupcreate col_geo")`
oplocate -x `$arg2 + -1.7424697695547771` -y `$arg3 + -82.911612936748568` $_obj_geo1_col_geo
opparm -V 20.0.547 $_obj_geo1_col_geo groupname ( geo )
opset -d off -r off -h on -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_col_geo
opexprlanguage -s hscript $_obj_geo1_col_geo
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_col_geo
opset -p on $_obj_geo1_col_geo
opcf $arg1

# Node $_obj_geo1_null2 (Sop/null)
set _obj_geo1_null2 = `run("opadd -e -n -v null null2")`
oplocate -x `$arg2 + -0.26027552027662537` -y `$arg3 + -62.370543741645818` $_obj_geo1_null2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_null2
opexprlanguage -s hscript $_obj_geo1_null2
opset -p on $_obj_geo1_null2
opcf $arg1

# Node $_obj_geo1_IN_animGeo_crag01 (Sop/null)
set _obj_geo1_IN_animGeo_crag01 = `run("opadd -e -n -v null IN_animGeo_crag01")`
oplocate -x `$arg2 + -3.7204431233982636` -y `$arg3 + -7.3549199051674758` $_obj_geo1_IN_animGeo_crag01
opcolor -c 0 0 0 $_obj_geo1_IN_animGeo_crag01
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_IN_animGeo_crag01
opexprlanguage -s hscript $_obj_geo1_IN_animGeo_crag01
opset -p on $_obj_geo1_IN_animGeo_crag01
opcf $arg1

# Node $_obj_geo1_timeshift1 (Sop/timeshift)
set _obj_geo1_timeshift1 = `run("opadd -e -n -v timeshift timeshift1")`
oplocate -x `$arg2 + -19.184268839087935` -y `$arg3 + -63.186458846623481` $_obj_geo1_timeshift1
chblockbegin
chadd -t 0 0 $_obj_geo1_timeshift1 frame
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F '$RFSTART' $_obj_geo1_timeshift1/frame
chadd -t 0 0 $_obj_geo1_timeshift1 time
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$T' $_obj_geo1_timeshift1/time
chadd -t 0 0 $_obj_geo1_timeshift1 frange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo1_timeshift1/frange1
chadd -t 0 0 $_obj_geo1_timeshift1 frange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo1_timeshift1/frange2
chadd -t 0 0 $_obj_geo1_timeshift1 trange1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TSTART' $_obj_geo1_timeshift1/trange1
chadd -t 0 0 $_obj_geo1_timeshift1 trange2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$TEND' $_obj_geo1_timeshift1/trange2
chblockend
opparm -V 20.0.547 $_obj_geo1_timeshift1 frame ( frame )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_timeshift1
opexprlanguage -s hscript $_obj_geo1_timeshift1
opset -p on $_obj_geo1_timeshift1
opcf $arg1

# Node $_obj_geo1_rest1 (Sop/rest)
set _obj_geo1_rest1 = `run("opadd -e -n -v rest rest1")`
oplocate -x `$arg2 + -3.4916372703636402` -y `$arg3 + -14.930169090051407` $_obj_geo1_rest1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_rest1
opexprlanguage -s hscript $_obj_geo1_rest1
opset -p on $_obj_geo1_rest1
opcf $arg1

# Node $_obj_geo1_foreach_begin7 (Sop/block_begin)
set _obj_geo1_foreach_begin7 = `run("opadd -e -n -v block_begin foreach_begin7")`
oplocate -x `$arg2 + -29.047758518721857` -y `$arg3 + -47.555866801791666` $_obj_geo1_foreach_begin7
opparm -V 20.0.547 $_obj_geo1_foreach_begin7 method ( piece ) blockpath ( ../foreach_end7 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_foreach_begin7
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_foreach_begin7
opexprlanguage -s hscript $_obj_geo1_foreach_begin7
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_foreach_begin7
opset -p on $_obj_geo1_foreach_begin7
opcf $arg1

# Node $_obj_geo1_foreach_end5 (Sop/block_end)
set _obj_geo1_foreach_end5 = `run("opadd -e -n -v block_end foreach_end5")`
oplocate -x `$arg2 + -18.657982578006099` -y `$arg3 + -55.013305906032173` $_obj_geo1_foreach_end5
opparm -V 20.0.547 $_obj_geo1_foreach_end5 itermethod ( count ) blockpath ( ../foreach_begin5 ) templatepath ( ../foreach_begin5 )
opcolor -c 0.75 0.40000000596046448 0 $_obj_geo1_foreach_end5
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_foreach_end5
opexprlanguage -s hscript $_obj_geo1_foreach_end5
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_foreach_end5
opset -p on $_obj_geo1_foreach_end5
opcf $arg1

# Node $_obj_geo1_trail2 (Sop/trail)
set _obj_geo1_trail2 = `run("opadd -e -n -v trail trail2")`
oplocate -x `$arg2 + -0.26027552027662537` -y `$arg3 + -72.828984369072018` $_obj_geo1_trail2
opparm -V 20.0.547 $_obj_geo1_trail2 result ( velocity )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_trail2
opexprlanguage -s hscript $_obj_geo1_trail2
opset -p on $_obj_geo1_trail2
opcf $arg1

# Node $_obj_geo1_start_simpleCol (Sop/null)
set _obj_geo1_start_simpleCol = `run("opadd -e -n -v null start_simpleCol")`
oplocate -x `$arg2 + -9.8217088175375888` -y `$arg3 + -44.73820719607636` $_obj_geo1_start_simpleCol
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_start_simpleCol
opexprlanguage -s hscript $_obj_geo1_start_simpleCol
opset -p on $_obj_geo1_start_simpleCol
opcf $arg1

# Node $_obj_geo1_remesh4 (Sop/remesh::2.0)
set _obj_geo1_remesh4 = `run("opadd -e -n -v remesh::2.0 remesh4")`
oplocate -x `$arg2 + -20.694240686358352` -y `$arg3 + -51.512372392713985` $_obj_geo1_remesh4
opparm -V 20.0.547 $_obj_geo1_remesh4 targetsize ( 0.05 )
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_geo1_remesh4
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_remesh4
opexprlanguage -s hscript $_obj_geo1_remesh4
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_remesh4
opset -p on $_obj_geo1_remesh4
opcf $arg1

# Node $_obj_geo1_OUT_animpts_crag01 (Sop/null)
set _obj_geo1_OUT_animpts_crag01 = `run("opadd -e -n -v null OUT_animpts_crag01")`
oplocate -x `$arg2 + 0.74866914606617385` -y `$arg3 + -24.671123594391194` $_obj_geo1_OUT_animpts_crag01
opcolor -c 0 0 0 $_obj_geo1_OUT_animpts_crag01
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo1_OUT_animpts_crag01
opexprlanguage -s hscript $_obj_geo1_OUT_animpts_crag01
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo1_OUT_animpts_crag01
opset -p on $_obj_geo1_OUT_animpts_crag01
opcf $arg1

# Node $_obj_geo1_switch1 (Sop/switch)
set _obj_geo1_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + -19.18426884840116` -y `$arg3 + -61.878133680702803` $_obj_geo1_switch1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo1_switch1
opexprlanguage -s hscript $_obj_geo1_switch1
opset -p on $_obj_geo1_switch1

opcf $arg1
opwire -n $_obj_geo1_merge1 -0 $_obj_geo1_OUT_animGeo_crag01_prxy01_Collision01
opcf $arg1
opwire -n $_obj_geo1_ray4 -0 $_obj_geo1_foreach_end6
opcf $arg1
opwire -n $_obj_geo1_attribdelete4 -0 $_obj_geo1_rest4
opcf $arg1
opwire -n $_obj_geo1_unpack2 -0 $_obj_geo1_pref1
opcf $arg1
opwire -n $_obj_geo1_start_simpleCol -0 $_obj_geo1_vdbfrompolygons1
opcf $arg1
opwire -n $_obj_geo1_normal1 -0 $_obj_geo1_tempId
opcf $arg1
opwire -n $_obj_geo1_foreach_begin6 -0 $_obj_geo1_remesh5
opcf $arg1
opwire -n $_obj_geo1_OUT_animGeo_crag01_prxy01 -0 $_obj_geo1_collisionsource1
opcf $arg1
opwire -n $_obj_geo1_attribcopy1 -0 $_obj_geo1_OUT_animGeo_crag01
opcf $arg1
opwire -n $_obj_geo1_IN_animGeo_crag01 -0 $_obj_geo1_unpack3
opcf $arg1
opwire -n $_obj_geo1_rest4 -0 $_obj_geo1_OUT_restGeo_crag01_prxy01
opcf $arg1
opwire -n $_obj_geo1_foreach_end6 -0 $_obj_geo1_foreach_end7
opcf $arg1
opwire -n $_obj_geo1_col_geo -0 $_obj_geo1_merge1
opwire -n $_obj_geo1_col_vol -1 $_obj_geo1_merge1
opcf $arg1
opwire -n $_obj_geo1_start_remesh -0 $_obj_geo1_shrinkwrap3
opcf $arg1
opwire -n $_obj_geo1_normal2 -0 $_obj_geo1_OUT_animGeo_crag01_prxy01
opcf $arg1
opwire -n $_obj_geo1_OUT_restGeo_crag01_prxy01 -0 $_obj_geo1_pointdeform1
opwire -n $_obj_geo1_rest3 -1 $_obj_geo1_pointdeform1
opwire -n $_obj_geo1_null2 -2 $_obj_geo1_pointdeform1
opcf $arg1
opcf $arg1
opwire -n $_obj_geo1_tempId -0 $_obj_geo1_pref
opcf $arg1
opcf $arg1
opwire -n $_obj_geo1_attribdelete1 -0 $_obj_geo1_groupdelete1
opcf $arg1
opwire -n $_obj_geo1_rest1 -0 $_obj_geo1_rest
opcf $arg1
opwire -n $_obj_geo1_rest2 -0 $_obj_geo1_start_remeshPerPiece
opcf $arg1
opcf $arg1
opwire -n $_obj_geo1_foreach_begin7 -0 $_obj_geo1_shrinkwrap4
opcf $arg1
opwire -n $_obj_geo1_trail2 -0 $_obj_geo1_normal2
opcf $arg1
opwire -n $_obj_geo1_attribdelete2 -0 $_obj_geo1_groupdelete2
opcf $arg1
opwire -n $_obj_geo1_unpack3 -0 $_obj_geo1_normal1
opcf $arg1
opcf $arg1
opwire -n $_obj_geo1_testgeometry_crag2 -0 $_obj_geo1_unpack2
opcf $arg1
opwire -n $_obj_geo1_vdbfrompolygons1 -0 $_obj_geo1_vdbreshapesdf1
opcf $arg1
opwire -n $_obj_geo1_groupdelete2 -0 $_obj_geo1_OUT_restGeo_crag01
opcf $arg1
opwire -n $_obj_geo1_OUT_animGeo_crag01 -0 $_obj_geo1_rest2
opcf $arg1
opwire -n $_obj_geo1_rest1 -0 $_obj_geo1_add1
opcf $arg1
opwire -n $_obj_geo1_start_remeshPerPiece -0 $_obj_geo1_connectivity2
opcf $arg1
opwire -n -o 1 $_obj_geo1_collisionsource1 -0 $_obj_geo1_col_vol
opcf $arg1
opwire -n $_obj_geo1_trail1 -0 $_obj_geo1_attribdelete1
opcf $arg1
opwire -n $_obj_geo1_null2 -0 $_obj_geo1_rest3
opcf $arg1
opwire -n $_obj_geo1_restFrame -0 $_obj_geo1_switch2
opwire -n $_obj_geo1_pref -1 $_obj_geo1_switch2
opcf $arg1
opwire -n $_obj_geo1_tempId -0 $_obj_geo1_restFrame
opcf $arg1
opwire -n $_obj_geo1_shrinkwrap3 -0 $_obj_geo1_foreach_begin5
opcf $arg1
opwire -n $_obj_geo1_timeshift1 -0 $_obj_geo1_attribdelete4
opcf $arg1
opwire -n $_obj_geo1_unpack1 -0 $_obj_geo1_attribcopy2
opwire -n $_obj_geo1_pref1 -1 $_obj_geo1_attribcopy2
opcf $arg1
opwire -n $_obj_geo1_rest2 -0 $_obj_geo1_start_remesh
opcf $arg1
opwire -n $_obj_geo1_attribdelete3 -0 $_obj_geo1_attribcopy1
opwire -n $_obj_geo1_OUT_animpts_crag01 -1 $_obj_geo1_attribcopy1
opcf $arg1
opwire -n $_obj_geo1_remesh4 -0 $_obj_geo1_ray3
opwire -n $_obj_geo1_start_remesh -1 $_obj_geo1_ray3
opcf $arg1
opwire -n $_obj_geo1_rest -0 $_obj_geo1_attribdelete2
opcf $arg1
opwire -n $_obj_geo1_add1 -0 $_obj_geo1_trail1
opcf $arg1
opwire -n $_obj_geo1_OUT_restGeo_crag01 -0 $_obj_geo1_attribdelete3
opcf $arg1
opwire -n $_obj_geo1_shrinkwrap4 -0 $_obj_geo1_foreach_begin6
opcf $arg1
opwire -n $_obj_geo1_vdbreshapesdf1 -0 $_obj_geo1_convertvdb1
opcf $arg1
opwire -n $_obj_geo1_testgeometry_crag1 -0 $_obj_geo1_unpack1
opcf $arg1
opwire -n $_obj_geo1_remesh5 -0 $_obj_geo1_ray4
opwire -n $_obj_geo1_foreach_begin7 -1 $_obj_geo1_ray4
opcf $arg1
opwire -n $_obj_geo1_collisionsource1 -0 $_obj_geo1_col_geo
opcf $arg1
opwire -n $_obj_geo1_OUT_animGeo_crag01 -0 $_obj_geo1_null2
opcf $arg1
opwire -n $_obj_geo1_attribcopy2 -0 $_obj_geo1_IN_animGeo_crag01
opcf $arg1
opwire -n $_obj_geo1_switch1 -0 $_obj_geo1_timeshift1
opcf $arg1
opwire -n $_obj_geo1_tempId -0 $_obj_geo1_rest1
opwire -n $_obj_geo1_switch2 -1 $_obj_geo1_rest1
opcf $arg1
opwire -n $_obj_geo1_connectivity2 -0 $_obj_geo1_foreach_begin7
opcf $arg1
opwire -n $_obj_geo1_ray3 -0 $_obj_geo1_foreach_end5
opcf $arg1
opwire -n $_obj_geo1_pointdeform1 -0 $_obj_geo1_trail2
opcf $arg1
opwire -n $_obj_geo1_rest2 -0 $_obj_geo1_start_simpleCol
opcf $arg1
opwire -n $_obj_geo1_foreach_begin5 -0 $_obj_geo1_remesh4
opcf $arg1
opwire -n $_obj_geo1_groupdelete1 -0 $_obj_geo1_OUT_animpts_crag01
opcf $arg1
opwire -n $_obj_geo1_foreach_end7 -0 $_obj_geo1_switch1
opwire -n $_obj_geo1_foreach_end5 -1 $_obj_geo1_switch1
opwire -n $_obj_geo1_convertvdb1 -2 $_obj_geo1_switch1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo1_OUT_animGeo_crag01_prxy01_Collision01
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo1_testgeometry_crag2
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="cfgDopnetGeneric01" label="cfg Dopnet Generic 01" icon="MISC_generic">
    <toolMenuContext name="network">
      <contextOpType>Sop/dopnet</contextOpType>
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if "outputnodename" in kwargs and "inputindex" in kwargs:
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if "inputnodename" in kwargs and "outputindex" in kwargs:
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9
    if "autoplace" in kwargs:
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if "shiftclick" in kwargs and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if "nodepositionx" in kwargs and             "nodepositiony" in kwargs:
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if "node_bbox" in kwargs:
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'

pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if 'null' not in child_type:
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r'''
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_geo2_dopnet1 (Sop/dopnet)
set _obj_geo2_dopnet1 = `run("opadd -e -n -v dopnet dopnet1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo2_dopnet1
opparm $_obj_geo2_dopnet1  numobj ( 1 )
chblockbegin
chadd -t 0 0 $_obj_geo2_dopnet1 timestep
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("timescale")/(ch("substep")*$FPS)' $_obj_geo2_dopnet1/timestep
chadd -t 0 0 $_obj_geo2_dopnet1 timeoffset
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '(ch("startframe")-1)/$FPS' $_obj_geo2_dopnet1/timeoffset
chblockend
opparm -V 20.0.547 $_obj_geo2_dopnet1 objname1 ( * )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo2_dopnet1
opexprlanguage -s hscript $_obj_geo2_dopnet1
opcf $_obj_geo2_dopnet1

# Node $_obj_geo2_dopnet1_output (Dop/output)
set _obj_geo2_dopnet1_output = `run("opadd -e -n -v output output")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_geo2_dopnet1_output
chblockbegin
chadd -t 0 0 $_obj_geo2_dopnet1_output f1
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_geo2_dopnet1_output/f1
chadd -t 0 0 $_obj_geo2_dopnet1_output f2
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_geo2_dopnet1_output/f2
chblockend
opset -d on -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo2_dopnet1_output
opexprlanguage -s hscript $_obj_geo2_dopnet1_output
opuserdata -n '___Version___' -v '' $_obj_geo2_dopnet1_output
opcf ..
opset -p on $_obj_geo2_dopnet1
opcf $arg1

# Node $_obj_geo2_IN_Forces (Sop/null)
set _obj_geo2_IN_Forces = `run("opadd -e -n -v null IN_Forces")`
oplocate -x `$arg2 + 3.8232192701664385` -y `$arg3 + 2.6961029308824322` $_obj_geo2_IN_Forces
opcolor -c 0 0 0 $_obj_geo2_IN_Forces
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo2_IN_Forces
opexprlanguage -s hscript $_obj_geo2_IN_Forces
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo2_IN_Forces
opset -p on $_obj_geo2_IN_Forces
opcf $arg1

# Node $_obj_geo2_OM_Col (Sop/object_merge)
set _obj_geo2_OM_Col = `run("opadd -e -n -v object_merge OM_Col")`
oplocate -x `$arg2 + -0.0012500286102294922` -y `$arg3 + 4.4027919256993613` $_obj_geo2_OM_Col
opparm $_obj_geo2_OM_Col  numobj ( 1 )
opcolor -c 0.28999999165534973 0.56499999761581421 0.88599997758865356 $_obj_geo2_OM_Col
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo2_OM_Col
opexprlanguage -s hscript $_obj_geo2_OM_Col
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo2_OM_Col
opset -p on $_obj_geo2_OM_Col
opcf $arg1

# Node $_obj_geo2_dopimportfield1 (Sop/dopimportfield::2.0)
set _obj_geo2_dopimportfield1 = `run("opadd -e -n -v dopimportfield::2.0 dopimportfield1")`
oplocate -x `$arg2 + 0` -y `$arg3 + -2.1117997951113807` $_obj_geo2_dopimportfield1
opparm $_obj_geo2_dopimportfield1  fields ( 0 ) attribute_numcasts ( 0 ) compression ( 0 )
opparm -V 1 $_obj_geo2_dopimportfield1 doppath ( ../dopnet1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_geo2_dopimportfield1
opexprlanguage -s hscript $_obj_geo2_dopimportfield1
opuserdata -n '___Version___' -v '1' $_obj_geo2_dopimportfield1
opset -p on $_obj_geo2_dopimportfield1
opcf $arg1

# Node $_obj_geo2_IN_Col (Sop/null)
set _obj_geo2_IN_Col = `run("opadd -e -n -v null IN_Col")`
oplocate -x `$arg2 + -5.5511151231257827e-17` -y `$arg3 + 2.6961029308824322` $_obj_geo2_IN_Col
opcolor -c 0 0 0 $_obj_geo2_IN_Col
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo2_IN_Col
opexprlanguage -s hscript $_obj_geo2_IN_Col
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo2_IN_Col
opset -p on $_obj_geo2_IN_Col
opcf $arg1

# Node $_obj_geo2_OM_Src (Sop/object_merge)
set _obj_geo2_OM_Src = `run("opadd -e -n -v object_merge OM_Src")`
oplocate -x `$arg2 + -3.7125795261977559` -y `$arg3 + 4.4027919256993613` $_obj_geo2_OM_Src
opparm $_obj_geo2_OM_Src  numobj ( 1 )
opcolor -c 0.28999999165534973 0.56499999761581421 0.88599997758865356 $_obj_geo2_OM_Src
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo2_OM_Src
opexprlanguage -s hscript $_obj_geo2_OM_Src
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo2_OM_Src
opset -p on $_obj_geo2_OM_Src
opcf $arg1

# Node $_obj_geo2_OM_Forces (Sop/object_merge)
set _obj_geo2_OM_Forces = `run("opadd -e -n -v object_merge OM_Forces")`
oplocate -x `$arg2 + 3.821969241556209` -y `$arg3 + 4.4027522105333574` $_obj_geo2_OM_Forces
opparm $_obj_geo2_OM_Forces  numobj ( 1 )
opcolor -c 0.28999999165534973 0.56499999761581421 0.88599997758865356 $_obj_geo2_OM_Forces
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo2_OM_Forces
opexprlanguage -s hscript $_obj_geo2_OM_Forces
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo2_OM_Forces
opset -p on $_obj_geo2_OM_Forces
opcf $arg1

# Node $_obj_geo2_OUT_Sim01 (Sop/null)
set _obj_geo2_OUT_Sim01 = `run("opadd -e -n -v null OUT_Sim01")`
oplocate -x `$arg2 + 4.3895594469822719e-06` -y `$arg3 + -3.7201302627273094` $_obj_geo2_OUT_Sim01
opcolor -c 0 0 0 $_obj_geo2_OUT_Sim01
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo2_OUT_Sim01
opexprlanguage -s hscript $_obj_geo2_OUT_Sim01
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo2_OUT_Sim01
opset -p on $_obj_geo2_OUT_Sim01
opcf $arg1

# Node $_obj_geo2_IN_Src (Sop/null)
set _obj_geo2_IN_Src = `run("opadd -e -n -v null IN_Src")`
oplocate -x `$arg2 + -3.7113294975875264` -y `$arg3 + 2.6961029308824322` $_obj_geo2_IN_Src
opcolor -c 0 0 0 $_obj_geo2_IN_Src
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_geo2_IN_Src
opexprlanguage -s hscript $_obj_geo2_IN_Src
opuserdata -n '___Version___' -v '20.0.547' $_obj_geo2_IN_Src
opset -p on $_obj_geo2_IN_Src

opcf $arg1
opwire -n $_obj_geo2_IN_Src -0 $_obj_geo2_dopnet1
opwire -n $_obj_geo2_IN_Col -1 $_obj_geo2_dopnet1
opwire -n $_obj_geo2_IN_Forces -2 $_obj_geo2_dopnet1
opcf $_obj_geo2_dopnet1
opcf ..
opcf $arg1
opwire -n $_obj_geo2_OM_Forces -0 $_obj_geo2_IN_Forces
opcf $arg1
opcf $arg1
opcf $arg1
opwire -n $_obj_geo2_OM_Col -0 $_obj_geo2_IN_Col
opcf $arg1
opcf $arg1
opcf $arg1
opwire -n $_obj_geo2_dopimportfield1 -0 $_obj_geo2_OUT_Sim01
opcf $arg1
opwire -n $_obj_geo2_OM_Src -0 $_obj_geo2_IN_Src

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_geo2_OUT_Sim01
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_geo2_dopnet1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <toolshelf name="DJ_configNodesSop" label="DJ_Config Nodes Sop">
    <memberTool name="cfgCamFur"/>
    <memberTool name="cfgGeoPrep01"/>
    <memberTool name="cfgGeoPrep02"/>
    <memberTool name="cfgGeoPrep03"/>
    <memberTool name="cfgGeoPrep"/>
    <memberTool name="cfgDopnetGeneric01"/>
    <memberTool name="cfgPcDensityVex"/>
    <memberTool name="cfgPscaleMasterVop"/>
    <memberTool name="cfg_popPreSim01"/>
    <memberTool name="cfg_popPostSim01"/>
  </toolshelf>

  <tool name="cfgPcDensityVex" label="cfg PcDensity Vex" icon="SOP_subnet">
    <helpURL>operator:Sop/subnet</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/subnet</contextOpType>
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if "outputnodename" in kwargs and "inputindex" in kwargs:
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if "inputnodename" in kwargs and "outputindex" in kwargs:
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9
    if "autoplace" in kwargs:
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if "shiftclick" in kwargs and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if "nodepositionx" in kwargs and             "nodepositiony" in kwargs:
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if "node_bbox" in kwargs:
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'

pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if 'subnet' not in child_type:
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r'''
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_grid1_PcDensity (Sop/subnet)
set _obj_grid1_PcDensity = `run("opadd -e -n -v subnet PcDensity")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_grid1_PcDensity
opspareds '    parm {         name    "label1"         baseparm         label   "Input #1 Label"         invisible         export  all     }     parm {         name    "label2"         baseparm         label   "Input #2 Label"         invisible         export  all     }     parm {         name    "label3"         baseparm         label   "Input #3 Label"         invisible         export  all     }     parm {         name    "label4"         baseparm         label   "Input #4 Label"         invisible         export  all     }     groupsimple {         name    "folder0"         label   "PcDensity"          groupsimple {             name    "folder1___2"             label   "Density"              parm {                 name    "radius_"                 label   "Radius"                 type    float                 default { "0" }                 range   { 0 10 }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "maxpt_"                 label   "Maximum Points"                 type    integer                 default { "0" }                 range   { 0 500 }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "denisty"                 label   "Density"                 type    toggle                 default { "0" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "color"                 label   "Color"                 type    toggle                 default { "0" }                 parmtag { "script_callback_language" "python" }             }         }          groupsimple {             name    "delete_select"             label   "Delete Select Points"              parm {                 name    "delete_"                 label   "Delete Points"                 type    toggle                 default { "0" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "select_Cd_"                 label   "Select Points"                 type    toggle                 default { "0" }                 parmtag { "script_callback_language" "python" }             }             parm {                 name    "threshold_"                 label   "Threshold"                 type    float                 default { "0" }                 range   { 0 1 }                 parmtag { "script_callback_language" "python" }             }         }      }  ' $_obj_grid1_PcDensity
opparm -V 20.0.547 $_obj_grid1_PcDensity folder0 ( 1 ) radius_ ( 0.2 ) maxpt_ ( 150 ) denisty ( on ) color ( on ) threshold_ ( 0.05 )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_grid1_PcDensity
opexprlanguage -s hscript $_obj_grid1_PcDensity
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_PcDensity
opuserdata -n '___toolcount___' -v '7' $_obj_grid1_PcDensity
opuserdata -n '___toolid___' -v 'test' $_obj_grid1_PcDensity
opcf $_obj_grid1_PcDensity

# Node $_obj_grid1_PcDensity_pcDensity (Sop/attribwrangle)
set _obj_grid1_PcDensity_pcDensity = `run("opadd -e -n -v attribwrangle pcDensity")`
oplocate -x `$arg2 + 0.098039200000000007` -y `$arg3 + 4.0940700000000003` $_obj_grid1_PcDensity_pcDensity
opspareds '    group {         name    "folder1"         label   "Code"          parm {             name    "group"             baseparm             label   "Group"             export  none             bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."                 0 1 0xffffffff 0 grouptype 0         }         parm {             name    "grouptype"             baseparm             label   "Group Type"             export  none         }         parm {             name    "class"             baseparm             label   "Run Over"             export  none         }         parm {             name    "vex_numcount"             baseparm             label   "Number Count"             export  none         }         parm {             name    "vex_threadjobsize"             baseparm             label   "Thread Job Size"             export  none         }         parm {             name    "snippet"             baseparm             label   "VEXpression"             export  all         }         parm {             name    "exportlist"             baseparm             label   "Attributes to Create"             export  none         }         parm {             name    "vex_strict"             baseparm             label   "Enforce Prototypes"             export  none         }     }      group {         name    "folder1_1"         label   "Bindings"          parm {             name    "autobind"             baseparm             label   "Autobind by Name"             export  none         }         multiparm {             name    "bindings"             label    "Number of Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindname#"                 baseparm                 label   "Attribute Name"                 export  none             }             parm {                 name    "bindparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "groupautobind"             baseparm             label   "Autobind Groups by Name"             export  none         }         multiparm {             name    "groupbindings"             label    "Group Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindgroupname#"                 baseparm                 label   "Group Name"                 export  none             }             parm {                 name    "bindgroupparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "vex_cwdpath"             baseparm             label   "Evaluation Node Path"             export  none         }         parm {             name    "vex_outputmask"             baseparm             label   "Export Parameters"             export  none         }         parm {             name    "vex_updatenmls"             baseparm             label   "Update Normals If Displaced"             export  none         }         parm {             name    "vex_matchattrib"             baseparm             label   "Attribute to Match"             export  none         }         parm {             name    "vex_inplace"             baseparm             label   "Compute Results In Place"             export  none         }         parm {             name    "vex_selectiongroup"             baseparm             label   "Output Selection Group"             export  none         }         parm {             name    "vex_precision"             baseparm             label   "VEX Precision"             export  none         }     }      parm {         name    "maxdist"         label   "Maxdist"         type    float         default { "0" }         range   { 0 1 }     }     parm {         name    "maxpt"         label   "Maxpt"         type    float         default { "0" }         range   { 0 100 }     }     parm {         name    "color"         label   "Color"         type    toggle         default { "0" }     }     parm {         name    "density"         label   "Density"         type    toggle         default { "0" }     }     parm {         name    "sepparm"         label   "sepparm"         type    separator         default { "" }     }     parm {         name    "delete_pts"         label   "Delete Pts"         type    toggle         default { "0" }     }     parm {         name    "color_threshold"         label   "Color Threshold"         type    toggle         default { "0" }         range   { 0 10 }     }     parm {         name    "threshold"         label   "Threshold"         type    float         default { "0" }         range   { 0 1 }     } ' $_obj_grid1_PcDensity_pcDensity
opparm $_obj_grid1_PcDensity_pcDensity  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 0 0 $_obj_grid1_PcDensity_pcDensity maxdist
chkey -t 0 -v 0.20000000000000001 -m 0 -a 0 -A 0 -T a  -F 'ch("../radius_")' $_obj_grid1_PcDensity_pcDensity/maxdist
chadd -t 0 0 $_obj_grid1_PcDensity_pcDensity maxpt
chkey -t 0 -v 150 -m 0 -a 0 -A 0 -T a  -F 'ch("../maxpt_")' $_obj_grid1_PcDensity_pcDensity/maxpt
chadd -t 0 0 $_obj_grid1_PcDensity_pcDensity color
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../color")' $_obj_grid1_PcDensity_pcDensity/color
chadd -t 0 0 $_obj_grid1_PcDensity_pcDensity density
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../denisty")' $_obj_grid1_PcDensity_pcDensity/density
chadd -t 0 0 $_obj_grid1_PcDensity_pcDensity delete_pts
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'ch("../delete_")' $_obj_grid1_PcDensity_pcDensity/delete_pts
chadd -t 0 0 $_obj_grid1_PcDensity_pcDensity color_threshold
chkey -t 0 -v 1 -m 0 -a 0 -A 0 -T a  -F 'ch("../select_Cd_")' $_obj_grid1_PcDensity_pcDensity/color_threshold
chadd -t 0 0 $_obj_grid1_PcDensity_pcDensity threshold
chkey -t 0 -v 0.80200000000000005 -m 0 -a 0 -A 0 -T a  -F 'ch("../threshold_")' $_obj_grid1_PcDensity_pcDensity/threshold
chblockend
opparm $_obj_grid1_PcDensity_pcDensity snippet ( '//pcfind generates an array with the maximum size of maxpt\nint points[] = pcfind(0, "P", @P, chf(\'maxdist\'), chi(\'maxpt\'));\nfloat density = float(len(points)) / chi(\'maxpt\');\n\n\n//Exporting attributes\nif(chi("density") == 1)\n       setpointattrib(0, "density", @ptnum, 1); //create density\nif(chi("color") == 1)\n        setpointattrib(0, "Cd", @ptnum, density); // create color\n   \n\n//select points\nif(chi("delete_pts") == 1)\n    if(density < chf("threshold"))\n        removepoint(0, @ptnum); // delete threshold\n\n        \nif(chi("color_threshold") == 1)\n    if(density < chf("threshold"))\n        setpointattrib(0, "Cd", @ptnum, {0,0,0}); // color threshold' ) maxdist ( maxdist ) maxpt ( maxpt ) color ( color ) density ( density ) delete_pts ( delete_pts ) color_threshold ( color_threshold ) threshold ( threshold )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_grid1_PcDensity_pcDensity
opexprlanguage -s hscript $_obj_grid1_PcDensity_pcDensity
opuserdata -n '___Version___' -v '' $_obj_grid1_PcDensity_pcDensity
opuserdata -n '___toolcount___' -v '7' $_obj_grid1_PcDensity_pcDensity
opuserdata -n '___toolid___' -v 'test' $_obj_grid1_PcDensity_pcDensity

# Node $_obj_grid1_PcDensity_output0 (Sop/output)
set _obj_grid1_PcDensity_output0 = `run("opadd -e -n -v output output0")`
oplocate -x `$arg2 + 0.101039` -y `$arg3 + 2.9385300000000001` $_obj_grid1_PcDensity_output0
chblockbegin
chadd -t 0 0 $_obj_grid1_PcDensity_output0 outputidx
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'max(opdigits("."),0)' $_obj_grid1_PcDensity_output0/outputidx
chblockend
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_grid1_PcDensity_output0
opexprlanguage -s hscript $_obj_grid1_PcDensity_output0
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_PcDensity_output0
opuserdata -n '___toolcount___' -v '7' $_obj_grid1_PcDensity_output0
opuserdata -n '___toolid___' -v 'test' $_obj_grid1_PcDensity_output0
oporder -e pcDensity output0 
opcf ..
opset -p on $_obj_grid1_PcDensity

opcf $arg1
opcf $_obj_grid1_PcDensity
opwire -n -i 0 -0 $_obj_grid1_PcDensity_pcDensity
opwire -n $_obj_grid1_PcDensity_pcDensity -0 $_obj_grid1_PcDensity_output0
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_grid1_PcDensity
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_grid1_PcDensity
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="cfgPscaleMasterVop" label="cfg Pscale Master Vop" icon="SOP_attribvop">
    <helpURL>operator:Sop/attribvop</helpURL>
    <toolMenuContext name="network">
      <contextOpType>Sop/attribvop</contextOpType>
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if "outputnodename" in kwargs and "inputindex" in kwargs:
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if "inputnodename" in kwargs and "outputindex" in kwargs:
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9
    if "autoplace" in kwargs:
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if "shiftclick" in kwargs and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if "nodepositionx" in kwargs and             "nodepositiony" in kwargs:
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if "node_bbox" in kwargs:
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'

pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if 'attribvop' not in child_type:
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r'''
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_grid1_pscaleMaster (Sop/attribvop)
set _obj_grid1_pscaleMaster = `run("opadd -e -n -v attribvop pscaleMaster")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_grid1_pscaleMaster
opspareds '    parm {         name    "bindgroup"         baseparm         label   "Group"         export  none         bindselector uvselect "Modify Points"             "Select the points to affect and press Enter to complete."             0 1 0xffffffff 0 bindgrouptype 0     }     parm {         name    "bindgrouptype"         baseparm         label   "Group Type"         export  none     }     parm {         name    "bindclass"         baseparm         label   "Run Over"         export  none     }     parm {         name    "vex_numcount"         baseparm         label   "Number Count"         export  none     }     parm {         name    "vex_threadjobsize"         baseparm         label   "Thread Job Size"         export  none     }     group {         name    "stdswitcher3"         label   "Vex Setup"          parm {             name    "vexsrc"             baseparm             label   "Vex Source"             export  all         }         parm {             name    "shoppath"             baseparm             label   "Shop Path"             export  all         }         parm {             name    "script"             baseparm             label   "Script"             export  all         }         parm {             name    "clear"             baseparm             label   "Re-load VEX Functions"             export  all         }         parm {             name    "vop_compiler"             baseparm             label   "Compiler"             export  none         }         parm {             name    "vop_forcecompile"             baseparm             label   "Force Compile"             export  none         }         parm {             name    "vex_cwdpath"             baseparm             label   "Evaluation Node Path"             export  none         }         parm {             name    "vex_outputmask"             baseparm             label   "Export Parameters"             export  none         }         parm {             name    "vex_multithread"             baseparm             label   "Enable Multithreading"             export  none         }     }      group {         name    "stdswitcher3_1"         label   "Attribute Bindings"          parm {             name    "vex_precision"             baseparm             label   "VEX Precision"             export  none         }         parm {             name    "autobind"             baseparm             label   "Autobind by Name"             export  none         }         multiparm {             name    "bindings"             label    "Number of Bindings"             baseparm             default 0             parmtag { "multistartoffset" "1" }              parm {                 name    "bindname#"                 baseparm                 label   "Attribute Name"                 export  none             }             parm {                 name    "bindparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "groupautobind"             baseparm             label   "Autobind Groups by Name"             export  none         }         multiparm {             name    "groupbindings"             label    "Group Bindings"             baseparm             default 0             parmtag { "multistartoffset" "1" }              parm {                 name    "bindgroupname#"                 baseparm                 label   "Group Name"                 export  none             }             parm {                 name    "bindgroupparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "vex_updatenmls"             baseparm             label   "Update Normals If Displaced"             export  none         }         parm {             name    "vex_matchattrib"             baseparm             label   "Attribute to Match"             export  none         }         parm {             name    "vex_inplace"             baseparm             label   "Compute Results In Place"             export  none         }         parm {             name    "vex_selectiongroup"             baseparm             label   "Output Selection Group"             export  none         }     }      parm {         name    "use_age"         label   "Use Age"         type    toggle         default { "off" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "use_id"         label   "Use Id"         type    toggle         default { "off" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "do_offset_age"         label   "offset Age"         type    toggle         default { "off" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "age_offset_seed"         label   "Age Offset Seed"         type    integer         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "age_offset_var_ramp"         label   "age_offset_var_ramp"         type    ramp_flt         default { "2" }         range   { 1! 10 }         parmtag { "parmvop" "1" }         parmtag { "rampbasis_var" "age_offset_var_ramp_the_basis_strings" }         parmtag { "rampbasisdefault" "constant" }         parmtag { "rampfloatdefault" "1pos ( 0 ) 1value ( 0 ) 1interp ( linear ) 2pos ( 1 ) 2value ( 1 ) 2interp ( linear )" }         parmtag { "rampkeys_var" "age_offset_var_ramp_the_key_positions" }         parmtag { "rampshowcontrolsdefault" "1" }         parmtag { "rampvalues_var" "age_offset_var_ramp_the_key_values" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "age_offset_min"         label   "Age Offset Min"         type    float         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "destMax"         label   "Maximum value In Destination Range"         type    float         default { "1" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "age_ramp"         label   "age_ramp"         type    ramp_flt         default { "2" }         range   { 1! 10 }         parmtag { "parmvop" "1" }         parmtag { "rampbasis_var" "age_ramp_the_basis_strings" }         parmtag { "rampbasisdefault" "bspline" }         parmtag { "rampfloatdefault" "1pos ( 0 ) 1value ( 0 ) 1interp ( linear ) 2pos ( 1 ) 2value ( 1 ) 2interp ( linear )" }         parmtag { "rampkeys_var" "age_ramp_the_key_positions" }         parmtag { "rampshowcontrolsdefault" "1" }         parmtag { "rampvalues_var" "age_ramp_the_key_values" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "srcmax_age"         label   "Max Age"         type    float         default { "1" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "do_variance"         label   "Do Variance"         type    toggle         default { "off" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "variance_seed"         label   "Variance Seed"         type    integer         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "variance_ramp"         label   "variance_ramp"         type    ramp_flt         default { "2" }         range   { 1! 10 }         parmtag { "parmvop" "1" }         parmtag { "rampbasis_var" "variance_ramp_the_basis_strings" }         parmtag { "rampbasisdefault" "bspline" }         parmtag { "rampfloatdefault" "1pos ( 0 ) 1value ( 0 ) 1interp ( linear ) 2pos ( 1 ) 2value ( 1 ) 2interp ( linear )" }         parmtag { "rampkeys_var" "variance_ramp_the_key_positions" }         parmtag { "rampshowcontrolsdefault" "1" }         parmtag { "rampvalues_var" "variance_ramp_the_key_values" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "variance_min"         label   "Variance Min"         type    float         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "age_offset_max"         label   "Age Offset Max"         type    float         default { "1" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "do_speed_multiply"         label   "Do Speed Multiply"         type    toggle         default { "off" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "speed_ramp"         label   "Speed"         type    ramp_flt         default { "2" }         range   { 1! 10 }         parmtag { "parmvop" "1" }         parmtag { "rampbasis_var" "speed_ramp_the_basis_strings" }         parmtag { "rampbasisdefault" "linear" }         parmtag { "rampfloatdefault" "1pos ( 0 ) 1value ( 0 ) 1interp ( linear ) 2pos ( 1 ) 2value ( 1 ) 2interp ( linear )" }         parmtag { "rampkeys_var" "speed_ramp_the_key_positions" }         parmtag { "rampshowcontrolsdefault" "1" }         parmtag { "rampvalues_var" "speed_ramp_the_key_values" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "max_speed"         label   "Max Speed"         type    float         default { "1" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "do_density"         label   "use Density"         type    toggle         default { "off" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "radius"         label   "Search Radius"         type    float         default { "0.1" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "maxpoints"         label   "Maximum Points to Find"         type    integer         default { "10" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "density_ramp"         label   "Denisty"         type    ramp_flt         default { "2" }         range   { 1! 10 }         parmtag { "parmvop" "1" }         parmtag { "rampbasis_var" "density_ramp_the_basis_strings" }         parmtag { "rampbasisdefault" "linear" }         parmtag { "rampfloatdefault" "1pos ( 0 ) 1value ( 0 ) 1interp ( linear ) 2pos ( 1 ) 2value ( 1 ) 2interp ( linear )" }         parmtag { "rampkeys_var" "density_ramp_the_key_positions" }         parmtag { "rampshowcontrolsdefault" "1" }         parmtag { "rampvalues_var" "density_ramp_the_key_values" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "do_mult_by_attrib"         label   "Multiply By Attribute"         type    integer         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "attribute_name"         label   "Attribute Name"         type    string         default { "" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "vector_type"         label   "Vector Type"         type    integer         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "attrib_type"         label   "Attribute Type"         type    integer         default { "0" }         range   { 0 10 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "Post_multiply"         label   "Post Multiply"         type    float         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "do_inherit_pscale"         label   "Inherit Pscale"         type    toggle         default { "off" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "base"         label   "Base Pscale"         type    float         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "srcmin"         label   "Source Min"         type    float         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "srcmax"         label   "Source Max"         type    float         default { "1" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "destmin"         label   "Final Mine"         type    float         default { "0" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "destmax"         label   "Final Max"         type    float         default { "1" }         range   { 0 1 }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "do_update_color"         label   "Update Color"         type    toggle         default { "off" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "display_color"         label   "Display Color"         type    toggle         default { "off" }         parmtag { "parmvop" "1" }         parmtag { "shaderparmcontexts" "cvex" }     }     parm {         name    "vexsnippet"         baseparm         label   "Snippet"         export  none     }     parm {         name    "vex_strict"         baseparm         label   "Enforce Prototypes"         export  none     }     parm {         name    "vex_exportlist"         baseparm         label   "Attributes to Create"         export  none     } ' $_obj_grid1_pscaleMaster
opparm $_obj_grid1_pscaleMaster  bindings ( 0 ) groupbindings ( 0 ) age_offset_var_ramp ( 2 ) age_ramp ( 2 ) variance_ramp ( 2 ) speed_ramp ( 2 ) density_ramp ( 2 )
opparm -V 20.0.547 $_obj_grid1_pscaleMaster age_offset_var_ramp1interp ( linear ) age_offset_var_ramp2pos ( 1 ) age_offset_var_ramp2value ( 1 ) age_offset_var_ramp2interp ( linear ) age_ramp1interp ( linear ) age_ramp2pos ( 1 ) age_ramp2value ( 1 ) age_ramp2interp ( linear ) variance_ramp1interp ( linear ) variance_ramp2pos ( 1 ) variance_ramp2value ( 1 ) variance_ramp2interp ( linear ) speed_ramp2pos ( 1 ) speed_ramp2value ( 1 ) density_ramp2pos ( 1 ) density_ramp2value ( 1 )
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_grid1_pscaleMaster
opexprlanguage -s hscript $_obj_grid1_pscaleMaster
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster
opcf $_obj_grid1_pscaleMaster

# Network Box $_obj_grid1_pscaleMaster___netbox1
set _obj_grid1_pscaleMaster___netbox1 = `run("nbadd -v __netbox1")`
nblocate -x `$arg2 + 29.5783` -y  `$arg3 + -6.99167` $_obj_grid1_pscaleMaster___netbox1
nbsize -w 8.09661 -h 2.901 $_obj_grid1_pscaleMaster___netbox1
nbset  -m off $_obj_grid1_pscaleMaster___netbox1
nbcolor -c 0.145 0.667 0.557 $_obj_grid1_pscaleMaster___netbox1

# Network Box $_obj_grid1_pscaleMaster___netbox2
set _obj_grid1_pscaleMaster___netbox2 = `run("nbadd -v __netbox2")`
nblocate -x `$arg2 + 4.75419` -y  `$arg3 + -10.6828` $_obj_grid1_pscaleMaster___netbox2
nbsize -w 24.1762 -h 7.29515 $_obj_grid1_pscaleMaster___netbox2
nbset  -m off $_obj_grid1_pscaleMaster___netbox2
nbcolor -c 0.89 0.412 0.761 $_obj_grid1_pscaleMaster___netbox2

# Network Box $_obj_grid1_pscaleMaster___netbox3
set _obj_grid1_pscaleMaster___netbox3 = `run("nbadd -v __netbox3")`
nblocate -x `$arg2 + 48.7459` -y  `$arg3 + -7.94195` $_obj_grid1_pscaleMaster___netbox3
nbsize -w 14.5509 -h 5.84656 $_obj_grid1_pscaleMaster___netbox3
nbset  -m off $_obj_grid1_pscaleMaster___netbox3
nbcolor -c 0.976 0.78 0.263 $_obj_grid1_pscaleMaster___netbox3

# Network Box $_obj_grid1_pscaleMaster___netbox4
set _obj_grid1_pscaleMaster___netbox4 = `run("nbadd -v __netbox4")`
nblocate -x `$arg2 + 86.5847` -y  `$arg3 + -6.85578` $_obj_grid1_pscaleMaster___netbox4
nbsize -w 10.5573 -h 4.5139 $_obj_grid1_pscaleMaster___netbox4
nbset  -m off $_obj_grid1_pscaleMaster___netbox4
nbcolor -c 0.52 0.52 0.52 $_obj_grid1_pscaleMaster___netbox4

# Node $_obj_grid1_pscaleMaster_if_begin1 (Vop/block_begin_if)
set _obj_grid1_pscaleMaster_if_begin1 = `run("opadd -e -n -v block_begin_if if_begin1")`
oplocate -x `$arg2 + 4.4160199999999996` -y `$arg3 + -1.2575499999999999` $_obj_grid1_pscaleMaster_if_begin1
opparm $_obj_grid1_pscaleMaster_if_begin1  outputnum ( 3 )
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_if_begin1 blockpath ( ../end_if1 ) outputnum ( 3 ) outputname1 ( pscale ) outputname2 ( age ) outputname3 ( id )
opcolor -c 0 0.46666666865348816 1 $_obj_grid1_pscaleMaster_if_begin1
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_if_begin1
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_if_begin1
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_if_begin1

# Node $_obj_grid1_pscaleMaster_end_if1 (Vop/block_end)
set _obj_grid1_pscaleMaster_end_if1 = `run("opadd -e -n -v block_end end_if1")`
oplocate -x `$arg2 + 40.477699999999999` -y `$arg3 + -0.71843400000000002` $_obj_grid1_pscaleMaster_end_if1
opparm $_obj_grid1_pscaleMaster_end_if1  outputnum ( 1 )
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_end_if1 blockpath ( ../if_begin1 ) encloseinputs ( on ) outputnum ( 1 ) outputname1 ( pscale )
opcolor -c 0 0.46666666865348816 1 $_obj_grid1_pscaleMaster_end_if1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_end_if1
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_end_if1
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_end_if1

# Node $_obj_grid1_pscaleMaster_const1 (Vop/constant)
set _obj_grid1_pscaleMaster_const1 = `run("opadd -e -n -v constant const1")`
oplocate -x `$arg2 + -1.9358900000000001` -y `$arg3 + -1.55755` $_obj_grid1_pscaleMaster_const1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_const1
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_const1
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_const1

# Node $_obj_grid1_pscaleMaster_condition_in (Vop/parameter)
set _obj_grid1_pscaleMaster_condition_in = `run("opadd -e -n -v parameter condition_in")`
oplocate -x `$arg2 + 1.3676299999999999` -y `$arg3 + 2.11341` $_obj_grid1_pscaleMaster_condition_in
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_condition_in parmname ( use_age ) parmlabel ( 'Use Age' ) parmtype ( toggle ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_condition_in
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_condition_in
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_condition_in

# Node $_obj_grid1_pscaleMaster_bind1 (Vop/bind)
set _obj_grid1_pscaleMaster_bind1 = `run("opadd -e -n -v bind bind1")`
oplocate -x `$arg2 + 1.05277` -y `$arg3 + -2.9608599999999998` $_obj_grid1_pscaleMaster_bind1
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_bind1 parmname ( age ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_bind1
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_bind1
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_bind1

# Node $_obj_grid1_pscaleMaster_switch1 (Vop/switch)
set _obj_grid1_pscaleMaster_switch1 = `run("opadd -e -n -v switch switch1")`
oplocate -x `$arg2 + 1.05277` -y `$arg3 + -5.5628299999999999` $_obj_grid1_pscaleMaster_switch1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_switch1
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_switch1
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_switch1

# Node $_obj_grid1_pscaleMaster_switcher (Vop/parameter)
set _obj_grid1_pscaleMaster_switcher = `run("opadd -e -n -v parameter switcher")`
oplocate -x `$arg2 + -2.1151300000000002` -y `$arg3 + -4.0237699999999998` $_obj_grid1_pscaleMaster_switcher
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_switcher parmname ( use_id ) parmlabel ( 'Use Id' ) parmtype ( toggle ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_switcher
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_switcher
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_switcher

# Node $_obj_grid1_pscaleMaster_bind2 (Vop/bind)
set _obj_grid1_pscaleMaster_bind2 = `run("opadd -e -n -v bind bind2")`
oplocate -x `$arg2 + -2.1151300000000002` -y `$arg3 + -5.5537700000000001` $_obj_grid1_pscaleMaster_bind2
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_bind2 parmname ( ptnum ) parmtype ( int ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_bind2
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_bind2
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_bind2

# Node $_obj_grid1_pscaleMaster_bind3 (Vop/bind)
set _obj_grid1_pscaleMaster_bind3 = `run("opadd -e -n -v bind bind3")`
oplocate -x `$arg2 + -2.1151300000000002` -y `$arg3 + -7.0837700000000003` $_obj_grid1_pscaleMaster_bind3
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_bind3 parmname ( id ) parmtype ( int ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_bind3
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_bind3
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_bind3

# Node $_obj_grid1_pscaleMaster_multiply1 (Vop/multiply)
set _obj_grid1_pscaleMaster_multiply1 = `run("opadd -e -n -v multiply multiply1")`
oplocate -x `$arg2 + 37.554400000000001` -y `$arg3 + -0.71843400000000002` $_obj_grid1_pscaleMaster_multiply1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_multiply1
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_multiply1
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_multiply1

# Node $_obj_grid1_pscaleMaster_if_begin2 (Vop/block_begin_if)
set _obj_grid1_pscaleMaster_if_begin2 = `run("opadd -e -n -v block_begin_if if_begin2")`
oplocate -x `$arg2 + 8.8178400000000003` -y `$arg3 + -4.5892099999999996` $_obj_grid1_pscaleMaster_if_begin2
opparm $_obj_grid1_pscaleMaster_if_begin2  outputnum ( 2 )
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_if_begin2 blockpath ( ../end_if2 ) outputnum ( 2 )
opcolor -c 0 0.46666666865348816 1 $_obj_grid1_pscaleMaster_if_begin2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_if_begin2
nbop $_obj_grid1_pscaleMaster___netbox2 add $_obj_grid1_pscaleMaster_if_begin2
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_if_begin2
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_if_begin2

# Node $_obj_grid1_pscaleMaster_end_if2 (Vop/block_end)
set _obj_grid1_pscaleMaster_end_if2 = `run("opadd -e -n -v block_end end_if2")`
oplocate -x `$arg2 + 26.230399999999999` -y `$arg3 + -4.5906700000000003` $_obj_grid1_pscaleMaster_end_if2
opparm $_obj_grid1_pscaleMaster_end_if2  outputnum ( 1 )
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_end_if2 blockpath ( ../if_begin2 ) encloseinputs ( on ) outputnum ( 1 )
opcolor -c 0 0.46666666865348816 1 $_obj_grid1_pscaleMaster_end_if2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_end_if2
nbop $_obj_grid1_pscaleMaster___netbox2 add $_obj_grid1_pscaleMaster_end_if2
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_end_if2
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_end_if2

# Node $_obj_grid1_pscaleMaster_condition_in1 (Vop/parameter)
set _obj_grid1_pscaleMaster_condition_in1 = `run("opadd -e -n -v parameter condition_in1")`
oplocate -x `$arg2 + 5.4541899999999996` -y `$arg3 + -4.5892099999999996` $_obj_grid1_pscaleMaster_condition_in1
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_condition_in1 parmname ( do_offset_age ) parmlabel ( 'offset Age' ) parmtype ( toggle ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_condition_in1
nbop $_obj_grid1_pscaleMaster___netbox2 add $_obj_grid1_pscaleMaster_condition_in1
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_condition_in1
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_condition_in1

# Node $_obj_grid1_pscaleMaster_subtract1 (Vop/subtract)
set _obj_grid1_pscaleMaster_subtract1 = `run("opadd -e -n -v subtract subtract1")`
oplocate -x `$arg2 + 23.8553` -y `$arg3 + -4.5906700000000003` $_obj_grid1_pscaleMaster_subtract1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_subtract1
nbop $_obj_grid1_pscaleMaster___netbox2 add $_obj_grid1_pscaleMaster_subtract1
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_subtract1
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_subtract1

# Node $_obj_grid1_pscaleMaster_add1 (Vop/add)
set _obj_grid1_pscaleMaster_add1 = `run("opadd -e -n -v add add1")`
oplocate -x `$arg2 + 11.903600000000001` -y `$arg3 + -5.7192100000000003` $_obj_grid1_pscaleMaster_add1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_add1
nbop $_obj_grid1_pscaleMaster___netbox2 add $_obj_grid1_pscaleMaster_add1
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_add1
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_add1

# Node $_obj_grid1_pscaleMaster_input2 (Vop/parameter)
set _obj_grid1_pscaleMaster_input2 = `run("opadd -e -n -v parameter input2")`
oplocate -x `$arg2 + 9.2214399999999994` -y `$arg3 + -8.62636` $_obj_grid1_pscaleMaster_input2
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_input2 parmname ( age_offset_seed ) parmlabel ( 'Age Offset Seed' ) parmtype ( int ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_input2
nbop $_obj_grid1_pscaleMaster___netbox2 add $_obj_grid1_pscaleMaster_input2
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_input2
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_input2

# Node $_obj_grid1_pscaleMaster_random1 (Vop/random)
set _obj_grid1_pscaleMaster_random1 = `run("opadd -e -n -v random random1")`
oplocate -x `$arg2 + 14.646000000000001` -y `$arg3 + -5.7192100000000003` $_obj_grid1_pscaleMaster_random1
opparm $_obj_grid1_pscaleMaster_random1 signature ( i )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_random1
nbop $_obj_grid1_pscaleMaster___netbox2 add $_obj_grid1_pscaleMaster_random1
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_random1
opuserdata -n '___Version___' -v '' $_obj_grid1_pscaleMaster_random1

# Node $_obj_grid1_pscaleMaster_ramp1 (Vop/rampparm)
set _obj_grid1_pscaleMaster_ramp1 = `run("opadd -e -n -v rampparm ramp1")`
oplocate -x `$arg2 + 17.5063` -y `$arg3 + -5.7192100000000003` $_obj_grid1_pscaleMaster_ramp1
opparm $_obj_grid1_pscaleMaster_ramp1  rampcolordefault ( 2 ) rampfloatdefault ( 2 )
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_ramp1 parmname ( age_offset_var_ramp ) ramptype ( flt ) rampbasisdefault ( constant ) rampcolordefault2pos ( 1 ) rampcolordefault2c ( 1 1 1 ) rampfloatdefault2pos ( 1 ) rampfloatdefault2value ( 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_ramp1
nbop $_obj_grid1_pscaleMaster___netbox2 add $_obj_grid1_pscaleMaster_ramp1
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_ramp1
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_ramp1

# Node $_obj_grid1_pscaleMaster_fit1 (Vop/fit)
set _obj_grid1_pscaleMaster_fit1 = `run("opadd -e -n -v fit fit1")`
oplocate -x `$arg2 + 21.055800000000001` -y `$arg3 + -5.7192100000000003` $_obj_grid1_pscaleMaster_fit1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_fit1
nbop $_obj_grid1_pscaleMaster___netbox2 add $_obj_grid1_pscaleMaster_fit1
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_fit1
opuserdata -n '___Version___' -v '' $_obj_grid1_pscaleMaster_fit1

# Node $_obj_grid1_pscaleMaster_destmin (Vop/parameter)
set _obj_grid1_pscaleMaster_destmin = `run("opadd -e -n -v parameter destmin")`
oplocate -x `$arg2 + 17.943000000000001` -y `$arg3 + -8.1440400000000004` $_obj_grid1_pscaleMaster_destmin
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_destmin parmname ( age_offset_min ) parmlabel ( 'Age Offset Min' ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_destmin
nbop $_obj_grid1_pscaleMaster___netbox2 add $_obj_grid1_pscaleMaster_destmin
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_destmin
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_destmin

# Node $_obj_grid1_pscaleMaster_destmax (Vop/parameter)
set _obj_grid1_pscaleMaster_destmax = `run("opadd -e -n -v parameter destmax")`
oplocate -x `$arg2 + 17.943000000000001` -y `$arg3 + -9.9528099999999995` $_obj_grid1_pscaleMaster_destmax
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_destmax parmname ( destMax ) parmlabel ( 'Maximum value In Destination Range' ) floatdef ( 1 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_destmax
nbop $_obj_grid1_pscaleMaster___netbox2 add $_obj_grid1_pscaleMaster_destmax
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_destmax
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_destmax

# Node $_obj_grid1_pscaleMaster_ramp2 (Vop/rampparm)
set _obj_grid1_pscaleMaster_ramp2 = `run("opadd -e -n -v rampparm ramp2")`
oplocate -x `$arg2 + 34.974899999999998` -y `$arg3 + -4.5906700000000003` $_obj_grid1_pscaleMaster_ramp2
opparm $_obj_grid1_pscaleMaster_ramp2  rampcolordefault ( 2 ) rampfloatdefault ( 2 )
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_ramp2 parmname ( age_ramp ) ramptype ( flt ) rampbasisdefault ( bspline ) rampcolordefault2pos ( 1 ) rampcolordefault2c ( 1 1 1 ) rampfloatdefault2pos ( 1 ) rampfloatdefault2value ( 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_ramp2
nbop $_obj_grid1_pscaleMaster___netbox1 add $_obj_grid1_pscaleMaster_ramp2
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_ramp2
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_ramp2

# Node $_obj_grid1_pscaleMaster_fit2_invert (Vop/fit)
set _obj_grid1_pscaleMaster_fit2_invert = `run("opadd -e -n -v fit fit2_invert")`
oplocate -x `$arg2 + 32.434699999999999` -y `$arg3 + -4.5906700000000003` $_obj_grid1_pscaleMaster_fit2_invert
opparm $_obj_grid1_pscaleMaster_fit2_invert destmin ( 1 ) destmax ( 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_fit2_invert
nbop $_obj_grid1_pscaleMaster___netbox1 add $_obj_grid1_pscaleMaster_fit2_invert
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_fit2_invert
opuserdata -n '___Version___' -v '' $_obj_grid1_pscaleMaster_fit2_invert

# Node $_obj_grid1_pscaleMaster_srcmax (Vop/parameter)
set _obj_grid1_pscaleMaster_srcmax = `run("opadd -e -n -v parameter srcmax")`
oplocate -x `$arg2 + 30.278300000000002` -y `$arg3 + -6.2616699999999996` $_obj_grid1_pscaleMaster_srcmax
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_srcmax parmname ( srcmax_age ) parmlabel ( 'Max Age' ) floatdef ( 1 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_srcmax
nbop $_obj_grid1_pscaleMaster___netbox1 add $_obj_grid1_pscaleMaster_srcmax
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_srcmax
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_srcmax

# Node $_obj_grid1_pscaleMaster_if_begin3 (Vop/block_begin_if)
set _obj_grid1_pscaleMaster_if_begin3 = `run("opadd -e -n -v block_begin_if if_begin3")`
oplocate -x `$arg2 + 48.506700000000002` -y `$arg3 + -0.39322600000000002` $_obj_grid1_pscaleMaster_if_begin3
opparm $_obj_grid1_pscaleMaster_if_begin3  outputnum ( 2 )
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_if_begin3 blockpath ( ../end_if3 ) outputnum ( 2 ) outputname1 ( pscale ) outputname2 ( id )
opcolor -c 0 0.46666666865348816 1 $_obj_grid1_pscaleMaster_if_begin3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_if_begin3
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_if_begin3
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_if_begin3

# Node $_obj_grid1_pscaleMaster_end_if3 (Vop/block_end)
set _obj_grid1_pscaleMaster_end_if3 = `run("opadd -e -n -v block_end end_if3")`
oplocate -x `$arg2 + 65.433599999999998` -y `$arg3 + -0.25050600000000001` $_obj_grid1_pscaleMaster_end_if3
opparm $_obj_grid1_pscaleMaster_end_if3  outputnum ( 1 )
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_end_if3 blockpath ( ../if_begin3 ) encloseinputs ( on ) outputnum ( 1 ) outputname1 ( pscale )
opcolor -c 0 0.46666666865348816 1 $_obj_grid1_pscaleMaster_end_if3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_end_if3
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_end_if3
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_end_if3

# Node $_obj_grid1_pscaleMaster_condition_in2 (Vop/parameter)
set _obj_grid1_pscaleMaster_condition_in2 = `run("opadd -e -n -v parameter condition_in2")`
oplocate -x `$arg2 + 45.9846` -y `$arg3 + 2.3845399999999999` $_obj_grid1_pscaleMaster_condition_in2
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_condition_in2 parmname ( do_variance ) parmlabel ( 'Do Variance' ) parmtype ( toggle ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_condition_in2
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_condition_in2
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_condition_in2

# Node $_obj_grid1_pscaleMaster_multiply2 (Vop/multiply)
set _obj_grid1_pscaleMaster_multiply2 = `run("opadd -e -n -v multiply multiply2")`
oplocate -x `$arg2 + 62.8538` -y `$arg3 + -0.25050600000000001` $_obj_grid1_pscaleMaster_multiply2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_multiply2
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_multiply2
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_multiply2

# Node $_obj_grid1_pscaleMaster_add2 (Vop/add)
set _obj_grid1_pscaleMaster_add2 = `run("opadd -e -n -v add add2")`
oplocate -x `$arg2 + 51.828899999999997` -y `$arg3 + -2.5953900000000001` $_obj_grid1_pscaleMaster_add2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_add2
nbop $_obj_grid1_pscaleMaster___netbox3 add $_obj_grid1_pscaleMaster_add2
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_add2
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_add2

# Node $_obj_grid1_pscaleMaster_input3 (Vop/parameter)
set _obj_grid1_pscaleMaster_input3 = `run("opadd -e -n -v parameter input3")`
oplocate -x `$arg2 + 49.445900000000002` -y `$arg3 + -3.5753900000000001` $_obj_grid1_pscaleMaster_input3
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_input3 parmname ( variance_seed ) parmlabel ( 'Variance Seed' ) parmtype ( int ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_input3
nbop $_obj_grid1_pscaleMaster___netbox3 add $_obj_grid1_pscaleMaster_input3
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_input3
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_input3

# Node $_obj_grid1_pscaleMaster_random2 (Vop/random)
set _obj_grid1_pscaleMaster_random2 = `run("opadd -e -n -v random random2")`
oplocate -x `$arg2 + 54.780099999999997` -y `$arg3 + -2.5953900000000001` $_obj_grid1_pscaleMaster_random2
opparm $_obj_grid1_pscaleMaster_random2 signature ( i )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_random2
nbop $_obj_grid1_pscaleMaster___netbox3 add $_obj_grid1_pscaleMaster_random2
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_random2
opuserdata -n '___Version___' -v '' $_obj_grid1_pscaleMaster_random2

# Node $_obj_grid1_pscaleMaster_ramp3 (Vop/rampparm)
set _obj_grid1_pscaleMaster_ramp3 = `run("opadd -e -n -v rampparm ramp3")`
oplocate -x `$arg2 + 57.606900000000003` -y `$arg3 + -2.5953900000000001` $_obj_grid1_pscaleMaster_ramp3
opparm $_obj_grid1_pscaleMaster_ramp3  rampcolordefault ( 2 ) rampfloatdefault ( 2 )
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_ramp3 parmname ( variance_ramp ) ramptype ( flt ) rampbasisdefault ( bspline ) rampcolordefault2pos ( 1 ) rampcolordefault2c ( 1 1 1 ) rampfloatdefault2pos ( 1 ) rampfloatdefault2value ( 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_ramp3
nbop $_obj_grid1_pscaleMaster___netbox3 add $_obj_grid1_pscaleMaster_ramp3
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_ramp3
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_ramp3

# Node $_obj_grid1_pscaleMaster_fit2 (Vop/fit)
set _obj_grid1_pscaleMaster_fit2 = `run("opadd -e -n -v fit fit2")`
oplocate -x `$arg2 + 60.596800000000002` -y `$arg3 + -2.5953900000000001` $_obj_grid1_pscaleMaster_fit2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_fit2
nbop $_obj_grid1_pscaleMaster___netbox3 add $_obj_grid1_pscaleMaster_fit2
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_fit2
opuserdata -n '___Version___' -v '' $_obj_grid1_pscaleMaster_fit2

# Node $_obj_grid1_pscaleMaster_destmin1 (Vop/parameter)
set _obj_grid1_pscaleMaster_destmin1 = `run("opadd -e -n -v parameter destmin1")`
oplocate -x `$arg2 + 57.606900000000003` -y `$arg3 + -4.9932400000000001` $_obj_grid1_pscaleMaster_destmin1
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_destmin1 parmname ( variance_min ) parmlabel ( 'Variance Min' ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_destmin1
nbop $_obj_grid1_pscaleMaster___netbox3 add $_obj_grid1_pscaleMaster_destmin1
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_destmin1
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_destmin1

# Node $_obj_grid1_pscaleMaster_destmax1 (Vop/parameter)
set _obj_grid1_pscaleMaster_destmax1 = `run("opadd -e -n -v parameter destmax1")`
oplocate -x `$arg2 + 57.606900000000003` -y `$arg3 + -7.2119499999999999` $_obj_grid1_pscaleMaster_destmax1
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_destmax1 parmname ( age_offset_max ) parmlabel ( 'Age Offset Max' ) floatdef ( 1 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_destmax1
nbop $_obj_grid1_pscaleMaster___netbox3 add $_obj_grid1_pscaleMaster_destmax1
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_destmax1
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_destmax1

# Node $_obj_grid1_pscaleMaster_if_begin4 (Vop/block_begin_if)
set _obj_grid1_pscaleMaster_if_begin4 = `run("opadd -e -n -v block_begin_if if_begin4")`
oplocate -x `$arg2 + 85.975499999999997` -y `$arg3 + -0.191527` $_obj_grid1_pscaleMaster_if_begin4
opparm $_obj_grid1_pscaleMaster_if_begin4  outputnum ( 2 )
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_if_begin4 blockpath ( ../end_if4 ) outputnum ( 2 ) outputname1 ( pscale ) outputname2 ( v )
opcolor -c 0 0.46666666865348816 1 $_obj_grid1_pscaleMaster_if_begin4
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_if_begin4
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_if_begin4
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_if_begin4

# Node $_obj_grid1_pscaleMaster_end_if4 (Vop/block_end)
set _obj_grid1_pscaleMaster_end_if4 = `run("opadd -e -n -v block_end end_if4")`
oplocate -x `$arg2 + 99.617099999999994` -y `$arg3 + -0.290468` $_obj_grid1_pscaleMaster_end_if4
opparm $_obj_grid1_pscaleMaster_end_if4  outputnum ( 1 )
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_end_if4 blockpath ( ../if_begin4 ) encloseinputs ( on ) outputnum ( 1 ) outputname1 ( pscale )
opcolor -c 0 0.46666666865348816 1 $_obj_grid1_pscaleMaster_end_if4
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_end_if4
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_end_if4
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_end_if4

# Node $_obj_grid1_pscaleMaster_condition_in3 (Vop/parameter)
set _obj_grid1_pscaleMaster_condition_in3 = `run("opadd -e -n -v parameter condition_in3")`
oplocate -x `$arg2 + 83.496499999999997` -y `$arg3 + 1.55454` $_obj_grid1_pscaleMaster_condition_in3
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_condition_in3 parmname ( do_speed_multiply ) parmlabel ( 'Do Speed Multiply' ) parmtype ( toggle ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_condition_in3
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_condition_in3
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_condition_in3

# Node $_obj_grid1_pscaleMaster_bind4 (Vop/bind)
set _obj_grid1_pscaleMaster_bind4 = `run("opadd -e -n -v bind bind4")`
oplocate -x `$arg2 + 82.729500000000002` -y `$arg3 + -2.0448599999999999` $_obj_grid1_pscaleMaster_bind4
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_bind4 parmname ( v ) parmtype ( float3 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_bind4
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_bind4
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_bind4

# Node $_obj_grid1_pscaleMaster_multiply3 (Vop/multiply)
set _obj_grid1_pscaleMaster_multiply3 = `run("opadd -e -n -v multiply multiply3")`
oplocate -x `$arg2 + 96.813800000000001` -y `$arg3 + -0.34152700000000003` $_obj_grid1_pscaleMaster_multiply3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_multiply3
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_multiply3
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_multiply3

# Node $_obj_grid1_pscaleMaster_length1 (Vop/length)
set _obj_grid1_pscaleMaster_length1 = `run("opadd -e -n -v length length1")`
oplocate -x `$arg2 + 88.251499999999993` -y `$arg3 + -3.72831` $_obj_grid1_pscaleMaster_length1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_length1
nbop $_obj_grid1_pscaleMaster___netbox4 add $_obj_grid1_pscaleMaster_length1
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_length1
opuserdata -n '___Version___' -v '' $_obj_grid1_pscaleMaster_length1

# Node $_obj_grid1_pscaleMaster_fit3 (Vop/fit)
set _obj_grid1_pscaleMaster_fit3 = `run("opadd -e -n -v fit fit3")`
oplocate -x `$arg2 + 91.158299999999997` -y `$arg3 + -3.72831` $_obj_grid1_pscaleMaster_fit3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_fit3
nbop $_obj_grid1_pscaleMaster___netbox4 add $_obj_grid1_pscaleMaster_fit3
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_fit3
opuserdata -n '___Version___' -v '' $_obj_grid1_pscaleMaster_fit3

# Node $_obj_grid1_pscaleMaster_ramp4 (Vop/rampparm)
set _obj_grid1_pscaleMaster_ramp4 = `run("opadd -e -n -v rampparm ramp4")`
oplocate -x `$arg2 + 94.441999999999993` -y `$arg3 + -3.72831` $_obj_grid1_pscaleMaster_ramp4
opparm $_obj_grid1_pscaleMaster_ramp4  rampcolordefault ( 2 ) rampfloatdefault ( 2 )
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_ramp4 parmname ( speed_ramp ) parmlabel ( Speed ) ramptype ( flt ) rampcolordefault2pos ( 1 ) rampcolordefault2c ( 1 1 1 ) rampfloatdefault2pos ( 1 ) rampfloatdefault2value ( 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_ramp4
nbop $_obj_grid1_pscaleMaster___netbox4 add $_obj_grid1_pscaleMaster_ramp4
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_ramp4
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_ramp4

# Node $_obj_grid1_pscaleMaster_srcmax1 (Vop/parameter)
set _obj_grid1_pscaleMaster_srcmax1 = `run("opadd -e -n -v parameter srcmax1")`
oplocate -x `$arg2 + 88.123800000000003` -y `$arg3 + -6.1257799999999998` $_obj_grid1_pscaleMaster_srcmax1
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_srcmax1 parmname ( max_speed ) parmlabel ( 'Max Speed' ) floatdef ( 1 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_srcmax1
nbop $_obj_grid1_pscaleMaster___netbox4 add $_obj_grid1_pscaleMaster_srcmax1
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_srcmax1
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_srcmax1

# Node $_obj_grid1_pscaleMaster_if_begin5 (Vop/block_begin_if)
set _obj_grid1_pscaleMaster_if_begin5 = `run("opadd -e -n -v block_begin_if if_begin5")`
oplocate -x `$arg2 + 119.687` -y `$arg3 + 0.114193` $_obj_grid1_pscaleMaster_if_begin5
opparm $_obj_grid1_pscaleMaster_if_begin5  outputnum ( 2 )
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_if_begin5 blockpath ( ../end_if5 ) outputnum ( 2 ) outputname1 ( pscale ) outputname2 ( P )
opcolor -c 0 0.46666666865348816 1 $_obj_grid1_pscaleMaster_if_begin5
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_if_begin5
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_if_begin5
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_if_begin5

# Node $_obj_grid1_pscaleMaster_end_if5 (Vop/block_end)
set _obj_grid1_pscaleMaster_end_if5 = `run("opadd -e -n -v block_end end_if5")`
oplocate -x `$arg2 + 138.898` -y `$arg3 + 0.023522999999999999` $_obj_grid1_pscaleMaster_end_if5
opparm $_obj_grid1_pscaleMaster_end_if5  outputnum ( 1 )
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_end_if5 blockpath ( ../if_begin5 ) encloseinputs ( on ) outputnum ( 1 ) outputname1 ( pscale )
opcolor -c 0 0.46666666865348816 1 $_obj_grid1_pscaleMaster_end_if5
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_end_if5
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_end_if5
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_end_if5

# Node $_obj_grid1_pscaleMaster_bind5 (Vop/bind)
set _obj_grid1_pscaleMaster_bind5 = `run("opadd -e -n -v bind bind5")`
oplocate -x `$arg2 + 116.038` -y `$arg3 + -2.3641899999999998` $_obj_grid1_pscaleMaster_bind5
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_bind5 parmname ( P ) parmtype ( float3 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_bind5
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_bind5
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_bind5

# Node $_obj_grid1_pscaleMaster_condition_in4 (Vop/parameter)
set _obj_grid1_pscaleMaster_condition_in4 = `run("opadd -e -n -v parameter condition_in4")`
oplocate -x `$arg2 + 116.038` -y `$arg3 + 1.41185` $_obj_grid1_pscaleMaster_condition_in4
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_condition_in4 parmname ( do_density ) parmlabel ( 'use Density' ) parmtype ( toggle ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_condition_in4
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_condition_in4
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_condition_in4

# Node $_obj_grid1_pscaleMaster_multiply4 (Vop/multiply)
set _obj_grid1_pscaleMaster_multiply4 = `run("opadd -e -n -v multiply multiply4")`
oplocate -x `$arg2 + 136.208` -y `$arg3 + 0.023522999999999999` $_obj_grid1_pscaleMaster_multiply4
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_multiply4
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_multiply4
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_multiply4

# Node $_obj_grid1_pscaleMaster_pcfind1 (Vop/pcfind)
set _obj_grid1_pscaleMaster_pcfind1 = `run("opadd -e -n -v pcfind pcfind1")`
oplocate -x `$arg2 + 124.726` -y `$arg3 + -2.0349900000000001` $_obj_grid1_pscaleMaster_pcfind1
opparm $_obj_grid1_pscaleMaster_pcfind1 opinput ( opinput:0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_pcfind1
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_pcfind1
opuserdata -n '___Version___' -v '' $_obj_grid1_pscaleMaster_pcfind1

# Node $_obj_grid1_pscaleMaster_radius (Vop/parameter)
set _obj_grid1_pscaleMaster_radius = `run("opadd -e -n -v parameter radius")`
oplocate -x `$arg2 + 121.124` -y `$arg3 + -3.0415299999999998` $_obj_grid1_pscaleMaster_radius
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_radius parmname ( radius ) parmlabel ( 'Search Radius' ) floatdef ( 0.1 ) rangeflt ( 0 10 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_radius
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_radius
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_radius

# Node $_obj_grid1_pscaleMaster_maxpoints (Vop/parameter)
set _obj_grid1_pscaleMaster_maxpoints = `run("opadd -e -n -v parameter maxpoints")`
oplocate -x `$arg2 + 121.124` -y `$arg3 + -4.6860900000000001` $_obj_grid1_pscaleMaster_maxpoints
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_maxpoints parmname ( maxpoints ) parmlabel ( 'Maximum Points to Find' ) parmtype ( int ) intdef ( 10 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_maxpoints
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_maxpoints
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_maxpoints

# Node $_obj_grid1_pscaleMaster_fit4 (Vop/fit)
set _obj_grid1_pscaleMaster_fit4 = `run("opadd -e -n -v fit fit4")`
oplocate -x `$arg2 + 130.75` -y `$arg3 + -2.0349900000000001` $_obj_grid1_pscaleMaster_fit4
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_fit4
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_fit4
opuserdata -n '___Version___' -v '' $_obj_grid1_pscaleMaster_fit4

# Node $_obj_grid1_pscaleMaster_len1 (Vop/len)
set _obj_grid1_pscaleMaster_len1 = `run("opadd -e -n -v len len1")`
oplocate -x `$arg2 + 127.714` -y `$arg3 + -2.0349900000000001` $_obj_grid1_pscaleMaster_len1
opparm $_obj_grid1_pscaleMaster_len1 signature ( s1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_len1
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_len1
opuserdata -n '___Version___' -v '' $_obj_grid1_pscaleMaster_len1

# Node $_obj_grid1_pscaleMaster_ramp5 (Vop/rampparm)
set _obj_grid1_pscaleMaster_ramp5 = `run("opadd -e -n -v rampparm ramp5")`
oplocate -x `$arg2 + 133.84100000000001` -y `$arg3 + -2.0349900000000001` $_obj_grid1_pscaleMaster_ramp5
opparm $_obj_grid1_pscaleMaster_ramp5  rampcolordefault ( 2 ) rampfloatdefault ( 2 )
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_ramp5 parmname ( density_ramp ) parmlabel ( Denisty ) ramptype ( flt ) rampcolordefault2pos ( 1 ) rampcolordefault2c ( 1 1 1 ) rampfloatdefault2pos ( 1 ) rampfloatdefault2value ( 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_ramp5
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_ramp5
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_ramp5

# Node $_obj_grid1_pscaleMaster_if_begin6 (Vop/block_begin_if)
set _obj_grid1_pscaleMaster_if_begin6 = `run("opadd -e -n -v block_begin_if if_begin6")`
oplocate -x `$arg2 + 157.16800000000001` -y `$arg3 + 0.41202100000000003` $_obj_grid1_pscaleMaster_if_begin6
opparm $_obj_grid1_pscaleMaster_if_begin6  outputnum ( 2 )
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_if_begin6 blockpath ( ../end_if6 ) outputnum ( 2 ) outputname1 ( pscale ) outputname2 ( str )
opcolor -c 0 0.46666666865348816 1 $_obj_grid1_pscaleMaster_if_begin6
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_if_begin6
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_if_begin6
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_if_begin6

# Node $_obj_grid1_pscaleMaster_end_if6 (Vop/block_end)
set _obj_grid1_pscaleMaster_end_if6 = `run("opadd -e -n -v block_end end_if6")`
oplocate -x `$arg2 + 184.447` -y `$arg3 + 0.41202100000000003` $_obj_grid1_pscaleMaster_end_if6
opparm $_obj_grid1_pscaleMaster_end_if6  outputnum ( 1 )
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_end_if6 blockpath ( ../if_begin6 ) encloseinputs ( on ) outputnum ( 1 ) outputname1 ( pscale )
opcolor -c 0 0.46666666865348816 1 $_obj_grid1_pscaleMaster_end_if6
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_end_if6
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_end_if6
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_end_if6

# Node $_obj_grid1_pscaleMaster_condition_in5 (Vop/parameter)
set _obj_grid1_pscaleMaster_condition_in5 = `run("opadd -e -n -v parameter condition_in5")`
oplocate -x `$arg2 + 154.56100000000001` -y `$arg3 + 4.7079000000000004` $_obj_grid1_pscaleMaster_condition_in5
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_condition_in5 parmname ( do_mult_by_attrib ) parmlabel ( 'Multiply By Attribute' ) parmtype ( int ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_condition_in5
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_condition_in5
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_condition_in5

# Node $_obj_grid1_pscaleMaster_next_in (Vop/parameter)
set _obj_grid1_pscaleMaster_next_in = `run("opadd -e -n -v parameter next_in")`
oplocate -x `$arg2 + 154.56100000000001` -y `$arg3 + 2.8523900000000002` $_obj_grid1_pscaleMaster_next_in
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_next_in parmname ( attribute_name ) parmlabel ( 'Attribute Name' ) parmtype ( string ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_next_in
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_next_in
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_next_in

# Node $_obj_grid1_pscaleMaster_importpoint1 (Vop/importpoint)
set _obj_grid1_pscaleMaster_importpoint1 = `run("opadd -e -n -v importpoint importpoint1")`
oplocate -x `$arg2 + 161.054` -y `$arg3 + 2.2095899999999999` $_obj_grid1_pscaleMaster_importpoint1
opparm $_obj_grid1_pscaleMaster_importpoint1 opinput ( opinput:0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_importpoint1
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_importpoint1
opuserdata -n '___Version___' -v '' $_obj_grid1_pscaleMaster_importpoint1

# Node $_obj_grid1_pscaleMaster_importpoint2 (Vop/importpoint)
set _obj_grid1_pscaleMaster_importpoint2 = `run("opadd -e -n -v importpoint importpoint2")`
oplocate -x `$arg2 + 161.054` -y `$arg3 + 5.7253699999999998` $_obj_grid1_pscaleMaster_importpoint2
opparm $_obj_grid1_pscaleMaster_importpoint2 signature ( v ) opinput ( opinput:0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_importpoint2
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_importpoint2
opuserdata -n '___Version___' -v '' $_obj_grid1_pscaleMaster_importpoint2

# Node $_obj_grid1_pscaleMaster_vectofloat1 (Vop/vectofloat)
set _obj_grid1_pscaleMaster_vectofloat1 = `run("opadd -e -n -v vectofloat vectofloat1")`
oplocate -x `$arg2 + 164.62` -y `$arg3 + 5.7253699999999998` $_obj_grid1_pscaleMaster_vectofloat1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_vectofloat1
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_vectofloat1
opuserdata -n '___Version___' -v '' $_obj_grid1_pscaleMaster_vectofloat1

# Node $_obj_grid1_pscaleMaster_switch2 (Vop/switch)
set _obj_grid1_pscaleMaster_switch2 = `run("opadd -e -n -v switch switch2")`
oplocate -x `$arg2 + 170.75200000000001` -y `$arg3 + 6.08507` $_obj_grid1_pscaleMaster_switch2
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_switch2
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_switch2
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_switch2

# Node $_obj_grid1_pscaleMaster_switcher1 (Vop/parameter)
set _obj_grid1_pscaleMaster_switcher1 = `run("opadd -e -n -v parameter switcher1")`
oplocate -x `$arg2 + 168.542` -y `$arg3 + 8.3369999999999997` $_obj_grid1_pscaleMaster_switcher1
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_switcher1 parmname ( vector_type ) parmlabel ( 'Vector Type' ) parmtype ( int ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_switcher1
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_switcher1
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_switcher1

# Node $_obj_grid1_pscaleMaster_max1 (Vop/max)
set _obj_grid1_pscaleMaster_max1 = `run("opadd -e -n -v max max1")`
oplocate -x `$arg2 + 166.745` -y `$arg3 + 3.4316` $_obj_grid1_pscaleMaster_max1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_max1
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_max1
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_max1

# Node $_obj_grid1_pscaleMaster_vec_comp (Vop/null)
set _obj_grid1_pscaleMaster_vec_comp = `run("opadd -e -n -v null vec_comp")`
oplocate -x `$arg2 + 168.79300000000001` -y `$arg3 + 3.4316` $_obj_grid1_pscaleMaster_vec_comp
opparm $_obj_grid1_pscaleMaster_vec_comp  outputnum ( 1 )
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_vec_comp outputnum ( 1 )
opcolor -c 1 0.97600001096725464 0.66600000858306885 $_obj_grid1_pscaleMaster_vec_comp
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_vec_comp
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_vec_comp
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_vec_comp

# Node $_obj_grid1_pscaleMaster_3d (Vop/null)
set _obj_grid1_pscaleMaster_3d = `run("opadd -e -n -v null 3d")`
oplocate -x `$arg2 + 173.626` -y `$arg3 + 6.08507` $_obj_grid1_pscaleMaster_3d
opparm $_obj_grid1_pscaleMaster_3d  outputnum ( 1 )
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_3d outputnum ( 1 )
opcolor -c 1 0.97600001096725464 0.66600000858306885 $_obj_grid1_pscaleMaster_3d
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_3d
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_3d
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_3d

# Node $_obj_grid1_pscaleMaster_1d (Vop/null)
set _obj_grid1_pscaleMaster_1d = `run("opadd -e -n -v null 1d")`
oplocate -x `$arg2 + 173.626` -y `$arg3 + 2.3595899999999999` $_obj_grid1_pscaleMaster_1d
opparm $_obj_grid1_pscaleMaster_1d  outputnum ( 1 )
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_1d outputnum ( 1 )
opcolor -c 1 0.97600001096725464 0.66600000858306885 $_obj_grid1_pscaleMaster_1d
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_1d
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_1d
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_1d

# Node $_obj_grid1_pscaleMaster_switch3 (Vop/switch)
set _obj_grid1_pscaleMaster_switch3 = `run("opadd -e -n -v switch switch3")`
oplocate -x `$arg2 + 177.73400000000001` -y `$arg3 + 6.08507` $_obj_grid1_pscaleMaster_switch3
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_switch3
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_switch3
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_switch3

# Node $_obj_grid1_pscaleMaster_switcher2 (Vop/parameter)
set _obj_grid1_pscaleMaster_switcher2 = `run("opadd -e -n -v parameter switcher2")`
oplocate -x `$arg2 + 174.84800000000001` -y `$arg3 + 8.4653700000000001` $_obj_grid1_pscaleMaster_switcher2
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_switcher2 parmname ( attrib_type ) parmlabel ( 'Attribute Type' ) parmtype ( int ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_switcher2
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_switcher2
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_switcher2

# Node $_obj_grid1_pscaleMaster_multiply5 (Vop/multiply)
set _obj_grid1_pscaleMaster_multiply5 = `run("opadd -e -n -v multiply multiply5")`
oplocate -x `$arg2 + 181.12299999999999` -y `$arg3 + 0.41202100000000003` $_obj_grid1_pscaleMaster_multiply5
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_multiply5
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_multiply5
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_multiply5

# Node $_obj_grid1_pscaleMaster_multiply6 (Vop/multiply)
set _obj_grid1_pscaleMaster_multiply6 = `run("opadd -e -n -v multiply multiply6")`
oplocate -x `$arg2 + 193.47999999999999` -y `$arg3 + 0.262021` $_obj_grid1_pscaleMaster_multiply6
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_multiply6
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_multiply6
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_multiply6

# Node $_obj_grid1_pscaleMaster_input4 (Vop/parameter)
set _obj_grid1_pscaleMaster_input4 = `run("opadd -e -n -v parameter input4")`
oplocate -x `$arg2 + 190.298` -y `$arg3 + -2.0230100000000002` $_obj_grid1_pscaleMaster_input4
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_input4 parmname ( Post_multiply ) parmlabel ( 'Post Multiply' ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_input4
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_input4
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_input4

# Node $_obj_grid1_pscaleMaster_multiply7 (Vop/multiply)
set _obj_grid1_pscaleMaster_multiply7 = `run("opadd -e -n -v multiply multiply7")`
oplocate -x `$arg2 + 198.374` -y `$arg3 + 0.262021` $_obj_grid1_pscaleMaster_multiply7
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_multiply7
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_multiply7
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_multiply7

# Node $_obj_grid1_pscaleMaster_switch4 (Vop/switch)
set _obj_grid1_pscaleMaster_switch4 = `run("opadd -e -n -v switch switch4")`
oplocate -x `$arg2 + 196.14500000000001` -y `$arg3 + 5.2165800000000004` $_obj_grid1_pscaleMaster_switch4
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_switch4
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_switch4
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_switch4

# Node $_obj_grid1_pscaleMaster_switcher3 (Vop/parameter)
set _obj_grid1_pscaleMaster_switcher3 = `run("opadd -e -n -v parameter switcher3")`
oplocate -x `$arg2 + 193.739` -y `$arg3 + 7.0854900000000001` $_obj_grid1_pscaleMaster_switcher3
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_switcher3 parmname ( do_inherit_pscale ) parmlabel ( 'Inherit Pscale' ) parmtype ( toggle ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_switcher3
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_switcher3
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_switcher3

# Node $_obj_grid1_pscaleMaster_input1 (Vop/parameter)
set _obj_grid1_pscaleMaster_input1 = `run("opadd -e -n -v parameter input1")`
oplocate -x `$arg2 + 193.739` -y `$arg3 + 5.2165800000000004` $_obj_grid1_pscaleMaster_input1
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_input1 parmname ( base ) parmlabel ( 'Base Pscale' ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_input1
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_input1
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_input1

# Node $_obj_grid1_pscaleMaster_bind6 (Vop/bind)
set _obj_grid1_pscaleMaster_bind6 = `run("opadd -e -n -v bind bind6")`
oplocate -x `$arg2 + 193.739` -y `$arg3 + 3.04637` $_obj_grid1_pscaleMaster_bind6
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_bind6 parmname ( pscale ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_bind6
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_bind6
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_bind6

# Node $_obj_grid1_pscaleMaster_fit5 (Vop/fit)
set _obj_grid1_pscaleMaster_fit5 = `run("opadd -e -n -v fit fit5")`
oplocate -x `$arg2 + 205.06200000000001` -y `$arg3 + 0.262021` $_obj_grid1_pscaleMaster_fit5
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_fit5
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_fit5
opuserdata -n '___Version___' -v '' $_obj_grid1_pscaleMaster_fit5

# Node $_obj_grid1_pscaleMaster_srcmin (Vop/parameter)
set _obj_grid1_pscaleMaster_srcmin = `run("opadd -e -n -v parameter srcmin")`
oplocate -x `$arg2 + 201.24700000000001` -y `$arg3 + -1.36016` $_obj_grid1_pscaleMaster_srcmin
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_srcmin parmname ( srcmin ) parmlabel ( 'Source Min' ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_srcmin
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_srcmin
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_srcmin

# Node $_obj_grid1_pscaleMaster_srcmax2 (Vop/parameter)
set _obj_grid1_pscaleMaster_srcmax2 = `run("opadd -e -n -v parameter srcmax2")`
oplocate -x `$arg2 + 201.24700000000001` -y `$arg3 + -2.8901599999999998` $_obj_grid1_pscaleMaster_srcmax2
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_srcmax2 parmname ( srcmax ) parmlabel ( 'Source Max' ) floatdef ( 1 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_srcmax2
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_srcmax2
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_srcmax2

# Node $_obj_grid1_pscaleMaster_destmin2 (Vop/parameter)
set _obj_grid1_pscaleMaster_destmin2 = `run("opadd -e -n -v parameter destmin2")`
oplocate -x `$arg2 + 201.24700000000001` -y `$arg3 + -4.4201600000000001` $_obj_grid1_pscaleMaster_destmin2
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_destmin2 parmname ( destmin ) parmlabel ( 'Final Mine' ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_destmin2
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_destmin2
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_destmin2

# Node $_obj_grid1_pscaleMaster_destmax2 (Vop/parameter)
set _obj_grid1_pscaleMaster_destmax2 = `run("opadd -e -n -v parameter destmax2")`
oplocate -x `$arg2 + 201.24700000000001` -y `$arg3 + -5.9501600000000003` $_obj_grid1_pscaleMaster_destmax2
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_destmax2 parmname ( destmax ) parmlabel ( 'Final Max' ) floatdef ( 1 ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_destmax2
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_destmax2
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_destmax2

# Node $_obj_grid1_pscaleMaster_bind7 (Vop/bind)
set _obj_grid1_pscaleMaster_bind7 = `run("opadd -e -n -v bind bind7")`
oplocate -x `$arg2 + 216.85599999999999` -y `$arg3 + 0.114124` $_obj_grid1_pscaleMaster_bind7
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_bind7 parmname ( pscale ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_bind7
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_bind7
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_bind7

# Node $_obj_grid1_pscaleMaster_switch5 (Vop/switch)
set _obj_grid1_pscaleMaster_switch5 = `run("opadd -e -n -v switch switch5")`
oplocate -x `$arg2 + 208.86799999999999` -y `$arg3 + 5.0665800000000001` $_obj_grid1_pscaleMaster_switch5
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_switch5
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_switch5
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_switch5

# Node $_obj_grid1_pscaleMaster_switcher4 (Vop/parameter)
set _obj_grid1_pscaleMaster_switcher4 = `run("opadd -e -n -v parameter switcher4")`
oplocate -x `$arg2 + 204.773` -y `$arg3 + 9.2155299999999993` $_obj_grid1_pscaleMaster_switcher4
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_switcher4 parmname ( do_update_color ) parmlabel ( 'Update Color' ) parmtype ( toggle ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_switcher4
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_switcher4
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_switcher4

# Node $_obj_grid1_pscaleMaster_if_begin7 (Vop/block_begin_if)
set _obj_grid1_pscaleMaster_if_begin7 = `run("opadd -e -n -v block_begin_if if_begin7")`
oplocate -x `$arg2 + 214.381` -y `$arg3 + 6.1019500000000004` $_obj_grid1_pscaleMaster_if_begin7
opparm $_obj_grid1_pscaleMaster_if_begin7  outputnum ( 1 )
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_if_begin7 blockpath ( ../end_if7 ) outputnum ( 1 ) outputname1 ( pscale )
opcolor -c 0 0.46666666865348816 1 $_obj_grid1_pscaleMaster_if_begin7
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_if_begin7
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_if_begin7
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_if_begin7

# Node $_obj_grid1_pscaleMaster_end_if7 (Vop/block_end)
set _obj_grid1_pscaleMaster_end_if7 = `run("opadd -e -n -v block_end end_if7")`
oplocate -x `$arg2 + 219.499` -y `$arg3 + 5.9519500000000001` $_obj_grid1_pscaleMaster_end_if7
opparm $_obj_grid1_pscaleMaster_end_if7  outputnum ( 0 )
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_end_if7 blockpath ( ../if_begin7 ) encloseinputs ( on )
opcolor -c 0 0.46666666865348816 1 $_obj_grid1_pscaleMaster_end_if7
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_end_if7
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_end_if7
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_end_if7

# Node $_obj_grid1_pscaleMaster_condition_in6 (Vop/parameter)
set _obj_grid1_pscaleMaster_condition_in6 = `run("opadd -e -n -v parameter condition_in6")`
oplocate -x `$arg2 + 211.44999999999999` -y `$arg3 + 8.0148499999999991` $_obj_grid1_pscaleMaster_condition_in6
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_condition_in6 parmname ( display_color ) parmlabel ( 'Display Color' ) parmtype ( toggle ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_condition_in6
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_condition_in6
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_condition_in6

# Node $_obj_grid1_pscaleMaster_bind8 (Vop/bind)
set _obj_grid1_pscaleMaster_bind8 = `run("opadd -e -n -v bind bind8")`
oplocate -x `$arg2 + 217.239` -y `$arg3 + 5.9519500000000001` $_obj_grid1_pscaleMaster_bind8
opparm -V 20.0.547 $_obj_grid1_pscaleMaster_bind8 parmname ( Cd ) overridetype ( on ) useasparmdefiner ( on ) exportparm ( whenconnected ) exportcontext ( cvex )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off -L off -M off -H on -E off $_obj_grid1_pscaleMaster_bind8
opexprlanguage -s hscript $_obj_grid1_pscaleMaster_bind8
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_pscaleMaster_bind8
opcf ..
opcf $_obj_grid1_pscaleMaster
oporder -e if_begin1 end_if1 const1 condition_in bind1 switch1 switcher bind2 bind3 multiply1 if_begin2 end_if2 condition_in1 subtract1 add1 input2 random1 ramp1 fit1 destmin destmax ramp2 fit2_invert srcmax if_begin3 end_if3 condition_in2 multiply2 add2 input3 random2 ramp3 fit2 destmin1 destmax1 if_begin4 end_if4 condition_in3 bind4 multiply3 length1 fit3 ramp4 srcmax1 if_begin5 end_if5 bind5 condition_in4 multiply4 pcfind1 radius maxpoints fit4 len1 ramp5 if_begin6 end_if6 condition_in5 next_in importpoint1 importpoint2 vectofloat1 switch2 switcher1 max1 vec_comp 3d 1d switch3 switcher2 multiply5 multiply6 input4 multiply7 switch4 switcher3 input1 bind6 fit5 srcmin srcmax2 destmin2 destmax2 bind7 switch5 switcher4 if_begin7 end_if7 condition_in6 bind8 
opcf ..
opset -p on $_obj_grid1_pscaleMaster

opcf $arg1
opwire -n $_obj_grid1_create_extra_attribs -0 $_obj_grid1_pscaleMaster
opcf $_obj_grid1_pscaleMaster
opwire -n $_obj_grid1_pscaleMaster_condition_in -0 $_obj_grid1_pscaleMaster_if_begin1
opwire -n $_obj_grid1_pscaleMaster_const1 -1 $_obj_grid1_pscaleMaster_if_begin1
opwire -n $_obj_grid1_pscaleMaster_bind1 -2 $_obj_grid1_pscaleMaster_if_begin1
opwire -n $_obj_grid1_pscaleMaster_switch1 -3 $_obj_grid1_pscaleMaster_if_begin1
opwire -n $_obj_grid1_pscaleMaster_multiply1 -0 $_obj_grid1_pscaleMaster_end_if1
opwire -n $_obj_grid1_pscaleMaster_switcher -0 $_obj_grid1_pscaleMaster_switch1
opwire -n $_obj_grid1_pscaleMaster_bind2 -1 $_obj_grid1_pscaleMaster_switch1
opwire -n $_obj_grid1_pscaleMaster_bind3 -2 $_obj_grid1_pscaleMaster_switch1
opwire -n -o 1 $_obj_grid1_pscaleMaster_if_begin1 -0 $_obj_grid1_pscaleMaster_multiply1
opwire -n $_obj_grid1_pscaleMaster_ramp2 -1 $_obj_grid1_pscaleMaster_multiply1
opwire -n $_obj_grid1_pscaleMaster_condition_in1 -0 $_obj_grid1_pscaleMaster_if_begin2
opwire -n -o 2 $_obj_grid1_pscaleMaster_if_begin1 -1 $_obj_grid1_pscaleMaster_if_begin2
opwire -n -o 3 $_obj_grid1_pscaleMaster_if_begin1 -2 $_obj_grid1_pscaleMaster_if_begin2
opwire -n $_obj_grid1_pscaleMaster_subtract1 -0 $_obj_grid1_pscaleMaster_end_if2
opwire -n -o 1 $_obj_grid1_pscaleMaster_if_begin2 -0 $_obj_grid1_pscaleMaster_subtract1
opwire -n $_obj_grid1_pscaleMaster_fit1 -1 $_obj_grid1_pscaleMaster_subtract1
opwire -n -o 2 $_obj_grid1_pscaleMaster_if_begin2 -0 $_obj_grid1_pscaleMaster_add1
opwire -n $_obj_grid1_pscaleMaster_input2 -1 $_obj_grid1_pscaleMaster_add1
opwire -n $_obj_grid1_pscaleMaster_add1 -0 $_obj_grid1_pscaleMaster_random1
opwire -n $_obj_grid1_pscaleMaster_random1 -0 $_obj_grid1_pscaleMaster_ramp1
opwire -n $_obj_grid1_pscaleMaster_ramp1 -0 $_obj_grid1_pscaleMaster_fit1
opwire -n $_obj_grid1_pscaleMaster_destmin -3 $_obj_grid1_pscaleMaster_fit1
opwire -n $_obj_grid1_pscaleMaster_destmax -4 $_obj_grid1_pscaleMaster_fit1
opwire -n $_obj_grid1_pscaleMaster_fit2_invert -0 $_obj_grid1_pscaleMaster_ramp2
opwire -n $_obj_grid1_pscaleMaster_end_if2 -0 $_obj_grid1_pscaleMaster_fit2_invert
opwire -n $_obj_grid1_pscaleMaster_srcmax -2 $_obj_grid1_pscaleMaster_fit2_invert
opwire -n $_obj_grid1_pscaleMaster_condition_in2 -0 $_obj_grid1_pscaleMaster_if_begin3
opwire -n $_obj_grid1_pscaleMaster_end_if1 -1 $_obj_grid1_pscaleMaster_if_begin3
opwire -n $_obj_grid1_pscaleMaster_switch1 -2 $_obj_grid1_pscaleMaster_if_begin3
opwire -n $_obj_grid1_pscaleMaster_multiply2 -0 $_obj_grid1_pscaleMaster_end_if3
opwire -n -o 1 $_obj_grid1_pscaleMaster_if_begin3 -0 $_obj_grid1_pscaleMaster_multiply2
opwire -n $_obj_grid1_pscaleMaster_fit2 -1 $_obj_grid1_pscaleMaster_multiply2
opwire -n -o 2 $_obj_grid1_pscaleMaster_if_begin3 -0 $_obj_grid1_pscaleMaster_add2
opwire -n $_obj_grid1_pscaleMaster_input3 -1 $_obj_grid1_pscaleMaster_add2
opwire -n $_obj_grid1_pscaleMaster_add2 -0 $_obj_grid1_pscaleMaster_random2
opwire -n $_obj_grid1_pscaleMaster_random2 -0 $_obj_grid1_pscaleMaster_ramp3
opwire -n $_obj_grid1_pscaleMaster_ramp3 -0 $_obj_grid1_pscaleMaster_fit2
opwire -n $_obj_grid1_pscaleMaster_destmin1 -3 $_obj_grid1_pscaleMaster_fit2
opwire -n $_obj_grid1_pscaleMaster_destmax1 -4 $_obj_grid1_pscaleMaster_fit2
opwire -n $_obj_grid1_pscaleMaster_condition_in3 -0 $_obj_grid1_pscaleMaster_if_begin4
opwire -n $_obj_grid1_pscaleMaster_end_if3 -1 $_obj_grid1_pscaleMaster_if_begin4
opwire -n $_obj_grid1_pscaleMaster_bind4 -2 $_obj_grid1_pscaleMaster_if_begin4
opwire -n $_obj_grid1_pscaleMaster_multiply3 -0 $_obj_grid1_pscaleMaster_end_if4
opwire -n -o 1 $_obj_grid1_pscaleMaster_if_begin4 -0 $_obj_grid1_pscaleMaster_multiply3
opwire -n $_obj_grid1_pscaleMaster_ramp4 -1 $_obj_grid1_pscaleMaster_multiply3
opwire -n -o 2 $_obj_grid1_pscaleMaster_if_begin4 -0 $_obj_grid1_pscaleMaster_length1
opwire -n $_obj_grid1_pscaleMaster_length1 -0 $_obj_grid1_pscaleMaster_fit3
opwire -n $_obj_grid1_pscaleMaster_srcmax1 -2 $_obj_grid1_pscaleMaster_fit3
opwire -n $_obj_grid1_pscaleMaster_fit3 -0 $_obj_grid1_pscaleMaster_ramp4
opwire -n $_obj_grid1_pscaleMaster_condition_in4 -0 $_obj_grid1_pscaleMaster_if_begin5
opwire -n $_obj_grid1_pscaleMaster_end_if4 -1 $_obj_grid1_pscaleMaster_if_begin5
opwire -n $_obj_grid1_pscaleMaster_bind5 -2 $_obj_grid1_pscaleMaster_if_begin5
opwire -n $_obj_grid1_pscaleMaster_multiply4 -0 $_obj_grid1_pscaleMaster_end_if5
opwire -n -o 1 $_obj_grid1_pscaleMaster_if_begin5 -0 $_obj_grid1_pscaleMaster_multiply4
opwire -n $_obj_grid1_pscaleMaster_ramp5 -1 $_obj_grid1_pscaleMaster_multiply4
opwire -n -o 2 $_obj_grid1_pscaleMaster_if_begin5 -3 $_obj_grid1_pscaleMaster_pcfind1
opwire -n $_obj_grid1_pscaleMaster_radius -4 $_obj_grid1_pscaleMaster_pcfind1
opwire -n $_obj_grid1_pscaleMaster_maxpoints -5 $_obj_grid1_pscaleMaster_pcfind1
opwire -n $_obj_grid1_pscaleMaster_len1 -0 $_obj_grid1_pscaleMaster_fit4
opwire -n $_obj_grid1_pscaleMaster_maxpoints -2 $_obj_grid1_pscaleMaster_fit4
opwire -n $_obj_grid1_pscaleMaster_pcfind1 -0 $_obj_grid1_pscaleMaster_len1
opwire -n $_obj_grid1_pscaleMaster_fit4 -0 $_obj_grid1_pscaleMaster_ramp5
opwire -n $_obj_grid1_pscaleMaster_condition_in5 -0 $_obj_grid1_pscaleMaster_if_begin6
opwire -n $_obj_grid1_pscaleMaster_end_if5 -1 $_obj_grid1_pscaleMaster_if_begin6
opwire -n $_obj_grid1_pscaleMaster_next_in -2 $_obj_grid1_pscaleMaster_if_begin6
opwire -n $_obj_grid1_pscaleMaster_multiply5 -0 $_obj_grid1_pscaleMaster_end_if6
opwire -n -o 2 $_obj_grid1_pscaleMaster_if_begin6 -2 $_obj_grid1_pscaleMaster_importpoint1
opwire -n -o 2 $_obj_grid1_pscaleMaster_if_begin6 -2 $_obj_grid1_pscaleMaster_importpoint2
opwire -n $_obj_grid1_pscaleMaster_importpoint2 -0 $_obj_grid1_pscaleMaster_vectofloat1
opwire -n $_obj_grid1_pscaleMaster_switcher1 -0 $_obj_grid1_pscaleMaster_switch2
opwire -n $_obj_grid1_pscaleMaster_vectofloat1 -1 $_obj_grid1_pscaleMaster_switch2
opwire -n -o 1 $_obj_grid1_pscaleMaster_vectofloat1 -2 $_obj_grid1_pscaleMaster_switch2
opwire -n -o 2 $_obj_grid1_pscaleMaster_vectofloat1 -3 $_obj_grid1_pscaleMaster_switch2
opwire -n $_obj_grid1_pscaleMaster_vec_comp -4 $_obj_grid1_pscaleMaster_switch2
opwire -n $_obj_grid1_pscaleMaster_vectofloat1 -0 $_obj_grid1_pscaleMaster_max1
opwire -n -o 1 $_obj_grid1_pscaleMaster_vectofloat1 -1 $_obj_grid1_pscaleMaster_max1
opwire -n -o 2 $_obj_grid1_pscaleMaster_vectofloat1 -2 $_obj_grid1_pscaleMaster_max1
opwire -n $_obj_grid1_pscaleMaster_max1 -0 $_obj_grid1_pscaleMaster_vec_comp
opwire -n $_obj_grid1_pscaleMaster_switch2 -0 $_obj_grid1_pscaleMaster_3d
opwire -n $_obj_grid1_pscaleMaster_importpoint1 -0 $_obj_grid1_pscaleMaster_1d
opwire -n $_obj_grid1_pscaleMaster_switcher2 -0 $_obj_grid1_pscaleMaster_switch3
opwire -n $_obj_grid1_pscaleMaster_3d -1 $_obj_grid1_pscaleMaster_switch3
opwire -n $_obj_grid1_pscaleMaster_1d -2 $_obj_grid1_pscaleMaster_switch3
opwire -n -o 1 $_obj_grid1_pscaleMaster_if_begin6 -0 $_obj_grid1_pscaleMaster_multiply5
opwire -n $_obj_grid1_pscaleMaster_switch3 -1 $_obj_grid1_pscaleMaster_multiply5
opwire -n $_obj_grid1_pscaleMaster_end_if6 -0 $_obj_grid1_pscaleMaster_multiply6
opwire -n $_obj_grid1_pscaleMaster_input4 -1 $_obj_grid1_pscaleMaster_multiply6
opwire -n $_obj_grid1_pscaleMaster_multiply6 -0 $_obj_grid1_pscaleMaster_multiply7
opwire -n $_obj_grid1_pscaleMaster_switch4 -1 $_obj_grid1_pscaleMaster_multiply7
opwire -n $_obj_grid1_pscaleMaster_switcher3 -0 $_obj_grid1_pscaleMaster_switch4
opwire -n $_obj_grid1_pscaleMaster_input1 -1 $_obj_grid1_pscaleMaster_switch4
opwire -n $_obj_grid1_pscaleMaster_bind6 -2 $_obj_grid1_pscaleMaster_switch4
opwire -n $_obj_grid1_pscaleMaster_multiply7 -0 $_obj_grid1_pscaleMaster_fit5
opwire -n $_obj_grid1_pscaleMaster_srcmin -1 $_obj_grid1_pscaleMaster_fit5
opwire -n $_obj_grid1_pscaleMaster_srcmax2 -2 $_obj_grid1_pscaleMaster_fit5
opwire -n $_obj_grid1_pscaleMaster_destmin2 -3 $_obj_grid1_pscaleMaster_fit5
opwire -n $_obj_grid1_pscaleMaster_destmax2 -4 $_obj_grid1_pscaleMaster_fit5
opwire -n $_obj_grid1_pscaleMaster_fit5 -0 $_obj_grid1_pscaleMaster_bind7
opwire -n $_obj_grid1_pscaleMaster_switcher4 -0 $_obj_grid1_pscaleMaster_switch5
opwire -n $_obj_grid1_pscaleMaster_multiply7 -1 $_obj_grid1_pscaleMaster_switch5
opwire -n $_obj_grid1_pscaleMaster_fit5 -2 $_obj_grid1_pscaleMaster_switch5
opwire -n $_obj_grid1_pscaleMaster_condition_in6 -0 $_obj_grid1_pscaleMaster_if_begin7
opwire -n $_obj_grid1_pscaleMaster_switch5 -1 $_obj_grid1_pscaleMaster_if_begin7
opwire -n -o 1 $_obj_grid1_pscaleMaster_if_begin7 -0 $_obj_grid1_pscaleMaster_bind8
opcf ..

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_grid1_pscaleMaster
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_grid1_pscaleMaster
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="cfg_popPreSim01" label="cfg Pop PreSim 01" icon="MISC_generic">
    <toolMenuContext name="network">
      <contextOpType>Sop/normal</contextOpType>
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if "outputnodename" in kwargs and "inputindex" in kwargs:
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if "inputnodename" in kwargs and "outputindex" in kwargs:
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9
    if "autoplace" in kwargs:
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if "shiftclick" in kwargs and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if "nodepositionx" in kwargs and             "nodepositiony" in kwargs:
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if "node_bbox" in kwargs:
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'

pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if 'scatter::2.0' not in child_type:
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r'''
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_grid1_normal1 (Sop/normal)
set _obj_grid1_normal1 = `run("opadd -e -n -v normal normal1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_grid1_normal1
opparm -V 20.0.547 $_obj_grid1_normal1 type ( typepoint )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_grid1_normal1
opexprlanguage -s hscript $_obj_grid1_normal1
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_normal1
opset -p on $_obj_grid1_normal1
opcf $arg1

# Node $_obj_grid1_count (Sop/attribcreate::2.0)
set _obj_grid1_count = `run("opadd -e -n -v attribcreate::2.0 count")`
oplocate -x `$arg2 + -0.0034499950706958771` -y `$arg3 + -1.0000000119209291` $_obj_grid1_count
opparm $_obj_grid1_count  numattr ( 1 )
opparm -V 20.0.547 $_obj_grid1_count name1 ( count ) class1 ( primitive ) value1v ( 1 0 0 0 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_grid1_count
opexprlanguage -s hscript $_obj_grid1_count
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_count
opset -p on $_obj_grid1_count
opcf $arg1

# Node $_obj_grid1_pointvelocity1 (Sop/pointvelocity)
set _obj_grid1_pointvelocity1 = `run("opadd -e -n -v pointvelocity pointvelocity1")`
oplocate -x `$arg2 + 0` -y `$arg3 + -3.0000000357627865` $_obj_grid1_pointvelocity1
chblockbegin
chadd -t 0 0 $_obj_grid1_pointvelocity1 framerangemin
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FSTART' $_obj_grid1_pointvelocity1/framerangemin
chadd -t 0 0 $_obj_grid1_pointvelocity1 framerangemax
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F '$FEND' $_obj_grid1_pointvelocity1/framerangemax
chblockend
opparm $_obj_grid1_pointvelocity1 folder0 ( 1 1 1 1 ) init ( attrib ) addcurlnoise ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_grid1_pointvelocity1
opexprlanguage -s hscript $_obj_grid1_pointvelocity1
opuserdata -n '___Version___' -v '' $_obj_grid1_pointvelocity1
opset -p on $_obj_grid1_pointvelocity1
opcf $arg1

# Node $_obj_grid1_scatter1 (Sop/scatter::2.0)
set _obj_grid1_scatter1 = `run("opadd -e -n -v scatter::2.0 scatter1")`
oplocate -x `$arg2 + 0` -y `$arg3 + -2.0000000238418583` $_obj_grid1_scatter1
opparm -V 20.0.547 $_obj_grid1_scatter1 generateby ( countperprimitive ) indepvoxel ( on ) forcetotal ( off ) densityscale ( 5 ) usedensityattrib ( on ) densityattrib ( count ) relaxpoints ( off )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_grid1_scatter1
opexprlanguage -s hscript $_obj_grid1_scatter1
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_scatter1
opset -p on $_obj_grid1_scatter1

opcf $arg1
opwire -n $_obj_grid1_sphere1 -0 $_obj_grid1_normal1
opcf $arg1
opwire -n $_obj_grid1_normal1 -0 $_obj_grid1_count
opcf $arg1
opwire -n $_obj_grid1_scatter1 -0 $_obj_grid1_pointvelocity1
opcf $arg1
opwire -n $_obj_grid1_count -0 $_obj_grid1_scatter1

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_grid1_pointvelocity1
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_grid1_normal1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>

  <tool name="cfg_popPostSim01" label="cfg Pop PostSim 01" icon="MISC_generic">
    <toolMenuContext name="network">
      <contextOpType>Sop/attribdelete</contextOpType>
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <script scriptType="python"><![CDATA[
import sys
import toolutils

outputitem = None
inputindex = -1
inputitem = None
outputindex = -1

num_args = 1
h_extra_args = ''
pane = toolutils.activePane(kwargs)
if not isinstance(pane, hou.NetworkEditor):
    pane = hou.ui.paneTabOfType(hou.paneTabType.NetworkEditor)
    if pane is None:
       hou.ui.displayMessage(
               'Cannot create node: cannot find any network pane')
       sys.exit(0)
else: # We're creating this tool from the TAB menu inside a network editor
    pane_node = pane.pwd()
    if "outputnodename" in kwargs and "inputindex" in kwargs:
        outputitem = pane_node.item(kwargs["outputnodename"])
        inputindex = kwargs["inputindex"]
        h_extra_args += 'set arg4 = "' + kwargs["outputnodename"] + '"\n'
        h_extra_args += 'set arg5 = "' + str(inputindex) + '"\n'
        num_args = 6
    if "inputnodename" in kwargs and "outputindex" in kwargs:
        inputitem = pane_node.item(kwargs["inputnodename"])
        outputindex = kwargs["outputindex"]
        h_extra_args += 'set arg6 = "' + kwargs["inputnodename"] + '"\n'
        h_extra_args += 'set arg9 = "' + str(outputindex) + '"\n'
        num_args = 9
    if "autoplace" in kwargs:
        autoplace = kwargs["autoplace"]
    else:
        autoplace = False
    # If shift-clicked we want to auto append to the current
    # node
    if "shiftclick" in kwargs and kwargs["shiftclick"]:
        if inputitem is None:
            inputitem = pane.currentNode()
            outputindex = 0
    if "nodepositionx" in kwargs and             "nodepositiony" in kwargs:
        try:
            pos = [ float( kwargs["nodepositionx"] ),
                    float( kwargs["nodepositiony"] )]
        except:
            pos = None
    else:
        pos = None

    if not autoplace and not pane.listMode():
        if pos is not None:
            pass
        elif outputitem is None:
            pos = pane.selectPosition(inputitem, outputindex, None, -1)
        else:
            pos = pane.selectPosition(inputitem, outputindex,
                                      outputitem, inputindex)

    if pos is not None:
        if "node_bbox" in kwargs:
            size = kwargs["node_bbox"]
            pos[0] -= size[0] / 2
            pos[1] -= size[1] / 2
        else:
            pos[0] -= 0.573625
            pos[1] -= 0.220625
        h_extra_args += 'set arg2 = "' + str(pos[0]) + '"\n'
        h_extra_args += 'set arg3 = "' + str(pos[1]) + '"\n'
h_extra_args += 'set argc = "' + str(num_args) + '"\n'

pane_node = pane.pwd()
child_type = pane_node.childTypeCategory().nodeTypes()

if 'color' not in child_type:
   hou.ui.displayMessage(
           'Cannot create node: incompatible pane network type')
   sys.exit(0)

# First clear the node selection
pane_node.setSelected(False, True)

h_path = pane_node.path()
h_preamble = 'set arg1 = "' + h_path + '"\n'
h_cmd = r'''
if ($argc < 2 || "$arg2" == "") then
   set arg2 = 0
endif
if ($argc < 3 || "$arg3" == "") then
   set arg3 = 0
endif
# Automatically generated script
# $arg1 - the path to add this node
# $arg2 - x position of the tile
# $arg3 - y position of the tile
# $arg4 - input node to wire to
# $arg5 - which input to wire to
# $arg6 - output node to wire to
# $arg7 - the type of this node
# $arg8 - the node is an indirect input
# $arg9 - index of output from $arg6

\set noalias = 1
set saved_path = `execute("oppwf")`
opcf $arg1

# Node $_obj_grid1_attribdelete1 (Sop/attribdelete)
set _obj_grid1_attribdelete1 = `run("opadd -e -n -v attribdelete attribdelete1")`
oplocate -x `$arg2 + 0` -y `$arg3 + 0` $_obj_grid1_attribdelete1
opparm $_obj_grid1_attribdelete1 negate ( on ) ptdel ( 'P v age id life' )
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_grid1_attribdelete1
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_grid1_attribdelete1
opexprlanguage -s hscript $_obj_grid1_attribdelete1
opuserdata -n '___Version___' -v '' $_obj_grid1_attribdelete1
opset -p on $_obj_grid1_attribdelete1
opcf $arg1

# Node $_obj_grid1_viz_nAge (Sop/color)
set _obj_grid1_viz_nAge = `run("opadd -e -n -v color viz_nAge")`
oplocate -x `$arg2 + 3.8768545635922589` -y `$arg3 + -14.188834016833059` $_obj_grid1_viz_nAge
opparm $_obj_grid1_viz_nAge  ramp ( 2 )
opparm $_obj_grid1_viz_nAge colortype ( 3 ) rampattribute ( nAge ) ramp2pos ( 1 ) ramp2c ( 1 1 1 )
opcolor -c 0.88999998569488525 0.41200000047683716 0.76099997758865356 $_obj_grid1_viz_nAge
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_grid1_viz_nAge
opexprlanguage -s hscript $_obj_grid1_viz_nAge
opuserdata -n '___Version___' -v '' $_obj_grid1_viz_nAge
opuserdata -n '___toolcount___' -v '2' $_obj_grid1_viz_nAge
opuserdata -n '___toolid___' -v 'sop_color' $_obj_grid1_viz_nAge
opset -p on $_obj_grid1_viz_nAge
opcf $arg1

# Node $_obj_grid1_groupdelete1 (Sop/groupdelete)
set _obj_grid1_groupdelete1 = `run("opadd -e -n -v groupdelete groupdelete1")`
oplocate -x `$arg2 + 0.0034499950706958771` -y `$arg3 + -1.0000000119209287` $_obj_grid1_groupdelete1
opparm $_obj_grid1_groupdelete1  deletions ( 1 )
opparm -V 20.0.547 $_obj_grid1_groupdelete1 group1 ( * )
opcolor -c 0.98000001907348633 0.27500000596046448 0.27500000596046448 $_obj_grid1_groupdelete1
opset -d off -r off -h on -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_grid1_groupdelete1
opexprlanguage -s hscript $_obj_grid1_groupdelete1
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_groupdelete1
opset -p on $_obj_grid1_groupdelete1
opcf $arg1

# Node $_obj_grid1_pscaleMult_density (Sop/attribwrangle)
set _obj_grid1_pscaleMult_density = `run("opadd -e -n -v attribwrangle pscaleMult_density")`
oplocate -x `$arg2 + 0.00044999853707849979` -y `$arg3 + -17.693792257670079` $_obj_grid1_pscaleMult_density
opspareds '    group {         name    "folder1"         label   "Code"          parm {             name    "group"             baseparm             label   "Group"             export  none             bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."                 0 1 0xffffffff 0 grouptype 0         }         parm {             name    "grouptype"             baseparm             label   "Group Type"             export  none         }         parm {             name    "class"             baseparm             label   "Run Over"             export  none         }         parm {             name    "vex_numcount"             baseparm             label   "Number Count"             export  none         }         parm {             name    "vex_threadjobsize"             baseparm             label   "Thread Job Size"             export  none         }         groupsimple {             name    "folder_generatedparms_snippet"             label   "Generated Channel Parameters"             grouptag { "group_type" "simple" }             grouptag { "sidefx::look" "blank" }              parm {                 name    "attribute"                 label   "Attribute"                 type    string                 default { "" }                 menureplace {                     [ "types = (" ]                     [ "    hou.attribType.Global," ]                     [ "    hou.attribType.Prim," ]                     [ "    hou.attribType.Point," ]                     [ "    hou.attribType.Vertex" ]                     [ ")" ]                     [ "attrib_type = types[hou.ch(\\"class\\")]" ]                     [ "" ]                     [ "return hou.pwd().generateInputAttribMenu(0, attrib_type, array_type=False, pattern=\\"* ^Cd\\")" ]                     language python                 }             }             parm {                 name    "min"                 label   "Min"                 type    float                 default { "0" }                 range   { 0 1 }             }             parm {                 name    "max"                 label   "Max"                 type    float                 default { "0" }                 range   { 0 1 }             }         }          parm {             name    "snippet"             baseparm             label   "VEXpression"             export  all         }         parm {             name    "exportlist"             baseparm             label   "Attributes to Create"             export  none         }         parm {             name    "vex_strict"             baseparm             label   "Enforce Prototypes"             export  none         }     }      group {         name    "folder1_1"         label   "Bindings"          parm {             name    "autobind"             baseparm             label   "Autobind by Name"             export  none         }         multiparm {             name    "bindings"             label    "Number of Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindname#"                 baseparm                 label   "Attribute Name"                 export  none             }             parm {                 name    "bindparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "groupautobind"             baseparm             label   "Autobind Groups by Name"             export  none         }         multiparm {             name    "groupbindings"             label    "Group Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindgroupname#"                 baseparm                 label   "Group Name"                 export  none             }             parm {                 name    "bindgroupparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "vex_cwdpath"             baseparm             label   "Evaluation Node Path"             export  none         }         parm {             name    "vex_outputmask"             baseparm             label   "Export Parameters"             export  none         }         parm {             name    "vex_updatenmls"             baseparm             label   "Update Normals If Displaced"             export  none         }         parm {             name    "vex_matchattrib"             baseparm             label   "Attribute to Match"             export  none         }         parm {             name    "vex_inplace"             baseparm             label   "Compute Results In Place"             export  none         }         parm {             name    "vex_selectiongroup"             baseparm             label   "Output Selection Group"             export  none         }         parm {             name    "vex_precision"             baseparm             label   "VEX Precision"             export  none         }     }  ' $_obj_grid1_pscaleMult_density
opparm $_obj_grid1_pscaleMult_density  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_grid1_pscaleMult_density snippet ( 'string attribName = chs(\'attribute\');\nfloat attribValue = point(0, attribName, @ptnum);\n\n@pscale *= fit01(attribValue, chf(\'min\'), chf(\'max\'));' ) attribute ( density ) min ( 0.2 ) max ( 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_grid1_pscaleMult_density
opexprlanguage -s hscript $_obj_grid1_pscaleMult_density
opuserdata -n '___Version___' -v '' $_obj_grid1_pscaleMult_density
opset -p on $_obj_grid1_pscaleMult_density
opcf $arg1

# Node $_obj_grid1_create_nAge (Sop/attribwrangle)
set _obj_grid1_create_nAge = `run("opadd -e -n -v attribwrangle create_nAge")`
oplocate -x `$arg2 + 0.00044999853707849979` -y `$arg3 + -13.235302259944634` $_obj_grid1_create_nAge
opspareds '    group {         name    "folder1"         label   "Code"          parm {             name    "group"             baseparm             label   "Group"             export  none             bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."                 0 1 0xffffffff 0 grouptype 0         }         parm {             name    "grouptype"             baseparm             label   "Group Type"             export  none         }         parm {             name    "class"             baseparm             label   "Run Over"             export  none         }         parm {             name    "vex_numcount"             baseparm             label   "Number Count"             export  none         }         parm {             name    "vex_threadjobsize"             baseparm             label   "Thread Job Size"             export  none         }         groupsimple {             name    "folder_generatedparms_snippet"             label   "Generated Channel Parameters"             grouptag { "group_type" "simple" }             grouptag { "sidefx::look" "blank" }              parm {                 name    "n_age"                 label   "N Age"                 type    toggle                 joinnext                 default { "0" }             }             parm {                 name    "n_age_invert"                 label   "N Age Invert"                 type    toggle                 default { "0" }             }             parm {                 name    "remap_nAge"                 label   "Remap Nage"                 type    toggle                 default { "0" }                 range   { 0 10 }             }             parm {                 name    "min_nAge"                 label   "Min Nage"                 type    float                 default { "0" }                 disablewhen "{ remap_nAge != 1 }"                 range   { 0 1 }             }             parm {                 name    "max_nAge"                 label   "Max Nage"                 type    float                 default { "0" }                 disablewhen "{ remap_nAge != 1 }"                 range   { 0 1 }             }             parm {                 name    "ramp_NAge"                 label   "Ramp Nage"                 type    toggle                 default { "0" }                 disablewhen "{ remap_nAge != 1 }"                 range   { 0 10 }             }             parm {                 name    "ramp_nAge"                 label   "Ramp Nage"                 type    ramp_flt                 default { "2" }                 disablewhen "{ ramp_NAge != 1 } { remap_nAge != 1 }"                 range   { 1! 10 }             }         }          parm {             name    "snippet"             baseparm             label   "VEXpression"             export  all         }         parm {             name    "exportlist"             baseparm             label   "Attributes to Create"             export  none         }         parm {             name    "vex_strict"             baseparm             label   "Enforce Prototypes"             export  none         }     }      group {         name    "folder1_1"         label   "Bindings"          parm {             name    "autobind"             baseparm             label   "Autobind by Name"             export  none         }         multiparm {             name    "bindings"             label    "Number of Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindname#"                 baseparm                 label   "Attribute Name"                 export  none             }             parm {                 name    "bindparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "groupautobind"             baseparm             label   "Autobind Groups by Name"             export  none         }         multiparm {             name    "groupbindings"             label    "Group Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindgroupname#"                 baseparm                 label   "Group Name"                 export  none             }             parm {                 name    "bindgroupparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "vex_cwdpath"             baseparm             label   "Evaluation Node Path"             export  none         }         parm {             name    "vex_outputmask"             baseparm             label   "Export Parameters"             export  none         }         parm {             name    "vex_updatenmls"             baseparm             label   "Update Normals If Displaced"             export  none         }         parm {             name    "vex_matchattrib"             baseparm             label   "Attribute to Match"             export  none         }         parm {             name    "vex_inplace"             baseparm             label   "Compute Results In Place"             export  none         }         parm {             name    "vex_selectiongroup"             baseparm             label   "Output Selection Group"             export  none         }         parm {             name    "vex_precision"             baseparm             label   "VEX Precision"             export  none         }     }  ' $_obj_grid1_create_nAge
opparm $_obj_grid1_create_nAge  bindings ( 0 ) groupbindings ( 0 ) ramp_nAge ( 2 )
opparm $_obj_grid1_create_nAge snippet ( 'float nAge = f@age/f@life;\nfloat remap_nAge = fit01(nAge, chf(\'min_nAge\'), chf(\'max_nAge\'));\nfloat ramp_nAge = chramp(\'ramp_nAge\', remap_nAge);\n\nif(chi("remap_nAge") == 1)\n    nAge = remap_nAge;\nif(chi("ramp_NAge") == 1 && chi("remap_nAge") == 1)\n    nAge = ramp_nAge;\n    \nif(chi("n_age") == 1)\n       setpointattrib(1, "nAge", @ptnum, nAge); //create n_age\nif(chi("n_age_invert") == 1)\n       setpointattrib(1, "nAge", @ptnum, 1-nAge); //invert n_age\n \n       \n       ' ) n_age ( on ) n_age_invert ( on ) max_nAge ( 1 ) ramp_NAge ( on ) ramp_nAge2pos ( 1 ) ramp_nAge2value ( 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_grid1_create_nAge
opexprlanguage -s hscript $_obj_grid1_create_nAge
opuserdata -n '___Version___' -v '' $_obj_grid1_create_nAge
opset -p on $_obj_grid1_create_nAge
opcf $arg1

# Node $_obj_grid1_pscaleMult_nAge (Sop/attribwrangle)
set _obj_grid1_pscaleMult_nAge = `run("opadd -e -n -v attribwrangle pscaleMult_nAge")`
oplocate -x `$arg2 + 0.00044999853707849979` -y `$arg3 + -14.313102247737604` $_obj_grid1_pscaleMult_nAge
opspareds '    group {         name    "folder1"         label   "Code"          parm {             name    "group"             baseparm             label   "Group"             export  none             bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."                 0 1 0xffffffff 0 grouptype 0         }         parm {             name    "grouptype"             baseparm             label   "Group Type"             export  none         }         parm {             name    "class"             baseparm             label   "Run Over"             export  none         }         parm {             name    "vex_numcount"             baseparm             label   "Number Count"             export  none         }         parm {             name    "vex_threadjobsize"             baseparm             label   "Thread Job Size"             export  none         }         groupsimple {             name    "folder_generatedparms_snippet"             label   "Generated Channel Parameters"             grouptag { "group_type" "simple" }             grouptag { "sidefx::look" "blank" }              parm {                 name    "attribute"                 label   "Attribute"                 type    string                 default { "" }                 menureplace {                     [ "types = (" ]                     [ "    hou.attribType.Global," ]                     [ "    hou.attribType.Prim," ]                     [ "    hou.attribType.Point," ]                     [ "    hou.attribType.Vertex" ]                     [ ")" ]                     [ "attrib_type = types[hou.ch(\\"class\\")]" ]                     [ "" ]                     [ "return hou.pwd().generateInputAttribMenu(0, attrib_type, array_type=False, pattern=\\"* ^Cd\\")" ]                     language python                 }             }             parm {                 name    "min"                 label   "Min"                 type    float                 default { "0" }                 range   { 0 1 }             }             parm {                 name    "max"                 label   "Max"                 type    float                 default { "0" }                 range   { 0 1 }             }         }          parm {             name    "snippet"             baseparm             label   "VEXpression"             export  all         }         parm {             name    "exportlist"             baseparm             label   "Attributes to Create"             export  none         }         parm {             name    "vex_strict"             baseparm             label   "Enforce Prototypes"             export  none         }     }      group {         name    "folder1_1"         label   "Bindings"          parm {             name    "autobind"             baseparm             label   "Autobind by Name"             export  none         }         multiparm {             name    "bindings"             label    "Number of Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindname#"                 baseparm                 label   "Attribute Name"                 export  none             }             parm {                 name    "bindparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "groupautobind"             baseparm             label   "Autobind Groups by Name"             export  none         }         multiparm {             name    "groupbindings"             label    "Group Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindgroupname#"                 baseparm                 label   "Group Name"                 export  none             }             parm {                 name    "bindgroupparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "vex_cwdpath"             baseparm             label   "Evaluation Node Path"             export  none         }         parm {             name    "vex_outputmask"             baseparm             label   "Export Parameters"             export  none         }         parm {             name    "vex_updatenmls"             baseparm             label   "Update Normals If Displaced"             export  none         }         parm {             name    "vex_matchattrib"             baseparm             label   "Attribute to Match"             export  none         }         parm {             name    "vex_inplace"             baseparm             label   "Compute Results In Place"             export  none         }         parm {             name    "vex_selectiongroup"             baseparm             label   "Output Selection Group"             export  none         }         parm {             name    "vex_precision"             baseparm             label   "VEX Precision"             export  none         }     }  ' $_obj_grid1_pscaleMult_nAge
opparm $_obj_grid1_pscaleMult_nAge  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_grid1_pscaleMult_nAge snippet ( 'string attribName = chs(\'attribute\');\nfloat attribValue = point(0, attribName, @ptnum);\n\n@pscale *= fit01(attribValue, chf(\'min\'), chf(\'max\'));' ) attribute ( nAge ) min ( 0.3 ) max ( 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_grid1_pscaleMult_nAge
opexprlanguage -s hscript $_obj_grid1_pscaleMult_nAge
opuserdata -n '___Version___' -v '' $_obj_grid1_pscaleMult_nAge
opset -p on $_obj_grid1_pscaleMult_nAge
opcf $arg1

# Node $_obj_grid1_remap_speed (Sop/attribwrangle)
set _obj_grid1_remap_speed = `run("opadd -e -n -v attribwrangle remap_speed")`
oplocate -x `$arg2 + 0.00044999853707849979` -y `$arg3 + -4.9616500139314121` $_obj_grid1_remap_speed
opspareds '    group {         name    "folder1"         label   "Code"          parm {             name    "group"             baseparm             label   "Group"             export  none             bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."                 0 1 0xffffffff 0 grouptype 0         }         parm {             name    "grouptype"             baseparm             label   "Group Type"             export  none         }         parm {             name    "class"             baseparm             label   "Run Over"             export  none         }         parm {             name    "vex_numcount"             baseparm             label   "Number Count"             export  none         }         parm {             name    "vex_threadjobsize"             baseparm             label   "Thread Job Size"             export  none         }         groupsimple {             name    "folder_generatedparms_snippet"             label   "Generated Channel Parameters"             grouptag { "group_type" "simple" }             grouptag { "sidefx::look" "blank" }              groupcollapsible {                 name    "folder3"                 label   "promoted"                 grouptag { "group_type" "collapsible" }                  parm {                     name    "P_speed"                     label   "Promoted Speed"                     type    toggle                     default { "0" }                     disablewhen "{ R_speed == 1 }"                     range   { 0 10 }                 }                 parm {                     name    "Pmin_speed"                     label   "min Speed"                     type    float                     default { "0" }                     disablewhen "{ P_speed != 1 }"                     range   { 0 1 }                 }                 parm {                     name    "Pmax_speed"                     label   "max Speed"                     type    float                     default { "0" }                     disablewhen "{ P_speed != 1 }"                     range   { 0 1 }                 }             }              groupcollapsible {                 name    "folder3_1"                 label   "Custom Remap"                 grouptag { "group_type" "collapsible" }                  parm {                     name    "R_speed"                     label   "Remap Speed"                     type    toggle                     default { "0" }                     disablewhen "{ P_speed == 1 }"                 }                 parm {                     name    "min_speed"                     label   "Min Speed"                     type    float                     default { "0" }                     disablewhen "{ R_speed != 1 }"                     range   { 0 1 }                 }                 parm {                     name    "max_speed"                     label   "Max Speed"                     type    float                     default { "0" }                     disablewhen "{ R_speed != 1 }"                     range   { 0 1 }                 }             }          }          parm {             name    "snippet"             baseparm             label   "VEXpression"             export  all         }         parm {             name    "exportlist"             baseparm             label   "Attributes to Create"             export  none         }         parm {             name    "vex_strict"             baseparm             label   "Enforce Prototypes"             export  none         }     }      group {         name    "folder1_1"         label   "Bindings"          parm {             name    "autobind"             baseparm             label   "Autobind by Name"             export  none         }         multiparm {             name    "bindings"             label    "Number of Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindname#"                 baseparm                 label   "Attribute Name"                 export  none             }             parm {                 name    "bindparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "groupautobind"             baseparm             label   "Autobind Groups by Name"             export  none         }         multiparm {             name    "groupbindings"             label    "Group Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindgroupname#"                 baseparm                 label   "Group Name"                 export  none             }             parm {                 name    "bindgroupparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "vex_cwdpath"             baseparm             label   "Evaluation Node Path"             export  none         }         parm {             name    "vex_outputmask"             baseparm             label   "Export Parameters"             export  none         }         parm {             name    "vex_updatenmls"             baseparm             label   "Update Normals If Displaced"             export  none         }         parm {             name    "vex_matchattrib"             baseparm             label   "Attribute to Match"             export  none         }         parm {             name    "vex_inplace"             baseparm             label   "Compute Results In Place"             export  none         }         parm {             name    "vex_selectiongroup"             baseparm             label   "Output Selection Group"             export  none         }         parm {             name    "vex_precision"             baseparm             label   "VEX Precision"             export  none         }     }  ' $_obj_grid1_remap_speed
opparm $_obj_grid1_remap_speed  bindings ( 0 ) groupbindings ( 0 )
chblockbegin
chadd -t 0 0 $_obj_grid1_remap_speed Pmin_speed
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'detail(0, \'speed_min\', 0)' $_obj_grid1_remap_speed/Pmin_speed
chadd -t 0 0 $_obj_grid1_remap_speed Pmax_speed
chkey -t 0 -v 0 -m 0 -a 0 -A 0 -T a  -F 'detail(0, \'speed_max\', 0)' $_obj_grid1_remap_speed/Pmax_speed
chblockend
opparm $_obj_grid1_remap_speed snippet ( 'float speed = f@speed;\n\n\n//Promoted Speed\nfloat promoted_speed = fit(speed , chf(\'Pmin_speed\'), chf(\'Pmax_speed\'), 0, 1);\nif(chi("P_speed") == 1 && chi("R_speed") == 0)\n       setpointattrib(1, "Nspeed", @ptnum, promoted_speed); //create promoted_speed  \n\n       \n//Custom Ramp Speed\nfloat custRamp_speed = fit(speed , chf(\'min_speed\'), chf(\'max_speed\'), 0, 1);  \nif(chi("R_speed") == 1 && chi("P_speed") == 0)\n       setpointattrib(1, "Nspeed", @ptnum, custRamp_speed); //create remaped_speed    \n              ' ) folder3 ( 1 ) P_speed ( on ) Pmin_speed ( Pmin_speed ) Pmax_speed ( Pmax_speed ) folder3_1 ( 1 ) max_speed ( 5 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_grid1_remap_speed
opexprlanguage -s hscript $_obj_grid1_remap_speed
opuserdata -n '___Version___' -v '' $_obj_grid1_remap_speed
opset -p on $_obj_grid1_remap_speed
opcf $arg1

# Node $_obj_grid1_OUT_prtPost (Sop/null)
set _obj_grid1_OUT_prtPost = `run("opadd -e -n -v null OUT_prtPost")`
oplocate -x `$arg2 + 0.0034499950706958771` -y `$arg3 + -21.406018083718966` $_obj_grid1_OUT_prtPost
opcolor -c 0 0 0 $_obj_grid1_OUT_prtPost
opset -d on -r on -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_grid1_OUT_prtPost
opexprlanguage -s hscript $_obj_grid1_OUT_prtPost
opset -p on $_obj_grid1_OUT_prtPost
opcf $arg1

# Node $_obj_grid1_create_speed (Sop/attribwrangle)
set _obj_grid1_create_speed = `run("opadd -e -n -v attribwrangle create_speed")`
oplocate -x `$arg2 + 0.00044999853707849979` -y `$arg3 + -3.8838500261384432` $_obj_grid1_create_speed
opspareds '    group {         name    "folder1"         label   "Code"          parm {             name    "group"             baseparm             label   "Group"             export  none             bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."                 0 1 0xffffffff 0 grouptype 0         }         parm {             name    "grouptype"             baseparm             label   "Group Type"             export  none         }         parm {             name    "class"             baseparm             label   "Run Over"             export  none         }         parm {             name    "vex_numcount"             baseparm             label   "Number Count"             export  none         }         parm {             name    "vex_threadjobsize"             baseparm             label   "Thread Job Size"             export  none         }         groupsimple {             name    "folder_generatedparms_snippet"             label   "Generated Channel Parameters"             grouptag { "sidefx::look" "blank" }              parm {                 name    "Speed"                 label   "Speed"                 type    toggle                 default { "0" }                 range   { 0 10 }             }         }          parm {             name    "snippet"             baseparm             label   "VEXpression"             export  all         }         parm {             name    "exportlist"             baseparm             label   "Attributes to Create"             export  none         }         parm {             name    "vex_strict"             baseparm             label   "Enforce Prototypes"             export  none         }     }      group {         name    "folder1_1"         label   "Bindings"          parm {             name    "autobind"             baseparm             label   "Autobind by Name"             export  none         }         multiparm {             name    "bindings"             label    "Number of Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindname#"                 baseparm                 label   "Attribute Name"                 export  none             }             parm {                 name    "bindparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "groupautobind"             baseparm             label   "Autobind Groups by Name"             export  none         }         multiparm {             name    "groupbindings"             label    "Group Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindgroupname#"                 baseparm                 label   "Group Name"                 export  none             }             parm {                 name    "bindgroupparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "vex_cwdpath"             baseparm             label   "Evaluation Node Path"             export  none         }         parm {             name    "vex_outputmask"             baseparm             label   "Export Parameters"             export  none         }         parm {             name    "vex_updatenmls"             baseparm             label   "Update Normals If Displaced"             export  none         }         parm {             name    "vex_matchattrib"             baseparm             label   "Attribute to Match"             export  none         }         parm {             name    "vex_inplace"             baseparm             label   "Compute Results In Place"             export  none         }         parm {             name    "vex_selectiongroup"             baseparm             label   "Output Selection Group"             export  none         }         parm {             name    "vex_precision"             baseparm             label   "VEX Precision"             export  none         }     }  ' $_obj_grid1_create_speed
opparm $_obj_grid1_create_speed  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_grid1_create_speed snippet ( '//set Speed\nfloat speed = length(v@v);\nsetdetailattrib(0, "speed_min", speed, "min");\nsetdetailattrib(0, "speed_max", speed, "max");\nfloat min = detail(0, "speed_min", 0);\nfloat max = detail(0, "speed_max", 0);\n\nif(chi("Speed") == 1)\n       setpointattrib(1, "speed", @ptnum, speed); //create speed' ) Speed ( on )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_grid1_create_speed
opexprlanguage -s hscript $_obj_grid1_create_speed
opuserdata -n '___Version___' -v '' $_obj_grid1_create_speed
opset -p on $_obj_grid1_create_speed
opcf $arg1

# Node $_obj_grid1_create_pscale_Alpha (Sop/attribwrangle)
set _obj_grid1_create_pscale_Alpha = `run("opadd -e -n -v attribwrangle create_pscale_Alpha")`
oplocate -x `$arg2 + 0.00044999853707849979` -y `$arg3 + -7.7979559988045315` $_obj_grid1_create_pscale_Alpha
opspareds '    group {         name    "folder1"         label   "Code"          parm {             name    "group"             baseparm             label   "Group"             export  none             bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."                 0 1 0xffffffff 0 grouptype 0         }         parm {             name    "grouptype"             baseparm             label   "Group Type"             export  none         }         parm {             name    "class"             baseparm             label   "Run Over"             export  none         }         parm {             name    "vex_numcount"             baseparm             label   "Number Count"             export  none         }         parm {             name    "vex_threadjobsize"             baseparm             label   "Thread Job Size"             export  none         }         groupsimple {             name    "folder_generatedparms_snippet"             label   "Generated Channel Parameters"             grouptag { "group_type" "simple" }             grouptag { "sidefx::look" "blank" }              parm {                 name    "pscale"                 label   "Pscale"                 type    toggle                 joinnext                 default { "0" }             }             parm {                 name    "Alpha"                 label   "Alpha"                 type    toggle                 default { "0" }             }             parm {                 name    "pscale_val"                 label   "Pscale Val"                 type    float                 default { "0" }                 disablewhen "{ pscale != 1 }"                 range   { 0 1 }             }             parm {                 name    "Alpha_val"                 label   "Alpha Val"                 type    float                 default { "0" }                 disablewhen "{ Alpha != 1 }"                 range   { 0 1 }             }         }          parm {             name    "snippet"             baseparm             label   "VEXpression"             export  all         }         parm {             name    "exportlist"             baseparm             label   "Attributes to Create"             export  none         }         parm {             name    "vex_strict"             baseparm             label   "Enforce Prototypes"             export  none         }     }      group {         name    "folder1_1"         label   "Bindings"          parm {             name    "autobind"             baseparm             label   "Autobind by Name"             export  none         }         multiparm {             name    "bindings"             label    "Number of Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindname#"                 baseparm                 label   "Attribute Name"                 export  none             }             parm {                 name    "bindparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "groupautobind"             baseparm             label   "Autobind Groups by Name"             export  none         }         multiparm {             name    "groupbindings"             label    "Group Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindgroupname#"                 baseparm                 label   "Group Name"                 export  none             }             parm {                 name    "bindgroupparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "vex_cwdpath"             baseparm             label   "Evaluation Node Path"             export  none         }         parm {             name    "vex_outputmask"             baseparm             label   "Export Parameters"             export  none         }         parm {             name    "vex_updatenmls"             baseparm             label   "Update Normals If Displaced"             export  none         }         parm {             name    "vex_matchattrib"             baseparm             label   "Attribute to Match"             export  none         }         parm {             name    "vex_inplace"             baseparm             label   "Compute Results In Place"             export  none         }         parm {             name    "vex_selectiongroup"             baseparm             label   "Output Selection Group"             export  none         }         parm {             name    "vex_precision"             baseparm             label   "VEX Precision"             export  none         }     }  ' $_obj_grid1_create_pscale_Alpha
opparm $_obj_grid1_create_pscale_Alpha  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_grid1_create_pscale_Alpha snippet ( '//Setup\nfloat pscale = chf(\'pscale_val\');\n\nif(chi("pscale") == 1)\n       setpointattrib(1, "pscale", @ptnum, pscale); //create pscale\n\n       \n//Set Alpha\nfloat Alpha = chf(\'Alpha_val\');\n\nif(chi("Alpha") == 1)\n       setpointattrib(1, "Alpha", @ptnum, Alpha); //create Alpha\n       \n       \n\n       ' ) pscale ( on ) Alpha ( on ) pscale_val ( 0.01 ) Alpha_val ( 1 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_grid1_create_pscale_Alpha
opexprlanguage -s hscript $_obj_grid1_create_pscale_Alpha
opuserdata -n '___Version___' -v '' $_obj_grid1_create_pscale_Alpha
opset -p on $_obj_grid1_create_pscale_Alpha
opcf $arg1

# Node $_obj_grid1_viz_density (Sop/color)
set _obj_grid1_viz_density = `run("opadd -e -n -v color viz_density")`
oplocate -x `$arg2 + 3.8768545635922589` -y `$arg3 + -17.81606051432383` $_obj_grid1_viz_density
opparm $_obj_grid1_viz_density  ramp ( 2 )
opparm $_obj_grid1_viz_density colortype ( 3 ) rampattribute ( density ) ramp2pos ( 1 ) ramp2c ( 1 1 1 )
opcolor -c 0.88999998569488525 0.41200000047683716 0.76099997758865356 $_obj_grid1_viz_density
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_grid1_viz_density
opexprlanguage -s hscript $_obj_grid1_viz_density
opuserdata -n '___Version___' -v '' $_obj_grid1_viz_density
opuserdata -n '___toolcount___' -v '2' $_obj_grid1_viz_density
opuserdata -n '___toolid___' -v 'sop_color' $_obj_grid1_viz_density
opset -p on $_obj_grid1_viz_density
opcf $arg1

# Node $_obj_grid1_variance_on_attrib (Sop/attribwrangle)
set _obj_grid1_variance_on_attrib = `run("opadd -e -n -v attribwrangle variance_on_attrib")`
oplocate -x `$arg2 + 0.00044999853707849979` -y `$arg3 + -10.483290909271641` $_obj_grid1_variance_on_attrib
opspareds '    group {         name    "folder1"         label   "Code"          parm {             name    "group"             baseparm             label   "Group"             export  none             bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."                 0 1 0xffffffff 0 grouptype 0         }         parm {             name    "grouptype"             baseparm             label   "Group Type"             export  none         }         parm {             name    "class"             baseparm             label   "Run Over"             export  none         }         parm {             name    "vex_numcount"             baseparm             label   "Number Count"             export  none         }         parm {             name    "vex_threadjobsize"             baseparm             label   "Thread Job Size"             export  none         }         groupsimple {             name    "folder_generatedparms_snippet"             label   "Generated Channel Parameters"             grouptag { "group_type" "simple" }             grouptag { "sidefx::look" "blank" }              groupcollapsible {                 name    "folder3"                 label   "variance"                 grouptag { "group_type" "collapsible" }                  parm {                     name    "attribute"                     label   "Attribute"                     type    string                     default { "0" }                     menureplace {                         [ "types = (" ]                         [ "    hou.attribType.Global," ]                         [ "    hou.attribType.Prim," ]                         [ "    hou.attribType.Point," ]                         [ "    hou.attribType.Vertex" ]                         [ ")" ]                         [ "attrib_type = types[hou.ch(\\"class\\")]" ]                         [ "" ]                         [ "return hou.pwd().generateInputAttribMenu(0, attrib_type, array_type=False, pattern=\\"* ^Cd\\")" ]                         language python                     }                     range   { 0 1 }                 }                 parm {                     name    "MultVariance"                     label   "Variance"                     type    toggle                     default { "0" }                 }                 parm {                     name    "varMult"                     label   "Var Mult"                     type    float                     default { "0" }                     disablewhen "{ MultVariance != 1 }"                     range   { 0 2 }                 }                 parm {                     name    "seed"                     label   "Seed"                     type    float                     default { "0" }                     disablewhen "{ MultVariance != 1 }"                     range   { 0 1 }                 }                 groupcollapsible {                     name    "folder2"                     label   "Remap"                      parm {                         name    "minVar"                         label   "Minvar"                         type    float                         default { "0" }                         disablewhen "{ MultVariance != 1 }"                         range   { 0 1 }                     }                     parm {                         name    "maxVar"                         label   "Maxvar"                         type    float                         default { "0" }                         disablewhen "{ MultVariance != 1 }"                         range   { 0 1 }                     }                 }                  groupcollapsible {                     name    "folder4"                     label   "Ramp"                      parm {                         name    "RampVariance"                         label   "Rampvariance"                         type    toggle                         default { "0" }                         disablewhen "{ MultVariance != 1 }"                     }                     parm {                         name    "rampVariance"                         label   "Rampvariance"                         type    ramp_flt                         default { "2" }                         disablewhen "{ MultVariance != 1 } { RampVariance != 1 }"                         range   { 1! 10 }                     }                 }              }          }          parm {             name    "snippet"             baseparm             label   "VEXpression"             export  all         }         parm {             name    "exportlist"             baseparm             label   "Attributes to Create"             export  none         }         parm {             name    "vex_strict"             baseparm             label   "Enforce Prototypes"             export  none         }     }      group {         name    "folder1_1"         label   "Bindings"          parm {             name    "autobind"             baseparm             label   "Autobind by Name"             export  none         }         multiparm {             name    "bindings"             label    "Number of Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindname#"                 baseparm                 label   "Attribute Name"                 export  none             }             parm {                 name    "bindparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "groupautobind"             baseparm             label   "Autobind Groups by Name"             export  none         }         multiparm {             name    "groupbindings"             label    "Group Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindgroupname#"                 baseparm                 label   "Group Name"                 export  none             }             parm {                 name    "bindgroupparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "vex_cwdpath"             baseparm             label   "Evaluation Node Path"             export  none         }         parm {             name    "vex_outputmask"             baseparm             label   "Export Parameters"             export  none         }         parm {             name    "vex_updatenmls"             baseparm             label   "Update Normals If Displaced"             export  none         }         parm {             name    "vex_matchattrib"             baseparm             label   "Attribute to Match"             export  none         }         parm {             name    "vex_inplace"             baseparm             label   "Compute Results In Place"             export  none         }         parm {             name    "vex_selectiongroup"             baseparm             label   "Output Selection Group"             export  none         }         parm {             name    "vex_precision"             baseparm             label   "VEX Precision"             export  none         }     }  ' $_obj_grid1_variance_on_attrib
opparm $_obj_grid1_variance_on_attrib  bindings ( 0 ) groupbindings ( 0 ) rampVariance ( 4 )
opparm $_obj_grid1_variance_on_attrib snippet ( 'string attribName = chs(\'attribute\');\nfloat attribValue = point(0, attribName, @ptnum);\n\nfloat varMult = chf(\'varMult\');\nfloat var = fit01(rand(@id+chf(\'seed\')), chf(\'minVar\'), chf(\'maxVar\'));\nfloat rampVar = chramp(\'rampVariance\', var);\n   \nif(chi("MultVariance") == 1 && chi("RampVariance") == 0)\n       attribValue*=var;\nif(chi("RampVariance") == 1 && chi("MultVariance") == 1)\n       attribValue*=rampVar;\n\nsetpointattrib(1, attribName , @ptnum, attribValue*varMult);' ) folder3 ( 1 ) attribute ( pscale ) MultVariance ( on ) varMult ( 1 ) folder2 ( 1 ) minVar ( 0.2 ) maxVar ( 1 ) folder4 ( 1 ) RampVariance ( on ) rampVariance ( 4 ) rampVariance1interp ( bspline ) rampVariance2pos ( 0.5701598525047302 ) rampVariance2value ( 0.0625 ) rampVariance2interp ( bspline ) rampVariance3pos ( 0.8241562843322754 ) rampVariance3value ( 1 ) rampVariance3interp ( bspline ) rampVariance4pos ( 1 ) rampVariance4value ( 1 ) rampVariance4interp ( bspline )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_grid1_variance_on_attrib
opexprlanguage -s hscript $_obj_grid1_variance_on_attrib
opuserdata -n '___Version___' -v '' $_obj_grid1_variance_on_attrib
opset -p on $_obj_grid1_variance_on_attrib
opcf $arg1

# Node $_obj_grid1_pcDensity (Sop/attribwrangle)
set _obj_grid1_pcDensity = `run("opadd -e -n -v attribwrangle pcDensity")`
oplocate -x `$arg2 + 0.00044999853707849979` -y `$arg3 + -16.615992269877111` $_obj_grid1_pcDensity
opspareds '    group {         name    "folder1"         label   "Code"          parm {             name    "group"             baseparm             label   "Group"             export  none             bindselector points "Modify Points"                 "Select the points to affect and press Enter to complete."                 0 1 0xffffffff 0 grouptype 0         }         parm {             name    "grouptype"             baseparm             label   "Group Type"             export  none         }         parm {             name    "class"             baseparm             label   "Run Over"             export  none         }         parm {             name    "vex_numcount"             baseparm             label   "Number Count"             export  none         }         parm {             name    "vex_threadjobsize"             baseparm             label   "Thread Job Size"             export  none         }         groupsimple {             name    "folder_generatedparms_snippet"             label   "Generated Channel Parameters"             grouptag { "group_type" "simple" }             grouptag { "sidefx::look" "blank" }              parm {                 name    "density"                 label   "Density"                 type    toggle                 joinnext                 default { "0" }             }             parm {                 name    "color"                 label   "Color"                 type    toggle                 default { "0" }             }             parm {                 name    "maxdist"                 label   "Radius"                 type    float                 default { "0" }                 range   { 0 1 }             }             parm {                 name    "maxpt"                 label   "Maxpt"                 type    integer                 default { "0" }                 range   { 0 500 }             }             parm {                 name    "delete_pts"                 label   "Delete Pts"                 type    toggle                 joinnext                 default { "0" }             }             parm {                 name    "group_points"                 label   "Group Points"                 type    toggle                 default { "0" }                 range   { 0 10 }             }             parm {                 name    "threshold"                 label   "Threshold"                 type    float                 default { "0" }                 range   { 0 1 }             }         }          parm {             name    "snippet"             baseparm             label   "VEXpression"             export  all         }         parm {             name    "exportlist"             baseparm             label   "Attributes to Create"             export  none         }         parm {             name    "vex_strict"             baseparm             label   "Enforce Prototypes"             export  none         }     }      group {         name    "folder1_1"         label   "Bindings"          parm {             name    "autobind"             baseparm             label   "Autobind by Name"             export  none         }         multiparm {             name    "bindings"             label    "Number of Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindname#"                 baseparm                 label   "Attribute Name"                 export  none             }             parm {                 name    "bindparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "groupautobind"             baseparm             label   "Autobind Groups by Name"             export  none         }         multiparm {             name    "groupbindings"             label    "Group Bindings"             baseparm             default 0             parmtag { "autoscope" "0000000000000000" }             parmtag { "multistartoffset" "1" }              parm {                 name    "bindgroupname#"                 baseparm                 label   "Group Name"                 export  none             }             parm {                 name    "bindgroupparm#"                 baseparm                 label   "VEX Parameter"                 export  none             }         }          parm {             name    "vex_cwdpath"             baseparm             label   "Evaluation Node Path"             export  none         }         parm {             name    "vex_outputmask"             baseparm             label   "Export Parameters"             export  none         }         parm {             name    "vex_updatenmls"             baseparm             label   "Update Normals If Displaced"             export  none         }         parm {             name    "vex_matchattrib"             baseparm             label   "Attribute to Match"             export  none         }         parm {             name    "vex_inplace"             baseparm             label   "Compute Results In Place"             export  none         }         parm {             name    "vex_selectiongroup"             baseparm             label   "Output Selection Group"             export  none         }         parm {             name    "vex_precision"             baseparm             label   "VEX Precision"             export  none         }     }  ' $_obj_grid1_pcDensity
opparm $_obj_grid1_pcDensity  bindings ( 0 ) groupbindings ( 0 )
opparm $_obj_grid1_pcDensity snippet ( '//pcfind generates an array with the maximum size of maxpt\nint points[] = pcfind(0, "P", @P, chf(\'maxdist\'), chi(\'maxpt\'));\nfloat density = float(len(points)) / chi(\'maxpt\');\n\n\n//Exporting attributes\nif(chi("density") == 1)\n       setpointattrib(0, "density", @ptnum, density); //create density\nif(chi("color") == 1)\n        setpointattrib(0, "Cd", @ptnum, density); // create color\n   \n        \n//delete or select points\nif(chi("delete_pts") == 1)\n    if(density < chf("threshold"))\n        removepoint(0, @ptnum); // delete threshold\n  \nif(chi("group_points") == 1)\n    if(density < chf("threshold"))\n        setpointgroup(0,\'group_pts\', @ptnum, 1); // color threshold' ) density ( on ) maxdist ( 0.2 ) maxpt ( 50 ) threshold ( 0.5 )
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_grid1_pcDensity
opexprlanguage -s hscript $_obj_grid1_pcDensity
opuserdata -n '___Version___' -v '' $_obj_grid1_pcDensity
opset -p on $_obj_grid1_pcDensity
opcf $arg1

# Node $_obj_grid1_POP_Sim_Cache (Sop/null)
set _obj_grid1_POP_Sim_Cache = `run("opadd -e -n -v null POP_Sim_Cache")`
oplocate -x `$arg2 + 0.0034499950706958771` -y `$arg3 + -2.4170330567610168` $_obj_grid1_POP_Sim_Cache
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F on -c on -e on -b off $_obj_grid1_POP_Sim_Cache
opexprlanguage -s hscript $_obj_grid1_POP_Sim_Cache
opuserdata -n '___Version___' -v '20.0.547' $_obj_grid1_POP_Sim_Cache
opset -p on $_obj_grid1_POP_Sim_Cache
opcf $arg1

# Node $_obj_grid1_viz_speed (Sop/color)
set _obj_grid1_viz_speed = `run("opadd -e -n -v color viz_speed")`
oplocate -x `$arg2 + 3.4148118384806114` -y `$arg3 + -5.9808117202404922` $_obj_grid1_viz_speed
opparm $_obj_grid1_viz_speed  ramp ( 3 )
opparm $_obj_grid1_viz_speed colortype ( 3 ) rampattribute ( Nspeed ) ramp ( 3 ) ramp1c ( 0 0 0.8999999761581421 ) ramp2pos ( 0.5 ) ramp2c ( 0 0.8999999761581421 0.8999999761581421 ) ramp3pos ( 1 ) ramp3c ( 1 1 1 )
opcolor -c 0.88999998569488525 0.41200000047683716 0.76099997758865356 $_obj_grid1_viz_speed
opset -d off -r off -h off -f off -y off -t off -l off -s off -u off -F off -c on -e on -b off $_obj_grid1_viz_speed
opexprlanguage -s hscript $_obj_grid1_viz_speed
opuserdata -n '___Version___' -v '' $_obj_grid1_viz_speed
opuserdata -n '___toolcount___' -v '2' $_obj_grid1_viz_speed
opuserdata -n '___toolid___' -v 'sop_color' $_obj_grid1_viz_speed
opset -p on $_obj_grid1_viz_speed

opcf $arg1
opwire -n $_obj_grid1_popnet -0 $_obj_grid1_attribdelete1
opcf $arg1
opwire -n $_obj_grid1_create_nAge -0 $_obj_grid1_viz_nAge
opcf $arg1
opwire -n $_obj_grid1_attribdelete1 -0 $_obj_grid1_groupdelete1
opcf $arg1
opwire -n $_obj_grid1_pcDensity -0 $_obj_grid1_pscaleMult_density
opcf $arg1
opwire -n $_obj_grid1_variance_on_attrib -0 $_obj_grid1_create_nAge
opcf $arg1
opwire -n $_obj_grid1_create_nAge -0 $_obj_grid1_pscaleMult_nAge
opcf $arg1
opwire -n $_obj_grid1_create_speed -0 $_obj_grid1_remap_speed
opcf $arg1
opwire -n $_obj_grid1_pscaleMult_density -0 $_obj_grid1_OUT_prtPost
opcf $arg1
opwire -n $_obj_grid1_POP_Sim_Cache -0 $_obj_grid1_create_speed
opcf $arg1
opwire -n $_obj_grid1_remap_speed -0 $_obj_grid1_create_pscale_Alpha
opcf $arg1
opwire -n $_obj_grid1_pcDensity -0 $_obj_grid1_viz_density
opcf $arg1
opwire -n $_obj_grid1_create_pscale_Alpha -0 $_obj_grid1_variance_on_attrib
opcf $arg1
opwire -n $_obj_grid1_pscaleMult_nAge -0 $_obj_grid1_pcDensity
opcf $arg1
opwire -n $_obj_grid1_groupdelete1 -0 $_obj_grid1_POP_Sim_Cache
opcf $arg1
opwire -n $_obj_grid1_remap_speed -0 $_obj_grid1_viz_speed

set oidx = 0
if ($argc >= 9 && "$arg9" != "") then
    set oidx = $arg9
endif

if ($argc >= 5 && "$arg4" != "") then
    set output = $_obj_grid1_OUT_prtPost
    opwire -n $output -$arg5 $arg4
endif
if ($argc >= 6 && "$arg6" != "") then
    set input = $_obj_grid1_attribdelete1
    if ($arg8) then
        opwire -n -i $arg6 -0 $input
    else
        opwire -n -o $oidx $arg6 -0 $input
    endif
endif
opcf $saved_path
'''
hou.hscript(h_preamble + h_extra_args + h_cmd)
]]></script>
  </tool>
</shelfDocument>
